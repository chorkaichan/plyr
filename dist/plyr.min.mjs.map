{"version":3,"sources":["plyr.mjs","node_modules/rangetouch/dist/rangetouch.mjs","src/js/utils/is.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/utils/objects.js","src/js/utils/elements.js","src/js/support.js","src/js/utils/events.js","src/js/utils/promise.js","src/js/utils/style.js","src/js/html5.js","src/js/utils/arrays.js","src/js/utils/strings.js","src/js/utils/i18n.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/load-sprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/states.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/load-image.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/load-script.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/plugins/preview-thumbnails.js","src/js/source.js","src/js/utils/numbers.js","src/js/plyr.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","call","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","Symbol","iterator","from","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","o","minLen","n","toString","slice","constructor","name","test","len","arr2","e","t","r","defaults","addCSS","thumbWidth","watch","matches","document","querySelectorAll","includes","this","trigger","Event","bubbles","dispatchEvent","getConstructor","instanceOf","isNullOrUndefined","isObject","isNumber","Number","isNaN","isString","String","isBoolean","Boolean","isFunction","Function","isNodeList","NodeList","isElement","Element","isEvent","isEmpty","is","nullOrUndefined","number","string","boolean","function","array","nodeList","element","event","empty","getDecimalPlaces","concat","match","Math","max","round","parseFloat","toFixed","RangeTouch","querySelector","rangeTouch","config","init","enabled","style","userSelect","webKitUserSelect","touchAction","listeners","set","changedTouches","getAttribute","s","u","c","getBoundingClientRect","a","width","clientX","left","disabled","preventDefault","get","type","MutationObserver","addedNodes","observe","body","childList","subtree","map","documentElement","input","isWeakMap","WeakMap","isTextNode","Text","isKeyboardEvent","KeyboardEvent","isCue","window","TextTrackCue","VTTCue","isTrack","TextTrack","kind","isPromise","Promise","then","isUrl","URL","startsWith","hostname","is$1","weakMap","textNode","keyboardEvent","cue","track","promise","url","transitionEndEvent","createElement","events","WebkitTransition","MozTransition","OTransition","transition","find","repaint","delay","setTimeout","hidden","offsetHeight","browser","isIE","documentMode","isEdge","navigator","userAgent","isWebkit","isIPhone","platform","isIos","cloneDeep","JSON","parse","stringify","getDeep","path","split","reduce","extend","_len","sources","_key","shift","assign","wrap","elements","wrapper","targets","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","_ref","_ref3","_ref4","setAttribute","text","innerText","insertAfter","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hide","toggleClass","force","method","classList","contains","hasClass","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","closest","el","parentElement","nodeType","getElements","container","getElement","setFocus","tabFocus","focus","preventScroll","classNames","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","mediaType","isHTML5","media","canPlayType","textTracks","range","touch","transitions","reducedMotion","matchMedia","supportsPassiveListeners","supported","options","addEventListener","removeEventListener","toggleListener","callback","_this","toggle","passive","capture","eventListeners","on","off","once","_this2","onceCallback","args","triggerEvent","detail","CustomEvent","plyr","unbindListeners","item","ready","_this3","resolve","silencePromise","validateRatio","every","reduceAspectRatio","ratio","_ratio","height","divider","getDivider","w","h","getAspectRatio","embed","_this$media","videoWidth","videoHeight","setAspectRatio","isVideo","_ref2","padding","paddingBottom","isVimeo","vimeo","premium","offsetWidth","parseInt","getComputedStyle","offset","fullscreen","active","transform","videoFixedRatio","html5","getSources","getQualityOptions","quality","forced","setup","player","speed","onChange","_player$media","currentTime","paused","preload","readyState","playbackRate","src","play","load","cancelRequests","blankVideo","debug","log","dedupe","prev","curr","abs","generateId","prefix","floor","random","format","getPercentage","current","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toPascalCase","toCamelCase","stripHTML","fragment","createDocumentFragment","innerHTML","firstChild","getHTML","resources","youtube","i18n","{seektime}","seekTime","{title}","title","k","v","Storage","store","localStorage","getItem","json","storage","setItem","removeItem","fetch","responseType","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","insertAdjacentElement","useStorage","cached","content","result","catch","getHours","trunc","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","namespace","iconPath","iconPrefix","icon","createElementNS","aria-hidden","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","label","labelPressed","iconPressed","some","control","button","createRange","min","step","autocomplete","role","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","suffixKey","played","suffix","createTime","attrs","bindMenuItemShortcuts","menuItem","which","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","focusFirstMenuItem","createMenuItem","list","_ref$badge","_ref$checked","checked","aria-checked","flex","children","node","bind","currentTrack","forceHours","updateTimeDisplay","updateVolume","setRange","muted","pressed","updateProgress","_this4","val","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this5","tooltips","visible","show","clientRect","pageX","timeUpdate","invert","invertTime","seeking","durationUpdate","pow","hasDuration","displayDuration","toggleMenuButton","setting","updateSetting","pane","panels","default","getLabel","setQualityMenu","_this6","checkMenu","getBadge","sort","b","sorting","setCaptionsMenu","_this7","tracks","getTracks","toggled","language","unshift","setSpeedMenu","_this8","minimumSpeed","maximumSpeed","values","popup","p","firstItem","toggleMenu","composedPath","isMenuItem","getMenuSize","tab","clone","position","opacity","removeAttribute","scrollWidth","scrollHeight","_this9","size","restore","propertyName","setDownloadUrl","download","create","_this10","defaultAttributes","progressContainer","aria-haspopup","aria-controls","aria-expanded","inner","home","backButton","href","urls","isEmbed","inject","_this11","seektime","addProperty","controlPressed","_this$config","labels","parseUrl","safe","parser","buildUrlParams","params","URLSearchParams","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","trackEvents","_this$captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","enableTextTrack","has","sortIsDefault","sorted","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","autoplay","autopause","toggleInvert","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","focused","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","advertisement","qualityBadge","2160","1440","1080","720","576","480","sdk","iframe","googleIMA","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","previewThumbnails","thumbContainer","thumbContainerShown","imageContainer","timeContainer","scrubbingContainer","scrubbingContainerShown","publisherId","tagUrl","byline","portrait","transparent","customControls","referrerPolicy","rel","showinfo","iv_load_policy","modestbranding","noCookie","inactive","providers","types","getProviderByUrl","noop","Console","console","Fullscreen","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","viewport","head","property","hasProperty","cleanupViewport","part","keyCode","activeElement","first","last","shiftKey","forceFallback","native","webkitEnterFullscreen","toggleFallback","requestFullscreen","navigationUI","webkitExitFullscreen","action","cancelFullScreen","exit","enter","proxy","trapFocus","fullscreenElement","shadowRoot","getRootNode","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","setTitle","setPoster","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","controlsElement","recentTouchSeek","lastSeekTime","Date","now","migrateStyles","getPropertyValue","removeProperty","Listeners","focusTimer","lastKeyDown","timeStamp","wasKeyDown","handleKey","firstTouch","setTabFocus","setPlayerSize","measure","rect","resized","_player$fullscreen","usingNative","isEnter","_setPlayerSize","_getAspectRatio$call2","videoX","videoY","maxWidth","margin","setGutter","isAudio","ended","togglePlay","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","inputEvent","forward","toggleCaptions","code","currentTarget","attribute","hasAttribute","seekTo","loaded","startMove","endMove","startScrubbing","endScrubbing","webkitDirectionInvertedFromDevice","_map2","deltaX","deltaY","direction","sign","increaseVolume","lastKey","repeat","altKey","ctrlKey","metaKey","decreaseVolume","commonjsGlobal","globalThis","self","createCommonjsModule","fn","module","exports","loadjs_umd","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","subscribe","bundleIds","callbackFn","bundleId","depsNotFound","numWaiting","pathsNotFound","publish","q","splice","executeCallbacks","success","loadFile","numTries","isLegacyIECss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathname","pathStripped","relList","as","onbeforeload","ev","sheet","cssText","defaultPrevented","loadFiles","paths","loadjs","arg1","arg2","loadFn","returnPromise","deps","isDefined","factory","loadScript","parseId","$2","assurePlaybackState","hasPlayed","Vimeo","frameParams","sidedock","gesture","data-poster","thumbnail_url","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","currentSrc","setLoop","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","_dimensions","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","getPaused","seconds","getHost","YT","onYouTubeIframeAPIReady","getTitle","videoId","currentId","posterSrc","playerVars","hl","disablekb","cc_load_policy","cc_lang_pref","widget_referrer","onError","message","2","5","100","101","150","onPlaybackRateChange","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","speeds","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","unMute","destroy","manager","displayContainer","remove","Ads","google","ima","startSafetyTimer","managerPromise","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","setDisableCustomPlaybackForIOS10Plus","AdDisplayContainer","loader","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","requestAds","AdsRequest","adTagUrl","linearAdSlotWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","countdownTimer","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","cuePoints","getCuePoints","AdEvent","onAdEvent","cuePoint","seekElement","cuePercentage","ad","getAd","adData","getAdData","LOADED","pollCountdown","isLinear","STARTED","ALL_ADS_COMPLETED","loadAds","contentComplete","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","LOG","adError","getMessage","cancel","addCuePoints","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","initialized","zIndex","handlers","safetyTimer","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","AV_WIDTH","AV_HEIGHT","AV_CDIM2","parseVtt","vttDataString","processedList","frame","line","startTime","lineSplit","_lineSplit","_lineSplit$1$split2","matchTimes","endTime","fitRatio","outer","PreviewThumbnails","getThumbnails","render","determineContainerAutoSizing","sortAndResolve","thumbnails","promises","getThumbnail","thumbnail","frames","urlPrefix","substring","lastIndexOf","tempImage","naturalHeight","percentage","mousePosX","thumb","showImageAtCurrentTime","toggleThumbContainer","mouseDown","toggleScrubbingContainer","ceil","lastTime","scrubbing","setScrubbingContainerSize","setThumbContainerSizeAndPos","thumbNum","findIndex","hasThumb","qualityIndex","loadedImages","showingThumb","thumbFilename","thumbUrl","currentImageElement","dataset","filename","showImage","removeOldImages","loadingImage","usingSprites","previewImage","showingThumbFilename","newImage","setImageSizeAndOffset","currentImageContainer","preloadNearby","getHigherQuality","currentImage","tagName","removeDelay","deleting","oldThumbFilename","thumbnailsClone","foundOne","newThumbFilename","thumbURL","currentQualityIndex","previewImageHeight","thumbContainerHeight","clearShowing","clientHeight","clientWidth","sizeSpecifiedInCSS","thumbAspectRatio","thumbHeight","setThumbContainerPos","seekbarRect","plyrRect","minVal","maxVal","right","previewPos","_fitRatio","multiplier","top","lastMouseMoveTime","currentScrubbingImageElement","currentThumbnailImageElement","insertElements","change","_sources$","_sources$$provider","crossorigin","clamp","Plyr","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","original","unload","failed","jQuery","search","truthy","searchParams","tabindex","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","updateStorage","webkitSetPresentationMode","requestPictureInPicture","exitPictureInPicture","webkitPresentationMode","pictureInPictureElement","inline"],"mappings":"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","file":"plyr.min.mjs","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _classCallCheck$1(e, t) {\n  if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _defineProperties$1(e, t) {\n  for (var n = 0; n < t.length; n++) {\n    var r = t[n];\n    r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n  }\n}\n\nfunction _createClass$1(e, t, n) {\n  return t && _defineProperties$1(e.prototype, t), n && _defineProperties$1(e, n), e;\n}\n\nfunction _defineProperty$1(e, t, n) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\n\nfunction ownKeys$1(e, t) {\n  var n = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n\n  return n;\n}\n\nfunction _objectSpread2$1(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? ownKeys$1(Object(n), !0).forEach(function (t) {\n      _defineProperty$1(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys$1(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n\n  return e;\n}\n\nvar defaults = {\n  addCSS: !0,\n  thumbWidth: 15,\n  watch: !0\n};\n\nfunction matches(e, t) {\n  return function () {\n    return Array.from(document.querySelectorAll(t)).includes(this);\n  }.call(e, t);\n}\n\nfunction trigger(e, t) {\n  if (e && t) {\n    var n = new Event(t, {\n      bubbles: !0\n    });\n    e.dispatchEvent(n);\n  }\n}\n\nvar getConstructor = function getConstructor(e) {\n  return null != e ? e.constructor : null;\n},\n    instanceOf = function instanceOf(e, t) {\n  return !!(e && t && e instanceof t);\n},\n    isNullOrUndefined = function isNullOrUndefined(e) {\n  return null == e;\n},\n    isObject = function isObject(e) {\n  return getConstructor(e) === Object;\n},\n    isNumber = function isNumber(e) {\n  return getConstructor(e) === Number && !Number.isNaN(e);\n},\n    isString = function isString(e) {\n  return getConstructor(e) === String;\n},\n    isBoolean = function isBoolean(e) {\n  return getConstructor(e) === Boolean;\n},\n    isFunction = function isFunction(e) {\n  return getConstructor(e) === Function;\n},\n    isArray = function isArray(e) {\n  return Array.isArray(e);\n},\n    isNodeList = function isNodeList(e) {\n  return instanceOf(e, NodeList);\n},\n    isElement = function isElement(e) {\n  return instanceOf(e, Element);\n},\n    isEvent = function isEvent(e) {\n  return instanceOf(e, Event);\n},\n    isEmpty = function isEmpty(e) {\n  return isNullOrUndefined(e) || (isString(e) || isArray(e) || isNodeList(e)) && !e.length || isObject(e) && !Object.keys(e).length;\n},\n    is = {\n  nullOrUndefined: isNullOrUndefined,\n  object: isObject,\n  number: isNumber,\n  string: isString,\n  boolean: isBoolean,\n  function: isFunction,\n  array: isArray,\n  nodeList: isNodeList,\n  element: isElement,\n  event: isEvent,\n  empty: isEmpty\n};\n\nfunction getDecimalPlaces(e) {\n  var t = \"\".concat(e).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n  return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0;\n}\n\nfunction round(e, t) {\n  if (1 > t) {\n    var n = getDecimalPlaces(t);\n    return parseFloat(e.toFixed(n));\n  }\n\n  return Math.round(e / t) * t;\n}\n\nvar RangeTouch = function () {\n  function e(t, n) {\n    _classCallCheck$1(this, e), is.element(t) ? this.element = t : is.string(t) && (this.element = document.querySelector(t)), is.element(this.element) && is.empty(this.element.rangeTouch) && (this.config = _objectSpread2$1({}, defaults, {}, n), this.init());\n  }\n\n  return _createClass$1(e, [{\n    key: \"init\",\n    value: function value() {\n      e.enabled && (this.config.addCSS && (this.element.style.userSelect = \"none\", this.element.style.webKitUserSelect = \"none\", this.element.style.touchAction = \"manipulation\"), this.listeners(!0), this.element.rangeTouch = this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function value() {\n      e.enabled && (this.config.addCSS && (this.element.style.userSelect = \"\", this.element.style.webKitUserSelect = \"\", this.element.style.touchAction = \"\"), this.listeners(!1), this.element.rangeTouch = null);\n    }\n  }, {\n    key: \"listeners\",\n    value: function value(e) {\n      var t = this,\n          n = e ? \"addEventListener\" : \"removeEventListener\";\n      [\"touchstart\", \"touchmove\", \"touchend\"].forEach(function (e) {\n        t.element[n](e, function (e) {\n          return t.set(e);\n        }, !1);\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function value(t) {\n      if (!e.enabled || !is.event(t)) return null;\n      var n,\n          r = t.target,\n          i = t.changedTouches[0],\n          o = parseFloat(r.getAttribute(\"min\")) || 0,\n          s = parseFloat(r.getAttribute(\"max\")) || 100,\n          u = parseFloat(r.getAttribute(\"step\")) || 1,\n          c = r.getBoundingClientRect(),\n          a = 100 / c.width * (this.config.thumbWidth / 2) / 100;\n      return 0 > (n = 100 / c.width * (i.clientX - c.left)) ? n = 0 : 100 < n && (n = 100), 50 > n ? n -= (100 - 2 * n) * a : 50 < n && (n += 2 * (n - 50) * a), o + round(n / 100 * (s - o), u);\n    }\n  }, {\n    key: \"set\",\n    value: function value(t) {\n      e.enabled && is.event(t) && !t.target.disabled && (t.preventDefault(), t.target.value = this.get(t), trigger(t.target, \"touchend\" === t.type ? \"change\" : \"input\"));\n    }\n  }], [{\n    key: \"setup\",\n    value: function value(t) {\n      var n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},\n          r = null;\n      if (is.empty(t) || is.string(t) ? r = Array.from(document.querySelectorAll(is.string(t) ? t : 'input[type=\"range\"]')) : is.element(t) ? r = [t] : is.nodeList(t) ? r = Array.from(t) : is.array(t) && (r = t.filter(is.element)), is.empty(r)) return null;\n\n      var i = _objectSpread2$1({}, defaults, {}, n);\n\n      if (is.string(t) && i.watch) {\n        var o = new MutationObserver(function (n) {\n          Array.from(n).forEach(function (n) {\n            Array.from(n.addedNodes).forEach(function (n) {\n              is.element(n) && matches(n, t) && new e(n, i);\n            });\n          });\n        });\n        o.observe(document.body, {\n          childList: !0,\n          subtree: !0\n        });\n      }\n\n      return r.map(function (t) {\n        return new e(t, n);\n      });\n    }\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return \"ontouchstart\" in document.documentElement;\n    }\n  }]), e;\n}();\n\n// ==========================================================================\n// Type checking utils\n// ==========================================================================\nvar getConstructor$1 = function getConstructor(input) {\n  return input !== null && typeof input !== 'undefined' ? input.constructor : null;\n};\n\nvar instanceOf$1 = function instanceOf(input, constructor) {\n  return Boolean(input && constructor && input instanceof constructor);\n};\n\nvar isNullOrUndefined$1 = function isNullOrUndefined(input) {\n  return input === null || typeof input === 'undefined';\n};\n\nvar isObject$1 = function isObject(input) {\n  return getConstructor$1(input) === Object;\n};\n\nvar isNumber$1 = function isNumber(input) {\n  return getConstructor$1(input) === Number && !Number.isNaN(input);\n};\n\nvar isString$1 = function isString(input) {\n  return getConstructor$1(input) === String;\n};\n\nvar isBoolean$1 = function isBoolean(input) {\n  return getConstructor$1(input) === Boolean;\n};\n\nvar isFunction$1 = function isFunction(input) {\n  return getConstructor$1(input) === Function;\n};\n\nvar isArray$1 = function isArray(input) {\n  return Array.isArray(input);\n};\n\nvar isWeakMap = function isWeakMap(input) {\n  return instanceOf$1(input, WeakMap);\n};\n\nvar isNodeList$1 = function isNodeList(input) {\n  return instanceOf$1(input, NodeList);\n};\n\nvar isElement$1 = function isElement(input) {\n  return instanceOf$1(input, Element);\n};\n\nvar isTextNode = function isTextNode(input) {\n  return getConstructor$1(input) === Text;\n};\n\nvar isEvent$1 = function isEvent(input) {\n  return instanceOf$1(input, Event);\n};\n\nvar isKeyboardEvent = function isKeyboardEvent(input) {\n  return instanceOf$1(input, KeyboardEvent);\n};\n\nvar isCue = function isCue(input) {\n  return instanceOf$1(input, window.TextTrackCue) || instanceOf$1(input, window.VTTCue);\n};\n\nvar isTrack = function isTrack(input) {\n  return instanceOf$1(input, TextTrack) || !isNullOrUndefined$1(input) && isString$1(input.kind);\n};\n\nvar isPromise = function isPromise(input) {\n  return instanceOf$1(input, Promise) && isFunction$1(input.then);\n};\n\nvar isEmpty$1 = function isEmpty(input) {\n  return isNullOrUndefined$1(input) || (isString$1(input) || isArray$1(input) || isNodeList$1(input)) && !input.length || isObject$1(input) && !Object.keys(input).length;\n};\n\nvar isUrl = function isUrl(input) {\n  // Accept a URL object\n  if (instanceOf$1(input, window.URL)) {\n    return true;\n  } // Must be string from here\n\n\n  if (!isString$1(input)) {\n    return false;\n  } // Add the protocol if required\n\n\n  var string = input;\n\n  if (!input.startsWith('http://') || !input.startsWith('https://')) {\n    string = \"http://\".concat(input);\n  }\n\n  try {\n    return !isEmpty$1(new URL(string).hostname);\n  } catch (e) {\n    return false;\n  }\n};\n\nvar is$1 = {\n  nullOrUndefined: isNullOrUndefined$1,\n  object: isObject$1,\n  number: isNumber$1,\n  string: isString$1,\n  boolean: isBoolean$1,\n  function: isFunction$1,\n  array: isArray$1,\n  weakMap: isWeakMap,\n  nodeList: isNodeList$1,\n  element: isElement$1,\n  textNode: isTextNode,\n  event: isEvent$1,\n  keyboardEvent: isKeyboardEvent,\n  cue: isCue,\n  track: isTrack,\n  promise: isPromise,\n  url: isUrl,\n  empty: isEmpty$1\n};\n\n// ==========================================================================\nvar transitionEndEvent = function () {\n  var element = document.createElement('span');\n  var events = {\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'transitionend',\n    OTransition: 'oTransitionEnd otransitionend',\n    transition: 'transitionend'\n  };\n  var type = Object.keys(events).find(function (event) {\n    return element.style[event] !== undefined;\n  });\n  return is$1.string(type) ? events[type] : false;\n}(); // Force repaint of element\n\nfunction repaint(element, delay) {\n  setTimeout(function () {\n    try {\n      // eslint-disable-next-line no-param-reassign\n      element.hidden = true; // eslint-disable-next-line no-unused-expressions\n\n      element.offsetHeight; // eslint-disable-next-line no-param-reassign\n\n      element.hidden = false;\n    } catch (e) {// Do nothing\n    }\n  }, delay);\n}\n\n// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\nvar browser = {\n  isIE:\n  /* @cc_on!@ */\n   !!document.documentMode,\n  isEdge: window.navigator.userAgent.includes('Edge'),\n  isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n  isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n  isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform)\n};\n\nfunction cloneDeep(object) {\n  return JSON.parse(JSON.stringify(object));\n} // Get a nested value in an object\n\nfunction getDeep(object, path) {\n  return path.split('.').reduce(function (obj, key) {\n    return obj && obj[key];\n  }, object);\n} // Deep extend destination object with N more objects\n\nfunction extend() {\n  var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  var source = sources.shift();\n\n  if (!is$1.object(source)) {\n    return target;\n  }\n\n  Object.keys(source).forEach(function (key) {\n    if (is$1.object(source[key])) {\n      if (!Object.keys(target).includes(key)) {\n        Object.assign(target, _defineProperty({}, key, {}));\n      }\n\n      extend(target[key], source[key]);\n    } else {\n      Object.assign(target, _defineProperty({}, key, source[key]));\n    }\n  });\n  return extend.apply(void 0, [target].concat(sources));\n}\n\nfunction wrap(elements, wrapper) {\n  // Convert `elements` to an array, if necessary.\n  var targets = elements.length ? elements : [elements]; // Loops backwards to prevent having to clone the wrapper on the\n  // first element (see `child` below).\n\n  Array.from(targets).reverse().forEach(function (element, index) {\n    var child = index > 0 ? wrapper.cloneNode(true) : wrapper; // Cache the current parent and sibling.\n\n    var parent = element.parentNode;\n    var sibling = element.nextSibling; // Wrap the element (is automatically removed from its current\n    // parent).\n\n    child.appendChild(element); // If the element had a sibling, insert the wrapper before\n    // the sibling to maintain the HTML structure; otherwise, just\n    // append it to the parent.\n\n    if (sibling) {\n      parent.insertBefore(child, sibling);\n    } else {\n      parent.appendChild(child);\n    }\n  });\n} // Set attributes\n\nfunction setAttributes(element, attributes) {\n  if (!is$1.element(element) || is$1.empty(attributes)) {\n    return;\n  } // Assume null and undefined attributes should be left out,\n  // Setting them would otherwise convert them to \"null\" and \"undefined\"\n\n\n  Object.entries(attributes).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        value = _ref2[1];\n\n    return !is$1.nullOrUndefined(value);\n  }).forEach(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return element.setAttribute(key, value);\n  });\n} // Create a DocumentFragment\n\nfunction createElement(type, attributes, text) {\n  // Create a new <element>\n  var element = document.createElement(type); // Set all passed attributes\n\n  if (is$1.object(attributes)) {\n    setAttributes(element, attributes);\n  } // Add text node\n\n\n  if (is$1.string(text)) {\n    element.innerText = text;\n  } // Return built element\n\n\n  return element;\n} // Inaert an element after another\n\nfunction insertAfter(element, target) {\n  if (!is$1.element(element) || !is$1.element(target)) {\n    return;\n  }\n\n  target.parentNode.insertBefore(element, target.nextSibling);\n} // Insert a DocumentFragment\n\nfunction insertElement(type, parent, attributes, text) {\n  if (!is$1.element(parent)) {\n    return;\n  }\n\n  parent.appendChild(createElement(type, attributes, text));\n} // Remove element(s)\n\nfunction removeElement(element) {\n  if (is$1.nodeList(element) || is$1.array(element)) {\n    Array.from(element).forEach(removeElement);\n    return;\n  }\n\n  if (!is$1.element(element) || !is$1.element(element.parentNode)) {\n    return;\n  }\n\n  element.parentNode.removeChild(element);\n} // Remove all child elements\n\nfunction emptyElement(element) {\n  if (!is$1.element(element)) {\n    return;\n  }\n\n  var length = element.childNodes.length;\n\n  while (length > 0) {\n    element.removeChild(element.lastChild);\n    length -= 1;\n  }\n} // Replace element\n\nfunction replaceElement(newChild, oldChild) {\n  if (!is$1.element(oldChild) || !is$1.element(oldChild.parentNode) || !is$1.element(newChild)) {\n    return null;\n  }\n\n  oldChild.parentNode.replaceChild(newChild, oldChild);\n  return newChild;\n} // Get an attribute object from a string selector\n\nfunction getAttributesFromSelector(sel, existingAttributes) {\n  // For example:\n  // '.test' to { class: 'test' }\n  // '#test' to { id: 'test' }\n  // '[data-test=\"test\"]' to { 'data-test': 'test' }\n  if (!is$1.string(sel) || is$1.empty(sel)) {\n    return {};\n  }\n\n  var attributes = {};\n  var existing = extend({}, existingAttributes);\n  sel.split(',').forEach(function (s) {\n    // Remove whitespace\n    var selector = s.trim();\n    var className = selector.replace('.', '');\n    var stripped = selector.replace(/[[\\]]/g, ''); // Get the parts and value\n\n    var parts = stripped.split('=');\n\n    var _parts = _slicedToArray(parts, 1),\n        key = _parts[0];\n\n    var value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : ''; // Get the first character\n\n    var start = selector.charAt(0);\n\n    switch (start) {\n      case '.':\n        // Add to existing classname\n        if (is$1.string(existing.class)) {\n          attributes.class = \"\".concat(existing.class, \" \").concat(className);\n        } else {\n          attributes.class = className;\n        }\n\n        break;\n\n      case '#':\n        // ID selector\n        attributes.id = selector.replace('#', '');\n        break;\n\n      case '[':\n        // Attribute selector\n        attributes[key] = value;\n        break;\n    }\n  });\n  return extend(existing, attributes);\n} // Toggle hidden\n\nfunction toggleHidden(element, hidden) {\n  if (!is$1.element(element)) {\n    return;\n  }\n\n  var hide = hidden;\n\n  if (!is$1.boolean(hide)) {\n    hide = !element.hidden;\n  } // eslint-disable-next-line no-param-reassign\n\n\n  element.hidden = hide;\n} // Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\n\nfunction toggleClass(element, className, force) {\n  if (is$1.nodeList(element)) {\n    return Array.from(element).map(function (e) {\n      return toggleClass(e, className, force);\n    });\n  }\n\n  if (is$1.element(element)) {\n    var method = 'toggle';\n\n    if (typeof force !== 'undefined') {\n      method = force ? 'add' : 'remove';\n    }\n\n    element.classList[method](className);\n    return element.classList.contains(className);\n  }\n\n  return false;\n} // Has class name\n\nfunction hasClass(element, className) {\n  return is$1.element(element) && element.classList.contains(className);\n} // Element matches selector\n\nfunction matches$1(element, selector) {\n  var _Element = Element,\n      prototype = _Element.prototype;\n\n  function match() {\n    return Array.from(document.querySelectorAll(selector)).includes(this);\n  }\n\n  var method = prototype.matches || prototype.webkitMatchesSelector || prototype.mozMatchesSelector || prototype.msMatchesSelector || match;\n  return method.call(element, selector);\n} // Closest ancestor element matching selector (also tests element itself)\n\nfunction closest(element, selector) {\n  var _Element2 = Element,\n      prototype = _Element2.prototype; // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n\n  function closestElement() {\n    var el = this;\n\n    do {\n      if (matches$1.matches(el, selector)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  }\n\n  var method = prototype.closest || closestElement;\n  return method.call(element, selector);\n} // Find all elements\n\nfunction getElements(selector) {\n  return this.elements.container.querySelectorAll(selector);\n} // Find a single element\n\nfunction getElement(selector) {\n  return this.elements.container.querySelector(selector);\n} // Set focus and tab focus class\n\nfunction setFocus() {\n  var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var tabFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!is$1.element(element)) {\n    return;\n  } // Set regular focus\n\n\n  element.focus({\n    preventScroll: true\n  }); // If we want to mimic keyboard focus via tab\n\n  if (tabFocus) {\n    toggleClass(element, this.config.classNames.tabFocus);\n  }\n}\n\nvar defaultCodecs = {\n  'audio/ogg': 'vorbis',\n  'audio/wav': '1',\n  'video/webm': 'vp8, vorbis',\n  'video/mp4': 'avc1.42E01E, mp4a.40.2',\n  'video/ogg': 'theora'\n}; // Check for feature support\n\nvar support = {\n  // Basic support\n  audio: 'canPlayType' in document.createElement('audio'),\n  video: 'canPlayType' in document.createElement('video'),\n  // Check for support\n  // Basic functionality vs full UI\n  check: function check(type, provider, playsinline) {\n    var canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n    var api = support[type] || provider !== 'html5';\n    var ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n    return {\n      api: api,\n      ui: ui\n    };\n  },\n  // Picture-in-picture support\n  // Safari & Chrome only currently\n  pip: true,\n  // Airplay support\n  // Safari only currently\n  airplay: is$1.function(window.WebKitPlaybackTargetAvailabilityEvent),\n  // Inline playback support\n  // https://webkit.org/blog/6784/new-video-policies-for-ios/\n  playsinline: 'playsInline' in document.createElement('video'),\n  // Check for mime type support against a player instance\n  // Credits: http://diveintohtml5.info/everything.html\n  // Related: http://www.leanbackplayer.com/test/h5mt.html\n  mime: function mime(input) {\n    if (is$1.empty(input)) {\n      return false;\n    }\n\n    var _input$split = input.split('/'),\n        _input$split2 = _slicedToArray(_input$split, 1),\n        mediaType = _input$split2[0];\n\n    var type = input; // Verify we're using HTML5 and there's no media type mismatch\n\n    if (!this.isHTML5 || mediaType !== this.type) {\n      return false;\n    } // Add codec if required\n\n\n    if (Object.keys(defaultCodecs).includes(type)) {\n      type += \"; codecs=\\\"\".concat(defaultCodecs[input], \"\\\"\");\n    }\n\n    try {\n      return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n    } catch (e) {\n      return false;\n    }\n  },\n  // Check for textTracks support\n  textTracks: 'textTracks' in document.createElement('video'),\n  // <input type=\"range\"> Sliders\n  rangeInput: function () {\n    var range = document.createElement('input');\n    range.type = 'range';\n    return range.type === 'range';\n  }(),\n  // Touch\n  // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n  touch: 'ontouchstart' in document.documentElement,\n  // Detect transitions support\n  transitions: transitionEndEvent !== false,\n  // Reduced motion iOS & MacOS setting\n  // https://webkit.org/blog/7551/responsive-design-for-motion/\n  reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches\n};\n\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\n\nvar supportsPassiveListeners = function () {\n  // Test via a getter in the options object to see if the passive property is accessed\n  var supported = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supported = true;\n        return null;\n      }\n    });\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {// Do nothing\n  }\n\n  return supported;\n}(); // Toggle event listener\n\n\nfunction toggleListener(element, event, callback) {\n  var _this = this;\n\n  var toggle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var passive = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  var capture = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n  // Bail if no element, event, or callback\n  if (!element || !('addEventListener' in element) || is$1.empty(event) || !is$1.function(callback)) {\n    return;\n  } // Allow multiple events\n\n\n  var events = event.split(' '); // Build options\n  // Default to just the capture boolean for browsers with no passive listener support\n\n  var options = capture; // If passive events listeners are supported\n\n  if (supportsPassiveListeners) {\n    options = {\n      // Whether the listener can be passive (i.e. default never prevented)\n      passive: passive,\n      // Whether the listener is a capturing listener or not\n      capture: capture\n    };\n  } // If a single node is passed, bind the event listener\n\n\n  events.forEach(function (type) {\n    if (_this && _this.eventListeners && toggle) {\n      // Cache event listener\n      _this.eventListeners.push({\n        element: element,\n        type: type,\n        callback: callback,\n        options: options\n      });\n    }\n\n    element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n  });\n} // Bind event handler\n\nfunction on(element) {\n  var events = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var callback = arguments.length > 2 ? arguments[2] : undefined;\n  var passive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var capture = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  toggleListener.call(this, element, events, callback, true, passive, capture);\n} // Unbind event handler\n\nfunction off(element) {\n  var events = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var callback = arguments.length > 2 ? arguments[2] : undefined;\n  var passive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var capture = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  toggleListener.call(this, element, events, callback, false, passive, capture);\n} // Bind once-only event handler\n\nfunction once(element) {\n  var _this2 = this;\n\n  var events = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var callback = arguments.length > 2 ? arguments[2] : undefined;\n  var passive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var capture = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  var onceCallback = function onceCallback() {\n    off(element, events, onceCallback, passive, capture);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(_this2, args);\n  };\n\n  toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n} // Trigger event\n\nfunction triggerEvent(element) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var bubbles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var detail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  // Bail if no element\n  if (!is$1.element(element) || is$1.empty(type)) {\n    return;\n  } // Create and dispatch the event\n\n\n  var event = new CustomEvent(type, {\n    bubbles: bubbles,\n    detail: _objectSpread2(_objectSpread2({}, detail), {}, {\n      plyr: this\n    })\n  }); // Dispatch the event\n\n  element.dispatchEvent(event);\n} // Unbind all cached event listeners\n\nfunction unbindListeners() {\n  if (this && this.eventListeners) {\n    this.eventListeners.forEach(function (item) {\n      var element = item.element,\n          type = item.type,\n          callback = item.callback,\n          options = item.options;\n      element.removeEventListener(type, callback, options);\n    });\n    this.eventListeners = [];\n  }\n} // Run method when / if player is ready\n\nfunction ready() {\n  var _this3 = this;\n\n  return new Promise(function (resolve) {\n    return _this3.ready ? setTimeout(resolve, 0) : on.call(_this3, _this3.elements.container, 'ready', resolve);\n  }).then(function () {});\n}\n\n/**\n * Silence a Promise-like object.\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n * @param  {Object} value An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (is$1.promise(value)) {\n    value.then(null, function () {});\n  }\n}\n\nfunction validateRatio(input) {\n  if (!is$1.array(input) && (!is$1.string(input) || !input.includes(':'))) {\n    return false;\n  }\n\n  var ratio = is$1.array(input) ? input : input.split(':');\n  return ratio.map(Number).every(is$1.number);\n}\nfunction reduceAspectRatio(ratio) {\n  if (!is$1.array(ratio) || !ratio.every(is$1.number)) {\n    return null;\n  }\n\n  var _ratio = _slicedToArray(ratio, 2),\n      width = _ratio[0],\n      height = _ratio[1];\n\n  var getDivider = function getDivider(w, h) {\n    return h === 0 ? w : getDivider(h, w % h);\n  };\n\n  var divider = getDivider(width, height);\n  return [width / divider, height / divider];\n}\nfunction getAspectRatio(input) {\n  var parse = function parse(ratio) {\n    return validateRatio(ratio) ? ratio.split(':').map(Number) : null;\n  }; // Try provided ratio\n\n\n  var ratio = parse(input); // Get from config\n\n  if (ratio === null) {\n    ratio = parse(this.config.ratio);\n  } // Get from embed\n\n\n  if (ratio === null && !is$1.empty(this.embed) && is$1.array(this.embed.ratio)) {\n    ratio = this.embed.ratio;\n  } // Get from HTML5 video\n\n\n  if (ratio === null && this.isHTML5) {\n    var _this$media = this.media,\n        videoWidth = _this$media.videoWidth,\n        videoHeight = _this$media.videoHeight;\n    ratio = reduceAspectRatio([videoWidth, videoHeight]);\n  }\n\n  return ratio;\n} // Set aspect ratio for responsive container\n\nfunction setAspectRatio(input) {\n  if (!this.isVideo) {\n    return {};\n  }\n\n  var wrapper = this.elements.wrapper;\n  var ratio = getAspectRatio.call(this, input);\n\n  var _ref = is$1.array(ratio) ? ratio : [0, 0],\n      _ref2 = _slicedToArray(_ref, 2),\n      w = _ref2[0],\n      h = _ref2[1];\n\n  var padding = 100 / w * h;\n  wrapper.style.paddingBottom = \"\".concat(padding, \"%\"); // For Vimeo we have an extra <div> to hide the standard controls and UI\n\n  if (this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {\n    var height = 100 / this.media.offsetWidth * parseInt(window.getComputedStyle(this.media).paddingBottom, 10);\n    var offset = (height - padding) / (height / 50);\n\n    if (this.fullscreen.active) {\n      wrapper.style.paddingBottom = null;\n    } else {\n      this.media.style.transform = \"translateY(-\".concat(offset, \"%)\");\n    }\n  } else if (this.isHTML5) {\n    wrapper.classList.toggle(this.config.classNames.videoFixedRatio, ratio !== null);\n  }\n\n  return {\n    padding: padding,\n    ratio: ratio\n  };\n}\n\n// ==========================================================================\nvar html5 = {\n  getSources: function getSources() {\n    var _this = this;\n\n    if (!this.isHTML5) {\n      return [];\n    }\n\n    var sources = Array.from(this.media.querySelectorAll('source')); // Filter out unsupported sources (if type is specified)\n\n    return sources.filter(function (source) {\n      var type = source.getAttribute('type');\n\n      if (is$1.empty(type)) {\n        return true;\n      }\n\n      return support.mime.call(_this, type);\n    });\n  },\n  // Get quality levels\n  getQualityOptions: function getQualityOptions() {\n    // Whether we're forcing all options (e.g. for streaming)\n    if (this.config.quality.forced) {\n      return this.config.quality.options;\n    } // Get sizes from <source> elements\n\n\n    return html5.getSources.call(this).map(function (source) {\n      return Number(source.getAttribute('size'));\n    }).filter(Boolean);\n  },\n  setup: function setup() {\n    if (!this.isHTML5) {\n      return;\n    }\n\n    var player = this; // Set speed options from config\n\n    player.options.speed = player.config.speed.options; // Set aspect ratio if fixed\n\n    if (!is$1.empty(this.config.ratio)) {\n      setAspectRatio.call(player);\n    } // Quality\n\n\n    Object.defineProperty(player.media, 'quality', {\n      get: function get() {\n        // Get sources\n        var sources = html5.getSources.call(player);\n        var source = sources.find(function (s) {\n          return s.getAttribute('src') === player.source;\n        }); // Return size, if match is found\n\n        return source && Number(source.getAttribute('size'));\n      },\n      set: function set(input) {\n        if (player.quality === input) {\n          return;\n        } // If we're using an an external handler...\n\n\n        if (player.config.quality.forced && is$1.function(player.config.quality.onChange)) {\n          player.config.quality.onChange(input);\n        } else {\n          // Get sources\n          var sources = html5.getSources.call(player); // Get first match for requested size\n\n          var source = sources.find(function (s) {\n            return Number(s.getAttribute('size')) === input;\n          }); // No matching source found\n\n          if (!source) {\n            return;\n          } // Get current state\n\n\n          var _player$media = player.media,\n              currentTime = _player$media.currentTime,\n              paused = _player$media.paused,\n              preload = _player$media.preload,\n              readyState = _player$media.readyState,\n              playbackRate = _player$media.playbackRate; // Set new source\n\n          player.media.src = source.getAttribute('src'); // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n\n          if (preload !== 'none' || readyState) {\n            // Restore time\n            player.once('loadedmetadata', function () {\n              player.speed = playbackRate;\n              player.currentTime = currentTime; // Resume playing\n\n              if (!paused) {\n                silencePromise(player.play());\n              }\n            }); // Load new source\n\n            player.media.load();\n          }\n        } // Trigger change event\n\n\n        triggerEvent.call(player, player.media, 'qualitychange', false, {\n          quality: input\n        });\n      }\n    });\n  },\n  // Cancel current network requests\n  // See https://github.com/sampotts/plyr/issues/174\n  cancelRequests: function cancelRequests() {\n    if (!this.isHTML5) {\n      return;\n    } // Remove child sources\n\n\n    removeElement(html5.getSources.call(this)); // Set blank video src attribute\n    // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n    // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n\n    this.media.setAttribute('src', this.config.blankVideo); // Load the new empty source\n    // This will cancel existing requests\n    // See https://github.com/sampotts/plyr/issues/174\n\n    this.media.load(); // Debugging\n\n    this.debug.log('Cancelled network requests');\n  }\n};\n\n// ==========================================================================\n\nfunction dedupe(array) {\n  if (!is$1.array(array)) {\n    return array;\n  }\n\n  return array.filter(function (item, index) {\n    return array.indexOf(item) === index;\n  });\n} // Get the closest value in an array\n\nfunction closest$1(array, value) {\n  if (!is$1.array(array) || !array.length) {\n    return null;\n  }\n\n  return array.reduce(function (prev, curr) {\n    return Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev;\n  });\n}\n\n// ==========================================================================\n\nfunction generateId(prefix) {\n  return \"\".concat(prefix, \"-\").concat(Math.floor(Math.random() * 10000));\n} // Format string\n\nfunction format(input) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (is$1.empty(input)) {\n    return input;\n  }\n\n  return input.toString().replace(/{(\\d+)}/g, function (match, i) {\n    return args[i].toString();\n  });\n} // Get percentage\n\nfunction getPercentage(current, max) {\n  if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n    return 0;\n  }\n\n  return (current / max * 100).toFixed(2);\n} // Replace all occurances of a string in a string\n\nvar replaceAll = function replaceAll() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var find = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var replace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return input.replace(new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'), replace.toString());\n}; // Convert to title case\n\nvar toTitleCase = function toTitleCase() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return input.toString().replace(/\\w\\S*/g, function (text) {\n    return text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();\n  });\n}; // Convert string to pascalCase\n\nfunction toPascalCase() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var string = input.toString(); // Convert kebab case\n\n  string = replaceAll(string, '-', ' '); // Convert snake case\n\n  string = replaceAll(string, '_', ' '); // Convert to title case\n\n  string = toTitleCase(string); // Convert to pascal case\n\n  return replaceAll(string, ' ', '');\n} // Convert string to pascalCase\n\nfunction toCamelCase() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var string = input.toString(); // Convert to pascal case\n\n  string = toPascalCase(string); // Convert first character to lowercase\n\n  return string.charAt(0).toLowerCase() + string.slice(1);\n} // Remove HTML from a string\n\nfunction stripHTML(source) {\n  var fragment = document.createDocumentFragment();\n  var element = document.createElement('div');\n  fragment.appendChild(element);\n  element.innerHTML = source;\n  return fragment.firstChild.innerText;\n} // Like outerHTML, but also works for DocumentFragment\n\nfunction getHTML(element) {\n  var wrapper = document.createElement('div');\n  wrapper.appendChild(element);\n  return wrapper.innerHTML;\n}\n\nvar resources = {\n  pip: 'PIP',\n  airplay: 'AirPlay',\n  html5: 'HTML5',\n  vimeo: 'Vimeo',\n  youtube: 'YouTube'\n};\nvar i18n = {\n  get: function get() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (is$1.empty(key) || is$1.empty(config)) {\n      return '';\n    }\n\n    var string = getDeep(config.i18n, key);\n\n    if (is$1.empty(string)) {\n      if (Object.keys(resources).includes(key)) {\n        return resources[key];\n      }\n\n      return '';\n    }\n\n    var replace = {\n      '{seektime}': config.seekTime,\n      '{title}': config.title\n    };\n    Object.entries(replace).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          k = _ref2[0],\n          v = _ref2[1];\n\n      string = replaceAll(string, k, v);\n    });\n    return string;\n  }\n};\n\nvar Storage = /*#__PURE__*/function () {\n  function Storage(player) {\n    var _this = this;\n\n    _classCallCheck(this, Storage);\n\n    _defineProperty(this, \"get\", function (key) {\n      if (!Storage.supported || !_this.enabled) {\n        return null;\n      }\n\n      var store = window.localStorage.getItem(_this.key);\n\n      if (is$1.empty(store)) {\n        return null;\n      }\n\n      var json = JSON.parse(store);\n      return is$1.string(key) && key.length ? json[key] : json;\n    });\n\n    _defineProperty(this, \"set\", function (object) {\n      // Bail if we don't have localStorage support or it's disabled\n      if (!Storage.supported || !_this.enabled) {\n        return;\n      } // Can only store objectst\n\n\n      if (!is$1.object(object)) {\n        return;\n      } // Get current storage\n\n\n      var storage = _this.get(); // Default to empty object\n\n\n      if (is$1.empty(storage)) {\n        storage = {};\n      } // Update the working copy of the values\n\n\n      extend(storage, object); // Update storage\n\n      window.localStorage.setItem(_this.key, JSON.stringify(storage));\n    });\n\n    this.enabled = player.config.storage.enabled;\n    this.key = player.config.storage.key;\n  } // Check for actual support (see if we can use it)\n\n\n  _createClass(Storage, null, [{\n    key: \"supported\",\n    get: function get() {\n      try {\n        if (!('localStorage' in window)) {\n          return false;\n        }\n\n        var test = '___test'; // Try to use it (it might be disabled, e.g. user is in private mode)\n        // see: https://github.com/sampotts/plyr/issues/131\n\n        window.localStorage.setItem(test, test);\n        window.localStorage.removeItem(test);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n  }]);\n\n  return Storage;\n}();\n\n// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\nfunction fetch(url) {\n  var responseType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text';\n  return new Promise(function (resolve, reject) {\n    try {\n      var request = new XMLHttpRequest(); // Check for CORS support\n\n      if (!('withCredentials' in request)) {\n        return;\n      }\n\n      request.addEventListener('load', function () {\n        if (responseType === 'text') {\n          try {\n            resolve(JSON.parse(request.responseText));\n          } catch (e) {\n            resolve(request.responseText);\n          }\n        } else {\n          resolve(request.response);\n        }\n      });\n      request.addEventListener('error', function () {\n        throw new Error(request.status);\n      });\n      request.open('GET', url, true); // Set the required response type\n\n      request.responseType = responseType;\n      request.send();\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n// ==========================================================================\n\nfunction loadSprite(url, id) {\n  if (!is$1.string(url)) {\n    return;\n  }\n\n  var prefix = 'cache';\n  var hasId = is$1.string(id);\n  var isCached = false;\n\n  var exists = function exists() {\n    return document.getElementById(id) !== null;\n  };\n\n  var update = function update(container, data) {\n    // eslint-disable-next-line no-param-reassign\n    container.innerHTML = data; // Check again incase of race condition\n\n    if (hasId && exists()) {\n      return;\n    } // Inject the SVG to the body\n\n\n    document.body.insertAdjacentElement('afterbegin', container);\n  }; // Only load once if ID set\n\n\n  if (!hasId || !exists()) {\n    var useStorage = Storage.supported; // Create container\n\n    var container = document.createElement('div');\n    container.setAttribute('hidden', '');\n\n    if (hasId) {\n      container.setAttribute('id', id);\n    } // Check in cache\n\n\n    if (useStorage) {\n      var cached = window.localStorage.getItem(\"\".concat(prefix, \"-\").concat(id));\n      isCached = cached !== null;\n\n      if (isCached) {\n        var data = JSON.parse(cached);\n        update(container, data.content);\n      }\n    } // Get the sprite\n\n\n    fetch(url).then(function (result) {\n      if (is$1.empty(result)) {\n        return;\n      }\n\n      if (useStorage) {\n        window.localStorage.setItem(\"\".concat(prefix, \"-\").concat(id), JSON.stringify({\n          content: result\n        }));\n      }\n\n      update(container, result);\n    }).catch(function () {});\n  }\n}\n\n// ==========================================================================\n\nvar getHours = function getHours(value) {\n  return Math.trunc(value / 60 / 60 % 60, 10);\n};\nvar getMinutes = function getMinutes(value) {\n  return Math.trunc(value / 60 % 60, 10);\n};\nvar getSeconds = function getSeconds(value) {\n  return Math.trunc(value % 60, 10);\n}; // Format time to UI friendly string\n\nfunction formatTime() {\n  var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var displayHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var inverted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  // Bail if the value isn't a number\n  if (!is$1.number(time)) {\n    return formatTime(undefined, displayHours, inverted);\n  } // Format time component to add leading zero\n\n\n  var format = function format(value) {\n    return \"0\".concat(value).slice(-2);\n  }; // Breakdown to hours, mins, secs\n\n\n  var hours = getHours(time);\n  var mins = getMinutes(time);\n  var secs = getSeconds(time); // Do we need to display hours?\n\n  if (displayHours || hours > 0) {\n    hours = \"\".concat(hours, \":\");\n  } else {\n    hours = '';\n  } // Render\n\n\n  return \"\".concat(inverted && time > 0 ? '-' : '').concat(hours).concat(format(mins), \":\").concat(format(secs));\n}\n\nvar controls = {\n  // Get icon URL\n  getIconUrl: function getIconUrl() {\n    var url = new URL(this.config.iconUrl, window.location);\n    var cors = url.host !== window.location.host || browser.isIE && !window.svg4everybody;\n    return {\n      url: this.config.iconUrl,\n      cors: cors\n    };\n  },\n  // Find the UI controls\n  findElements: function findElements() {\n    try {\n      this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper); // Buttons\n\n      this.elements.buttons = {\n        play: getElements.call(this, this.config.selectors.buttons.play),\n        pause: getElement.call(this, this.config.selectors.buttons.pause),\n        restart: getElement.call(this, this.config.selectors.buttons.restart),\n        rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n        fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n        mute: getElement.call(this, this.config.selectors.buttons.mute),\n        pip: getElement.call(this, this.config.selectors.buttons.pip),\n        airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n        settings: getElement.call(this, this.config.selectors.buttons.settings),\n        captions: getElement.call(this, this.config.selectors.buttons.captions),\n        fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen)\n      }; // Progress\n\n      this.elements.progress = getElement.call(this, this.config.selectors.progress); // Inputs\n\n      this.elements.inputs = {\n        seek: getElement.call(this, this.config.selectors.inputs.seek),\n        volume: getElement.call(this, this.config.selectors.inputs.volume)\n      }; // Display\n\n      this.elements.display = {\n        buffer: getElement.call(this, this.config.selectors.display.buffer),\n        currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n        duration: getElement.call(this, this.config.selectors.display.duration)\n      }; // Seek tooltip\n\n      if (is$1.element(this.elements.progress)) {\n        this.elements.display.seekTooltip = this.elements.progress.querySelector(\".\".concat(this.config.classNames.tooltip));\n      }\n\n      return true;\n    } catch (error) {\n      // Log it\n      this.debug.warn('It looks like there is a problem with your custom controls HTML', error); // Restore native video controls\n\n      this.toggleNativeControls(true);\n      return false;\n    }\n  },\n  // Create <svg> icon\n  createIcon: function createIcon(type, attributes) {\n    var namespace = 'http://www.w3.org/2000/svg';\n    var iconUrl = controls.getIconUrl.call(this);\n    var iconPath = \"\".concat(!iconUrl.cors ? iconUrl.url : '', \"#\").concat(this.config.iconPrefix); // Create <svg>\n\n    var icon = document.createElementNS(namespace, 'svg');\n    setAttributes(icon, extend(attributes, {\n      'aria-hidden': 'true',\n      focusable: 'false'\n    })); // Create the <use> to reference sprite\n\n    var use = document.createElementNS(namespace, 'use');\n    var path = \"\".concat(iconPath, \"-\").concat(type); // Set `href` attributes\n    // https://github.com/sampotts/plyr/issues/460\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n\n    if ('href' in use) {\n      use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n    } // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n\n\n    use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path); // Add <use> to <svg>\n\n    icon.appendChild(use);\n    return icon;\n  },\n  // Create hidden text label\n  createLabel: function createLabel(key) {\n    var attr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var text = i18n.get(key, this.config);\n\n    var attributes = _objectSpread2(_objectSpread2({}, attr), {}, {\n      class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' ')\n    });\n\n    return createElement('span', attributes, text);\n  },\n  // Create a badge\n  createBadge: function createBadge(text) {\n    if (is$1.empty(text)) {\n      return null;\n    }\n\n    var badge = createElement('span', {\n      class: this.config.classNames.menu.value\n    });\n    badge.appendChild(createElement('span', {\n      class: this.config.classNames.menu.badge\n    }, text));\n    return badge;\n  },\n  // Create a <button>\n  createButton: function createButton(buttonType, attr) {\n    var _this = this;\n\n    var attributes = extend({}, attr);\n    var type = toCamelCase(buttonType);\n    var props = {\n      element: 'button',\n      toggle: false,\n      label: null,\n      icon: null,\n      labelPressed: null,\n      iconPressed: null\n    };\n    ['element', 'icon', 'label'].forEach(function (key) {\n      if (Object.keys(attributes).includes(key)) {\n        props[key] = attributes[key];\n        delete attributes[key];\n      }\n    }); // Default to 'button' type to prevent form submission\n\n    if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n      attributes.type = 'button';\n    } // Set class name\n\n\n    if (Object.keys(attributes).includes('class')) {\n      if (!attributes.class.split(' ').some(function (c) {\n        return c === _this.config.classNames.control;\n      })) {\n        extend(attributes, {\n          class: \"\".concat(attributes.class, \" \").concat(this.config.classNames.control)\n        });\n      }\n    } else {\n      attributes.class = this.config.classNames.control;\n    } // Large play button\n\n\n    switch (buttonType) {\n      case 'play':\n        props.toggle = true;\n        props.label = 'play';\n        props.labelPressed = 'pause';\n        props.icon = 'play';\n        props.iconPressed = 'pause';\n        break;\n\n      case 'mute':\n        props.toggle = true;\n        props.label = 'mute';\n        props.labelPressed = 'unmute';\n        props.icon = 'volume';\n        props.iconPressed = 'muted';\n        break;\n\n      case 'captions':\n        props.toggle = true;\n        props.label = 'enableCaptions';\n        props.labelPressed = 'disableCaptions';\n        props.icon = 'captions-off';\n        props.iconPressed = 'captions-on';\n        break;\n\n      case 'fullscreen':\n        props.toggle = true;\n        props.label = 'enterFullscreen';\n        props.labelPressed = 'exitFullscreen';\n        props.icon = 'enter-fullscreen';\n        props.iconPressed = 'exit-fullscreen';\n        break;\n\n      case 'play-large':\n        attributes.class += \" \".concat(this.config.classNames.control, \"--overlaid\");\n        type = 'play';\n        props.label = 'play';\n        props.icon = 'play';\n        break;\n\n      default:\n        if (is$1.empty(props.label)) {\n          props.label = type;\n        }\n\n        if (is$1.empty(props.icon)) {\n          props.icon = buttonType;\n        }\n\n    }\n\n    var button = createElement(props.element); // Setup toggle icon and labels\n\n    if (props.toggle) {\n      // Icon\n      button.appendChild(controls.createIcon.call(this, props.iconPressed, {\n        class: 'icon--pressed'\n      }));\n      button.appendChild(controls.createIcon.call(this, props.icon, {\n        class: 'icon--not-pressed'\n      })); // Label/Tooltip\n\n      button.appendChild(controls.createLabel.call(this, props.labelPressed, {\n        class: 'label--pressed'\n      }));\n      button.appendChild(controls.createLabel.call(this, props.label, {\n        class: 'label--not-pressed'\n      }));\n    } else {\n      button.appendChild(controls.createIcon.call(this, props.icon));\n      button.appendChild(controls.createLabel.call(this, props.label));\n    } // Merge and set attributes\n\n\n    extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n    setAttributes(button, attributes); // We have multiple play buttons\n\n    if (type === 'play') {\n      if (!is$1.array(this.elements.buttons[type])) {\n        this.elements.buttons[type] = [];\n      }\n\n      this.elements.buttons[type].push(button);\n    } else {\n      this.elements.buttons[type] = button;\n    }\n\n    return button;\n  },\n  // Create an <input type='range'>\n  createRange: function createRange(type, attributes) {\n    // Seek input\n    var input = createElement('input', extend(getAttributesFromSelector(this.config.selectors.inputs[type]), {\n      type: 'range',\n      min: 0,\n      max: 100,\n      step: 0.01,\n      value: 0,\n      autocomplete: 'off',\n      // A11y fixes for https://github.com/sampotts/plyr/issues/905\n      role: 'slider',\n      'aria-label': i18n.get(type, this.config),\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'aria-valuenow': 0\n    }, attributes));\n    this.elements.inputs[type] = input; // Set the fill for webkit now\n\n    controls.updateRangeFill.call(this, input); // Improve support on touch devices\n\n    RangeTouch.setup(input);\n    return input;\n  },\n  // Create a <progress>\n  createProgress: function createProgress(type, attributes) {\n    var progress = createElement('progress', extend(getAttributesFromSelector(this.config.selectors.display[type]), {\n      min: 0,\n      max: 100,\n      value: 0,\n      role: 'progressbar',\n      'aria-hidden': true\n    }, attributes)); // Create the label inside\n\n    if (type !== 'volume') {\n      progress.appendChild(createElement('span', null, '0'));\n      var suffixKey = {\n        played: 'played',\n        buffer: 'buffered'\n      }[type];\n      var suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n      progress.innerText = \"% \".concat(suffix.toLowerCase());\n    }\n\n    this.elements.display[type] = progress;\n    return progress;\n  },\n  // Create time display\n  createTime: function createTime(type, attrs) {\n    var attributes = getAttributesFromSelector(this.config.selectors.display[type], attrs);\n    var container = createElement('div', extend(attributes, {\n      class: \"\".concat(attributes.class ? attributes.class : '', \" \").concat(this.config.classNames.display.time, \" \").trim(),\n      'aria-label': i18n.get(type, this.config)\n    }), '00:00'); // Reference for updates\n\n    this.elements.display[type] = container;\n    return container;\n  },\n  // Bind keyboard shortcuts for a menu item\n  // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n  bindMenuItemShortcuts: function bindMenuItemShortcuts(menuItem, type) {\n    var _this2 = this;\n\n    // Navigate through menus via arrow keys and space\n    on.call(this, menuItem, 'keydown keyup', function (event) {\n      // We only care about space and ⬆️ ⬇️️ ➡️\n      if (![32, 38, 39, 40].includes(event.which)) {\n        return;\n      } // Prevent play / seek\n\n\n      event.preventDefault();\n      event.stopPropagation(); // We're just here to prevent the keydown bubbling\n\n      if (event.type === 'keydown') {\n        return;\n      }\n\n      var isRadioButton = matches$1(menuItem, '[role=\"menuitemradio\"]'); // Show the respective menu\n\n      if (!isRadioButton && [32, 39].includes(event.which)) {\n        controls.showMenuPanel.call(_this2, type, true);\n      } else {\n        var target;\n\n        if (event.which !== 32) {\n          if (event.which === 40 || isRadioButton && event.which === 39) {\n            target = menuItem.nextElementSibling;\n\n            if (!is$1.element(target)) {\n              target = menuItem.parentNode.firstElementChild;\n            }\n          } else {\n            target = menuItem.previousElementSibling;\n\n            if (!is$1.element(target)) {\n              target = menuItem.parentNode.lastElementChild;\n            }\n          }\n\n          setFocus.call(_this2, target, true);\n        }\n      }\n    }, false); // Enter will fire a `click` event but we still need to manage focus\n    // So we bind to keyup which fires after and set focus here\n\n    on.call(this, menuItem, 'keyup', function (event) {\n      if (event.which !== 13) {\n        return;\n      }\n\n      controls.focusFirstMenuItem.call(_this2, null, true);\n    });\n  },\n  // Create a settings menu item\n  createMenuItem: function createMenuItem(_ref) {\n    var _this3 = this;\n\n    var value = _ref.value,\n        list = _ref.list,\n        type = _ref.type,\n        title = _ref.title,\n        _ref$badge = _ref.badge,\n        badge = _ref$badge === void 0 ? null : _ref$badge,\n        _ref$checked = _ref.checked,\n        checked = _ref$checked === void 0 ? false : _ref$checked;\n    var attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n    var menuItem = createElement('button', extend(attributes, {\n      type: 'button',\n      role: 'menuitemradio',\n      class: \"\".concat(this.config.classNames.control, \" \").concat(attributes.class ? attributes.class : '').trim(),\n      'aria-checked': checked,\n      value: value\n    }));\n    var flex = createElement('span'); // We have to set as HTML incase of special characters\n\n    flex.innerHTML = title;\n\n    if (is$1.element(badge)) {\n      flex.appendChild(badge);\n    }\n\n    menuItem.appendChild(flex); // Replicate radio button behaviour\n\n    Object.defineProperty(menuItem, 'checked', {\n      enumerable: true,\n      get: function get() {\n        return menuItem.getAttribute('aria-checked') === 'true';\n      },\n      set: function set(check) {\n        // Ensure exclusivity\n        if (check) {\n          Array.from(menuItem.parentNode.children).filter(function (node) {\n            return matches$1(node, '[role=\"menuitemradio\"]');\n          }).forEach(function (node) {\n            return node.setAttribute('aria-checked', 'false');\n          });\n        }\n\n        menuItem.setAttribute('aria-checked', check ? 'true' : 'false');\n      }\n    });\n    this.listeners.bind(menuItem, 'click keyup', function (event) {\n      if (is$1.keyboardEvent(event) && event.which !== 32) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n      menuItem.checked = true;\n\n      switch (type) {\n        case 'language':\n          _this3.currentTrack = Number(value);\n          break;\n\n        case 'quality':\n          _this3.quality = value;\n          break;\n\n        case 'speed':\n          _this3.speed = parseFloat(value);\n          break;\n      }\n\n      controls.showMenuPanel.call(_this3, 'home', is$1.keyboardEvent(event));\n    }, type, false);\n    controls.bindMenuItemShortcuts.call(this, menuItem, type);\n    list.appendChild(menuItem);\n  },\n  // Format a time for display\n  formatTime: function formatTime$1() {\n    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var inverted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    // Bail if the value isn't a number\n    if (!is$1.number(time)) {\n      return time;\n    } // Always display hours if duration is over an hour\n\n\n    var forceHours = getHours(this.duration) > 0;\n    return formatTime(time, forceHours, inverted);\n  },\n  // Update the displayed time\n  updateTimeDisplay: function updateTimeDisplay() {\n    var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var inverted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    // Bail if there's no element to display or the value isn't a number\n    if (!is$1.element(target) || !is$1.number(time)) {\n      return;\n    } // eslint-disable-next-line no-param-reassign\n\n\n    target.innerText = controls.formatTime(time, inverted);\n  },\n  // Update volume UI and storage\n  updateVolume: function updateVolume() {\n    if (!this.supported.ui) {\n      return;\n    } // Update range\n\n\n    if (is$1.element(this.elements.inputs.volume)) {\n      controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n    } // Update mute state\n\n\n    if (is$1.element(this.elements.buttons.mute)) {\n      this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n    }\n  },\n  // Update seek value and lower fill\n  setRange: function setRange(target) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!is$1.element(target)) {\n      return;\n    } // eslint-disable-next-line\n\n\n    target.value = value; // Webkit range fill\n\n    controls.updateRangeFill.call(this, target);\n  },\n  // Update <progress> elements\n  updateProgress: function updateProgress(event) {\n    var _this4 = this;\n\n    if (!this.supported.ui || !is$1.event(event)) {\n      return;\n    }\n\n    var value = 0;\n\n    var setProgress = function setProgress(target, input) {\n      var val = is$1.number(input) ? input : 0;\n      var progress = is$1.element(target) ? target : _this4.elements.display.buffer; // Update value and label\n\n      if (is$1.element(progress)) {\n        progress.value = val; // Update text label inside\n\n        var label = progress.getElementsByTagName('span')[0];\n\n        if (is$1.element(label)) {\n          label.childNodes[0].nodeValue = val;\n        }\n      }\n    };\n\n    if (event) {\n      switch (event.type) {\n        // Video playing\n        case 'timeupdate':\n        case 'seeking':\n        case 'seeked':\n          value = getPercentage(this.currentTime, this.duration); // Set seek range value only if it's a 'natural' time event\n\n          if (event.type === 'timeupdate') {\n            controls.setRange.call(this, this.elements.inputs.seek, value);\n          }\n\n          break;\n        // Check buffer status\n\n        case 'playing':\n        case 'progress':\n          setProgress(this.elements.display.buffer, this.buffered * 100);\n          break;\n      }\n    }\n  },\n  // Webkit polyfill for lower fill range\n  updateRangeFill: function updateRangeFill(target) {\n    // Get range from event if event passed\n    var range = is$1.event(target) ? target.target : target; // Needs to be a valid <input type='range'>\n\n    if (!is$1.element(range) || range.getAttribute('type') !== 'range') {\n      return;\n    } // Set aria values for https://github.com/sampotts/plyr/issues/905\n\n\n    if (matches$1(range, this.config.selectors.inputs.seek)) {\n      range.setAttribute('aria-valuenow', this.currentTime);\n      var currentTime = controls.formatTime(this.currentTime);\n      var duration = controls.formatTime(this.duration);\n      var format = i18n.get('seekLabel', this.config);\n      range.setAttribute('aria-valuetext', format.replace('{currentTime}', currentTime).replace('{duration}', duration));\n    } else if (matches$1(range, this.config.selectors.inputs.volume)) {\n      var percent = range.value * 100;\n      range.setAttribute('aria-valuenow', percent);\n      range.setAttribute('aria-valuetext', \"\".concat(percent.toFixed(1), \"%\"));\n    } else {\n      range.setAttribute('aria-valuenow', range.value);\n    } // WebKit only\n\n\n    if (!browser.isWebkit) {\n      return;\n    } // Set CSS custom property\n\n\n    range.style.setProperty('--value', \"\".concat(range.value / range.max * 100, \"%\"));\n  },\n  // Update hover tooltip for seeking\n  updateSeekTooltip: function updateSeekTooltip(event) {\n    var _this5 = this;\n\n    // Bail if setting not true\n    if (!this.config.tooltips.seek || !is$1.element(this.elements.inputs.seek) || !is$1.element(this.elements.display.seekTooltip) || this.duration === 0) {\n      return;\n    }\n\n    var visible = \"\".concat(this.config.classNames.tooltip, \"--visible\");\n\n    var toggle = function toggle(show) {\n      return toggleClass(_this5.elements.display.seekTooltip, visible, show);\n    }; // Hide on touch\n\n\n    if (this.touch) {\n      toggle(false);\n      return;\n    } // Determine percentage, if already visible\n\n\n    var percent = 0;\n    var clientRect = this.elements.progress.getBoundingClientRect();\n\n    if (is$1.event(event)) {\n      percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n    } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n      percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n    } else {\n      return;\n    } // Set bounds\n\n\n    if (percent < 0) {\n      percent = 0;\n    } else if (percent > 100) {\n      percent = 100;\n    } // Display the time a click would seek to\n\n\n    controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent); // Set position\n\n    this.elements.display.seekTooltip.style.left = \"\".concat(percent, \"%\"); // Show/hide the tooltip\n    // If the event is a moues in/out and percentage is inside bounds\n\n    if (is$1.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n      toggle(event.type === 'mouseenter');\n    }\n  },\n  // Handle time change event\n  timeUpdate: function timeUpdate(event) {\n    // Only invert if only one time element is displayed and used for both duration and currentTime\n    var invert = !is$1.element(this.elements.display.duration) && this.config.invertTime; // Duration\n\n    controls.updateTimeDisplay.call(this, this.elements.display.currentTime, invert ? this.duration - this.currentTime : this.currentTime, invert); // Ignore updates while seeking\n\n    if (event && event.type === 'timeupdate' && this.media.seeking) {\n      return;\n    } // Playing progress\n\n\n    controls.updateProgress.call(this, event);\n  },\n  // Show the duration on metadataloaded or durationchange events\n  durationUpdate: function durationUpdate() {\n    // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n    if (!this.supported.ui || !this.config.invertTime && this.currentTime) {\n      return;\n    } // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n    // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n    // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n    // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n\n\n    if (this.duration >= Math.pow(2, 32)) {\n      toggleHidden(this.elements.display.currentTime, true);\n      toggleHidden(this.elements.progress, true);\n      return;\n    } // Update ARIA values\n\n\n    if (is$1.element(this.elements.inputs.seek)) {\n      this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n    } // If there's a spot to display duration\n\n\n    var hasDuration = is$1.element(this.elements.display.duration); // If there's only one time display, display duration there\n\n    if (!hasDuration && this.config.displayDuration && this.paused) {\n      controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n    } // If there's a duration element, update content\n\n\n    if (hasDuration) {\n      controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n    } // Update the tooltip (if visible)\n\n\n    controls.updateSeekTooltip.call(this);\n  },\n  // Hide/show a tab\n  toggleMenuButton: function toggleMenuButton(setting, toggle) {\n    toggleHidden(this.elements.settings.buttons[setting], !toggle);\n  },\n  // Update the selected setting\n  updateSetting: function updateSetting(setting, container, input) {\n    var pane = this.elements.settings.panels[setting];\n    var value = null;\n    var list = container;\n\n    if (setting === 'captions') {\n      value = this.currentTrack;\n    } else {\n      value = !is$1.empty(input) ? input : this[setting]; // Get default\n\n      if (is$1.empty(value)) {\n        value = this.config[setting].default;\n      } // Unsupported value\n\n\n      if (!is$1.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n        this.debug.warn(\"Unsupported value of '\".concat(value, \"' for \").concat(setting));\n        return;\n      } // Disabled value\n\n\n      if (!this.config[setting].options.includes(value)) {\n        this.debug.warn(\"Disabled value of '\".concat(value, \"' for \").concat(setting));\n        return;\n      }\n    } // Get the list if we need to\n\n\n    if (!is$1.element(list)) {\n      list = pane && pane.querySelector('[role=\"menu\"]');\n    } // If there's no list it means it's not been rendered...\n\n\n    if (!is$1.element(list)) {\n      return;\n    } // Update the label\n\n\n    var label = this.elements.settings.buttons[setting].querySelector(\".\".concat(this.config.classNames.menu.value));\n    label.innerHTML = controls.getLabel.call(this, setting, value); // Find the radio option and check it\n\n    var target = list && list.querySelector(\"[value=\\\"\".concat(value, \"\\\"]\"));\n\n    if (is$1.element(target)) {\n      target.checked = true;\n    }\n  },\n  // Translate a value into a nice label\n  getLabel: function getLabel(setting, value) {\n    switch (setting) {\n      case 'speed':\n        return value === 1 ? i18n.get('normal', this.config) : \"\".concat(value, \"&times;\");\n\n      case 'quality':\n        if (is$1.number(value)) {\n          var label = i18n.get(\"qualityLabel.\".concat(value), this.config);\n\n          if (!label.length) {\n            return \"\".concat(value, \"p\");\n          }\n\n          return label;\n        }\n\n        return toTitleCase(value);\n\n      case 'captions':\n        return captions.getLabel.call(this);\n\n      default:\n        return null;\n    }\n  },\n  // Set the quality menu\n  setQualityMenu: function setQualityMenu(options) {\n    var _this6 = this;\n\n    // Menu required\n    if (!is$1.element(this.elements.settings.panels.quality)) {\n      return;\n    }\n\n    var type = 'quality';\n    var list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]'); // Set options if passed and filter based on uniqueness and config\n\n    if (is$1.array(options)) {\n      this.options.quality = dedupe(options).filter(function (quality) {\n        return _this6.config.quality.options.includes(quality);\n      });\n    } // Toggle the pane and tab\n\n\n    var toggle = !is$1.empty(this.options.quality) && this.options.quality.length > 1;\n    controls.toggleMenuButton.call(this, type, toggle); // Empty the menu\n\n    emptyElement(list); // Check if we need to toggle the parent\n\n    controls.checkMenu.call(this); // If we're hiding, nothing more to do\n\n    if (!toggle) {\n      return;\n    } // Get the badge HTML for HD, 4K etc\n\n\n    var getBadge = function getBadge(quality) {\n      var label = i18n.get(\"qualityBadge.\".concat(quality), _this6.config);\n\n      if (!label.length) {\n        return null;\n      }\n\n      return controls.createBadge.call(_this6, label);\n    }; // Sort options by the config and then render options\n\n\n    this.options.quality.sort(function (a, b) {\n      var sorting = _this6.config.quality.options;\n      return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n    }).forEach(function (quality) {\n      controls.createMenuItem.call(_this6, {\n        value: quality,\n        list: list,\n        type: type,\n        title: controls.getLabel.call(_this6, 'quality', quality),\n        badge: getBadge(quality)\n      });\n    });\n    controls.updateSetting.call(this, type, list);\n  },\n  // Set the looping options\n\n  /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n         const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n         // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n         // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n         // Empty the menu\n        emptyElement(list);\n         options.forEach(option => {\n            const item = createElement('li');\n             const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n             if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n             item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n  // Get current selected caption language\n  // TODO: rework this to user the getter in the API?\n  // Set a list of available captions languages\n  setCaptionsMenu: function setCaptionsMenu() {\n    var _this7 = this;\n\n    // Menu required\n    if (!is$1.element(this.elements.settings.panels.captions)) {\n      return;\n    } // TODO: Captions or language? Currently it's mixed\n\n\n    var type = 'captions';\n    var list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n    var tracks = captions.getTracks.call(this);\n    var toggle = Boolean(tracks.length); // Toggle the pane and tab\n\n    controls.toggleMenuButton.call(this, type, toggle); // Empty the menu\n\n    emptyElement(list); // Check if we need to toggle the parent\n\n    controls.checkMenu.call(this); // If there's no captions, bail\n\n    if (!toggle) {\n      return;\n    } // Generate options data\n\n\n    var options = tracks.map(function (track, value) {\n      return {\n        value: value,\n        checked: _this7.captions.toggled && _this7.currentTrack === value,\n        title: captions.getLabel.call(_this7, track),\n        badge: track.language && controls.createBadge.call(_this7, track.language.toUpperCase()),\n        list: list,\n        type: 'language'\n      };\n    }); // Add the \"Disabled\" option to turn off captions\n\n    options.unshift({\n      value: -1,\n      checked: !this.captions.toggled,\n      title: i18n.get('disabled', this.config),\n      list: list,\n      type: 'language'\n    }); // Generate options\n\n    options.forEach(controls.createMenuItem.bind(this));\n    controls.updateSetting.call(this, type, list);\n  },\n  // Set a list of available captions languages\n  setSpeedMenu: function setSpeedMenu() {\n    var _this8 = this;\n\n    // Menu required\n    if (!is$1.element(this.elements.settings.panels.speed)) {\n      return;\n    }\n\n    var type = 'speed';\n    var list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]'); // Filter out invalid speeds\n\n    this.options.speed = this.options.speed.filter(function (o) {\n      return o >= _this8.minimumSpeed && o <= _this8.maximumSpeed;\n    }); // Toggle the pane and tab\n\n    var toggle = !is$1.empty(this.options.speed) && this.options.speed.length > 1;\n    controls.toggleMenuButton.call(this, type, toggle); // Empty the menu\n\n    emptyElement(list); // Check if we need to toggle the parent\n\n    controls.checkMenu.call(this); // If we're hiding, nothing more to do\n\n    if (!toggle) {\n      return;\n    } // Create items\n\n\n    this.options.speed.forEach(function (speed) {\n      controls.createMenuItem.call(_this8, {\n        value: speed,\n        list: list,\n        type: type,\n        title: controls.getLabel.call(_this8, 'speed', speed)\n      });\n    });\n    controls.updateSetting.call(this, type, list);\n  },\n  // Check if we need to hide/show the settings menu\n  checkMenu: function checkMenu() {\n    var buttons = this.elements.settings.buttons;\n    var visible = !is$1.empty(buttons) && Object.values(buttons).some(function (button) {\n      return !button.hidden;\n    });\n    toggleHidden(this.elements.settings.menu, !visible);\n  },\n  // Focus the first menu item in a given (or visible) menu\n  focusFirstMenuItem: function focusFirstMenuItem(pane) {\n    var tabFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (this.elements.settings.popup.hidden) {\n      return;\n    }\n\n    var target = pane;\n\n    if (!is$1.element(target)) {\n      target = Object.values(this.elements.settings.panels).find(function (p) {\n        return !p.hidden;\n      });\n    }\n\n    var firstItem = target.querySelector('[role^=\"menuitem\"]');\n    setFocus.call(this, firstItem, tabFocus);\n  },\n  // Show/hide menu\n  toggleMenu: function toggleMenu(input) {\n    var popup = this.elements.settings.popup;\n    var button = this.elements.buttons.settings; // Menu and button are required\n\n    if (!is$1.element(popup) || !is$1.element(button)) {\n      return;\n    } // True toggle by default\n\n\n    var hidden = popup.hidden;\n    var show = hidden;\n\n    if (is$1.boolean(input)) {\n      show = input;\n    } else if (is$1.keyboardEvent(input) && input.which === 27) {\n      show = false;\n    } else if (is$1.event(input)) {\n      // If Plyr is in a shadowDOM, the event target is set to the component, instead of the\n      // Element in the shadowDOM. The path, if available, is complete.\n      var target = is$1.function(input.composedPath) ? input.composedPath()[0] : input.target;\n      var isMenuItem = popup.contains(target); // If the click was inside the menu or if the click\n      // wasn't the button or menu item and we're trying to\n      // show the menu (a doc click shouldn't show the menu)\n\n      if (isMenuItem || !isMenuItem && input.target !== button && show) {\n        return;\n      }\n    } // Set button attributes\n\n\n    button.setAttribute('aria-expanded', show); // Show the actual popup\n\n    toggleHidden(popup, !show); // Add class hook\n\n    toggleClass(this.elements.container, this.config.classNames.menu.open, show); // Focus the first item if key interaction\n\n    if (show && is$1.keyboardEvent(input)) {\n      controls.focusFirstMenuItem.call(this, null, true);\n    } else if (!show && !hidden) {\n      // If closing, re-focus the button\n      setFocus.call(this, button, is$1.keyboardEvent(input));\n    }\n  },\n  // Get the natural size of a menu panel\n  getMenuSize: function getMenuSize(tab) {\n    var clone = tab.cloneNode(true);\n    clone.style.position = 'absolute';\n    clone.style.opacity = 0;\n    clone.removeAttribute('hidden'); // Append to parent so we get the \"real\" size\n\n    tab.parentNode.appendChild(clone); // Get the sizes before we remove\n\n    var width = clone.scrollWidth;\n    var height = clone.scrollHeight; // Remove from the DOM\n\n    removeElement(clone);\n    return {\n      width: width,\n      height: height\n    };\n  },\n  // Show a panel in the menu\n  showMenuPanel: function showMenuPanel() {\n    var _this9 = this;\n\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var tabFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var target = this.elements.container.querySelector(\"#plyr-settings-\".concat(this.id, \"-\").concat(type)); // Nothing to show, bail\n\n    if (!is$1.element(target)) {\n      return;\n    } // Hide all other panels\n\n\n    var container = target.parentNode;\n    var current = Array.from(container.children).find(function (node) {\n      return !node.hidden;\n    }); // If we can do fancy animations, we'll animate the height/width\n\n    if (support.transitions && !support.reducedMotion) {\n      // Set the current width as a base\n      container.style.width = \"\".concat(current.scrollWidth, \"px\");\n      container.style.height = \"\".concat(current.scrollHeight, \"px\"); // Get potential sizes\n\n      var size = controls.getMenuSize.call(this, target); // Restore auto height/width\n\n      var restore = function restore(event) {\n        // We're only bothered about height and width on the container\n        if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n          return;\n        } // Revert back to auto\n\n\n        container.style.width = '';\n        container.style.height = ''; // Only listen once\n\n        off.call(_this9, container, transitionEndEvent, restore);\n      }; // Listen for the transition finishing and restore auto height/width\n\n\n      on.call(this, container, transitionEndEvent, restore); // Set dimensions to target\n\n      container.style.width = \"\".concat(size.width, \"px\");\n      container.style.height = \"\".concat(size.height, \"px\");\n    } // Set attributes on current tab\n\n\n    toggleHidden(current, true); // Set attributes on target\n\n    toggleHidden(target, false); // Focus the first item\n\n    controls.focusFirstMenuItem.call(this, target, tabFocus);\n  },\n  // Set the download URL\n  setDownloadUrl: function setDownloadUrl() {\n    var button = this.elements.buttons.download; // Bail if no button\n\n    if (!is$1.element(button)) {\n      return;\n    } // Set attribute\n\n\n    button.setAttribute('href', this.download);\n  },\n  // Build the default HTML\n  create: function create(data) {\n    var _this10 = this;\n\n    var bindMenuItemShortcuts = controls.bindMenuItemShortcuts,\n        createButton = controls.createButton,\n        createProgress = controls.createProgress,\n        createRange = controls.createRange,\n        createTime = controls.createTime,\n        setQualityMenu = controls.setQualityMenu,\n        setSpeedMenu = controls.setSpeedMenu,\n        showMenuPanel = controls.showMenuPanel;\n    this.elements.controls = null; // Larger overlaid play button\n\n    if (is$1.array(this.config.controls) && this.config.controls.includes('play-large')) {\n      this.elements.container.appendChild(createButton.call(this, 'play-large'));\n    } // Create the container\n\n\n    var container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n    this.elements.controls = container; // Default item attributes\n\n    var defaultAttributes = {\n      class: 'plyr__controls__item'\n    }; // Loop through controls in order\n\n    dedupe(is$1.array(this.config.controls) ? this.config.controls : []).forEach(function (control) {\n      // Restart button\n      if (control === 'restart') {\n        container.appendChild(createButton.call(_this10, 'restart', defaultAttributes));\n      } // Rewind button\n\n\n      if (control === 'rewind') {\n        container.appendChild(createButton.call(_this10, 'rewind', defaultAttributes));\n      } // Play/Pause button\n\n\n      if (control === 'play') {\n        container.appendChild(createButton.call(_this10, 'play', defaultAttributes));\n      } // Fast forward button\n\n\n      if (control === 'fast-forward') {\n        container.appendChild(createButton.call(_this10, 'fast-forward', defaultAttributes));\n      } // Progress\n\n\n      if (control === 'progress') {\n        var progressContainer = createElement('div', {\n          class: \"\".concat(defaultAttributes.class, \" plyr__progress__container\")\n        });\n        var progress = createElement('div', getAttributesFromSelector(_this10.config.selectors.progress)); // Seek range slider\n\n        progress.appendChild(createRange.call(_this10, 'seek', {\n          id: \"plyr-seek-\".concat(data.id)\n        })); // Buffer progress\n\n        progress.appendChild(createProgress.call(_this10, 'buffer')); // TODO: Add loop display indicator\n        // Seek tooltip\n\n        if (_this10.config.tooltips.seek) {\n          var tooltip = createElement('span', {\n            class: _this10.config.classNames.tooltip\n          }, '00:00');\n          progress.appendChild(tooltip);\n          _this10.elements.display.seekTooltip = tooltip;\n        }\n\n        _this10.elements.progress = progress;\n        progressContainer.appendChild(_this10.elements.progress);\n        container.appendChild(progressContainer);\n      } // Media current time display\n\n\n      if (control === 'current-time') {\n        container.appendChild(createTime.call(_this10, 'currentTime', defaultAttributes));\n      } // Media duration display\n\n\n      if (control === 'duration') {\n        container.appendChild(createTime.call(_this10, 'duration', defaultAttributes));\n      } // Volume controls\n\n\n      if (control === 'mute' || control === 'volume') {\n        var volume = _this10.elements.volume; // Create the volume container if needed\n\n        if (!is$1.element(volume) || !container.contains(volume)) {\n          volume = createElement('div', extend({}, defaultAttributes, {\n            class: \"\".concat(defaultAttributes.class, \" plyr__volume\").trim()\n          }));\n          _this10.elements.volume = volume;\n          container.appendChild(volume);\n        } // Toggle mute button\n\n\n        if (control === 'mute') {\n          volume.appendChild(createButton.call(_this10, 'mute'));\n        } // Volume range control\n        // Ignored on iOS as it's handled globally\n        // https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html\n\n\n        if (control === 'volume' && !browser.isIos) {\n          // Set the attributes\n          var attributes = {\n            max: 1,\n            step: 0.05,\n            value: _this10.config.volume\n          }; // Create the volume range slider\n\n          volume.appendChild(createRange.call(_this10, 'volume', extend(attributes, {\n            id: \"plyr-volume-\".concat(data.id)\n          })));\n        }\n      } // Toggle captions button\n\n\n      if (control === 'captions') {\n        container.appendChild(createButton.call(_this10, 'captions', defaultAttributes));\n      } // Settings button / menu\n\n\n      if (control === 'settings' && !is$1.empty(_this10.config.settings)) {\n        var wrapper = createElement('div', extend({}, defaultAttributes, {\n          class: \"\".concat(defaultAttributes.class, \" plyr__menu\").trim(),\n          hidden: ''\n        }));\n        wrapper.appendChild(createButton.call(_this10, 'settings', {\n          'aria-haspopup': true,\n          'aria-controls': \"plyr-settings-\".concat(data.id),\n          'aria-expanded': false\n        }));\n        var popup = createElement('div', {\n          class: 'plyr__menu__container',\n          id: \"plyr-settings-\".concat(data.id),\n          hidden: ''\n        });\n        var inner = createElement('div');\n        var home = createElement('div', {\n          id: \"plyr-settings-\".concat(data.id, \"-home\")\n        }); // Create the menu\n\n        var menu = createElement('div', {\n          role: 'menu'\n        });\n        home.appendChild(menu);\n        inner.appendChild(home);\n        _this10.elements.settings.panels.home = home; // Build the menu items\n\n        _this10.config.settings.forEach(function (type) {\n          // TODO: bundle this with the createMenuItem helper and bindings\n          var menuItem = createElement('button', extend(getAttributesFromSelector(_this10.config.selectors.buttons.settings), {\n            type: 'button',\n            class: \"\".concat(_this10.config.classNames.control, \" \").concat(_this10.config.classNames.control, \"--forward\"),\n            role: 'menuitem',\n            'aria-haspopup': true,\n            hidden: ''\n          })); // Bind menu shortcuts for keyboard users\n\n          bindMenuItemShortcuts.call(_this10, menuItem, type); // Show menu on click\n\n          on.call(_this10, menuItem, 'click', function () {\n            showMenuPanel.call(_this10, type, false);\n          });\n          var flex = createElement('span', null, i18n.get(type, _this10.config));\n          var value = createElement('span', {\n            class: _this10.config.classNames.menu.value\n          }); // Speed contains HTML entities\n\n          value.innerHTML = data[type];\n          flex.appendChild(value);\n          menuItem.appendChild(flex);\n          menu.appendChild(menuItem); // Build the panes\n\n          var pane = createElement('div', {\n            id: \"plyr-settings-\".concat(data.id, \"-\").concat(type),\n            hidden: ''\n          }); // Back button\n\n          var backButton = createElement('button', {\n            type: 'button',\n            class: \"\".concat(_this10.config.classNames.control, \" \").concat(_this10.config.classNames.control, \"--back\")\n          }); // Visible label\n\n          backButton.appendChild(createElement('span', {\n            'aria-hidden': true\n          }, i18n.get(type, _this10.config))); // Screen reader label\n\n          backButton.appendChild(createElement('span', {\n            class: _this10.config.classNames.hidden\n          }, i18n.get('menuBack', _this10.config))); // Go back via keyboard\n\n          on.call(_this10, pane, 'keydown', function (event) {\n            // We only care about <-\n            if (event.which !== 37) {\n              return;\n            } // Prevent seek\n\n\n            event.preventDefault();\n            event.stopPropagation(); // Show the respective menu\n\n            showMenuPanel.call(_this10, 'home', true);\n          }, false); // Go back via button click\n\n          on.call(_this10, backButton, 'click', function () {\n            showMenuPanel.call(_this10, 'home', false);\n          }); // Add to pane\n\n          pane.appendChild(backButton); // Menu\n\n          pane.appendChild(createElement('div', {\n            role: 'menu'\n          }));\n          inner.appendChild(pane);\n          _this10.elements.settings.buttons[type] = menuItem;\n          _this10.elements.settings.panels[type] = pane;\n        });\n\n        popup.appendChild(inner);\n        wrapper.appendChild(popup);\n        container.appendChild(wrapper);\n        _this10.elements.settings.popup = popup;\n        _this10.elements.settings.menu = wrapper;\n      } // Picture in picture button\n\n\n      if (control === 'pip' && support.pip) {\n        container.appendChild(createButton.call(_this10, 'pip', defaultAttributes));\n      } // Airplay button\n\n\n      if (control === 'airplay' && support.airplay) {\n        container.appendChild(createButton.call(_this10, 'airplay', defaultAttributes));\n      } // Download button\n\n\n      if (control === 'download') {\n        var _attributes = extend({}, defaultAttributes, {\n          element: 'a',\n          href: _this10.download,\n          target: '_blank'\n        }); // Set download attribute for HTML5 only\n\n\n        if (_this10.isHTML5) {\n          _attributes.download = '';\n        }\n\n        var download = _this10.config.urls.download;\n\n        if (!is$1.url(download) && _this10.isEmbed) {\n          extend(_attributes, {\n            icon: \"logo-\".concat(_this10.provider),\n            label: _this10.provider\n          });\n        }\n\n        container.appendChild(createButton.call(_this10, 'download', _attributes));\n      } // Toggle fullscreen button\n\n\n      if (control === 'fullscreen') {\n        container.appendChild(createButton.call(_this10, 'fullscreen', defaultAttributes));\n      }\n    }); // Set available quality levels\n\n    if (this.isHTML5) {\n      setQualityMenu.call(this, html5.getQualityOptions.call(this));\n    }\n\n    setSpeedMenu.call(this);\n    return container;\n  },\n  // Insert controls\n  inject: function inject() {\n    var _this11 = this;\n\n    // Sprite\n    if (this.config.loadSprite) {\n      var icon = controls.getIconUrl.call(this); // Only load external sprite using AJAX\n\n      if (icon.cors) {\n        loadSprite(icon.url, 'sprite-plyr');\n      }\n    } // Create a unique ID\n\n\n    this.id = Math.floor(Math.random() * 10000); // Null by default\n\n    var container = null;\n    this.elements.controls = null; // Set template properties\n\n    var props = {\n      id: this.id,\n      seektime: this.config.seekTime,\n      title: this.config.title\n    };\n    var update = true; // If function, run it and use output\n\n    if (is$1.function(this.config.controls)) {\n      this.config.controls = this.config.controls.call(this, props);\n    } // Convert falsy controls to empty array (primarily for empty strings)\n\n\n    if (!this.config.controls) {\n      this.config.controls = [];\n    }\n\n    if (is$1.element(this.config.controls) || is$1.string(this.config.controls)) {\n      // HTMLElement or Non-empty string passed as the option\n      container = this.config.controls;\n    } else {\n      // Create controls\n      container = controls.create.call(this, {\n        id: this.id,\n        seektime: this.config.seekTime,\n        speed: this.speed,\n        quality: this.quality,\n        captions: captions.getLabel.call(this) // TODO: Looping\n        // loop: 'None',\n\n      });\n      update = false;\n    } // Replace props with their value\n\n\n    var replace = function replace(input) {\n      var result = input;\n      Object.entries(props).forEach(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n\n        result = replaceAll(result, \"{\".concat(key, \"}\"), value);\n      });\n      return result;\n    }; // Update markup\n\n\n    if (update) {\n      if (is$1.string(this.config.controls)) {\n        container = replace(container);\n      }\n    } // Controls container\n\n\n    var target; // Inject to custom location\n\n    if (is$1.string(this.config.selectors.controls.container)) {\n      target = document.querySelector(this.config.selectors.controls.container);\n    } // Inject into the container by default\n\n\n    if (!is$1.element(target)) {\n      target = this.elements.container;\n    } // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n\n\n    var insertMethod = is$1.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n    target[insertMethod]('afterbegin', container); // Find the elements if need be\n\n    if (!is$1.element(this.elements.controls)) {\n      controls.findElements.call(this);\n    } // Add pressed property to buttons\n\n\n    if (!is$1.empty(this.elements.buttons)) {\n      var addProperty = function addProperty(button) {\n        var className = _this11.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n          enumerable: true,\n          get: function get() {\n            return hasClass(button, className);\n          },\n          set: function set() {\n            var pressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            toggleClass(button, className, pressed);\n          }\n        });\n      }; // Toggle classname when pressed property is set\n\n\n      Object.values(this.elements.buttons).filter(Boolean).forEach(function (button) {\n        if (is$1.array(button) || is$1.nodeList(button)) {\n          Array.from(button).filter(Boolean).forEach(addProperty);\n        } else {\n          addProperty(button);\n        }\n      });\n    } // Edge sometimes doesn't finish the paint so force a repaint\n\n\n    if (browser.isEdge) {\n      repaint(target);\n    } // Setup tooltips\n\n\n    if (this.config.tooltips.controls) {\n      var _this$config = this.config,\n          classNames = _this$config.classNames,\n          selectors = _this$config.selectors;\n      var selector = \"\".concat(selectors.controls.wrapper, \" \").concat(selectors.labels, \" .\").concat(classNames.hidden);\n      var labels = getElements.call(this, selector);\n      Array.from(labels).forEach(function (label) {\n        toggleClass(label, _this11.config.classNames.hidden, false);\n        toggleClass(label, _this11.config.classNames.tooltip, true);\n      });\n    }\n  }\n};\n\n/**\n * Parse a string to a URL object\n * @param {String} input - the URL to be parsed\n * @param {Boolean} safe - failsafe parsing\n */\n\nfunction parseUrl(input) {\n  var safe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var url = input;\n\n  if (safe) {\n    var parser = document.createElement('a');\n    parser.href = url;\n    url = parser.href;\n  }\n\n  try {\n    return new URL(url);\n  } catch (e) {\n    return null;\n  }\n} // Convert object to URLSearchParams\n\nfunction buildUrlParams(input) {\n  var params = new URLSearchParams();\n\n  if (is$1.object(input)) {\n    Object.entries(input).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      params.set(key, value);\n    });\n  }\n\n  return params;\n}\n\nvar captions = {\n  // Setup captions\n  setup: function setup() {\n    // Requires UI support\n    if (!this.supported.ui) {\n      return;\n    } // Only Vimeo and HTML5 video supported at this point\n\n\n    if (!this.isVideo || this.isYouTube || this.isHTML5 && !support.textTracks) {\n      // Clear menu and hide\n      if (is$1.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n        controls.setCaptionsMenu.call(this);\n      }\n\n      return;\n    } // Inject the container\n\n\n    if (!is$1.element(this.elements.captions)) {\n      this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n      insertAfter(this.elements.captions, this.elements.wrapper);\n    } // Fix IE captions if CORS is used\n    // Fetch captions and inject as blobs instead (data URIs not supported!)\n\n\n    if (browser.isIE && window.URL) {\n      var elements = this.media.querySelectorAll('track');\n      Array.from(elements).forEach(function (track) {\n        var src = track.getAttribute('src');\n        var url = parseUrl(src);\n\n        if (url !== null && url.hostname !== window.location.href.hostname && ['http:', 'https:'].includes(url.protocol)) {\n          fetch(src, 'blob').then(function (blob) {\n            track.setAttribute('src', window.URL.createObjectURL(blob));\n          }).catch(function () {\n            removeElement(track);\n          });\n        }\n      });\n    } // Get and set initial data\n    // The \"preferred\" options are not realized unless / until the wanted language has a match\n    // * languages: Array of user's browser languages.\n    // * language:  The language preferred by user settings or config\n    // * active:    The state preferred by user settings or config\n    // * toggled:   The real captions state\n\n\n    var browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n    var languages = dedupe(browserLanguages.map(function (language) {\n      return language.split('-')[0];\n    }));\n    var language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase(); // Use first browser language when language is 'auto'\n\n    if (language === 'auto') {\n      var _languages = _slicedToArray(languages, 1);\n\n      language = _languages[0];\n    }\n\n    var active = this.storage.get('captions');\n\n    if (!is$1.boolean(active)) {\n      active = this.config.captions.active;\n    }\n\n    Object.assign(this.captions, {\n      toggled: false,\n      active: active,\n      language: language,\n      languages: languages\n    }); // Watch changes to textTracks and update captions menu\n\n    if (this.isHTML5) {\n      var trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n      on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n    } // Update available languages in list next tick (the event must not be triggered before the listeners)\n\n\n    setTimeout(captions.update.bind(this), 0);\n  },\n  // Update available language options in settings based on tracks\n  update: function update() {\n    var _this = this;\n\n    var tracks = captions.getTracks.call(this, true); // Get the wanted language\n\n    var _this$captions = this.captions,\n        active = _this$captions.active,\n        language = _this$captions.language,\n        meta = _this$captions.meta,\n        currentTrackNode = _this$captions.currentTrackNode;\n    var languageExists = Boolean(tracks.find(function (track) {\n      return track.language === language;\n    })); // Handle tracks (add event listener and \"pseudo\"-default)\n\n    if (this.isHTML5 && this.isVideo) {\n      tracks.filter(function (track) {\n        return !meta.get(track);\n      }).forEach(function (track) {\n        _this.debug.log('Track added', track); // Attempt to store if the original dom element was \"default\"\n\n\n        meta.set(track, {\n          default: track.mode === 'showing'\n        }); // Turn off native caption rendering to avoid double captions\n        // Note: mode='hidden' forces a track to download. To ensure every track\n        // isn't downloaded at once, only 'showing' tracks should be reassigned\n        // eslint-disable-next-line no-param-reassign\n\n        if (track.mode === 'showing') {\n          // eslint-disable-next-line no-param-reassign\n          track.mode = 'hidden';\n        } // Add event listener for cue changes\n\n\n        on.call(_this, track, 'cuechange', function () {\n          return captions.updateCues.call(_this);\n        });\n      });\n    } // Update language first time it matches, or if the previous matching track was removed\n\n\n    if (languageExists && this.language !== language || !tracks.includes(currentTrackNode)) {\n      captions.setLanguage.call(this, language);\n      captions.toggle.call(this, active && languageExists);\n    } // Enable or disable captions based on track length\n\n\n    toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is$1.empty(tracks)); // Update available languages in list\n\n    if (is$1.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n      controls.setCaptionsMenu.call(this);\n    }\n  },\n  // Toggle captions display\n  // Used internally for the toggleCaptions method, with the passive option forced to false\n  toggle: function toggle(input) {\n    var _this2 = this;\n\n    var passive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    // If there's no full support\n    if (!this.supported.ui) {\n      return;\n    }\n\n    var toggled = this.captions.toggled; // Current state\n\n    var activeClass = this.config.classNames.captions.active; // Get the next state\n    // If the method is called without parameter, toggle based on current value\n\n    var active = is$1.nullOrUndefined(input) ? !toggled : input; // Update state and trigger event\n\n    if (active !== toggled) {\n      // When passive, don't override user preferences\n      if (!passive) {\n        this.captions.active = active;\n        this.storage.set({\n          captions: active\n        });\n      } // Force language if the call isn't passive and there is no matching language to toggle to\n\n\n      if (!this.language && active && !passive) {\n        var tracks = captions.getTracks.call(this);\n        var track = captions.findTrack.call(this, [this.captions.language].concat(_toConsumableArray(this.captions.languages)), true); // Override user preferences to avoid switching languages if a matching track is added\n\n        this.captions.language = track.language; // Set caption, but don't store in localStorage as user preference\n\n        captions.set.call(this, tracks.indexOf(track));\n        return;\n      } // Toggle button if it's enabled\n\n\n      if (this.elements.buttons.captions) {\n        this.elements.buttons.captions.pressed = active;\n      } // Add class hook\n\n\n      toggleClass(this.elements.container, activeClass, active);\n      this.captions.toggled = active; // Update settings menu\n\n      controls.updateSetting.call(this, 'captions'); // Trigger event (not used internally)\n\n      triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n    } // Wait for the call stack to clear before setting mode='hidden'\n    // on the active track - forcing the browser to download it\n\n\n    setTimeout(function () {\n      if (active && _this2.captions.toggled) {\n        _this2.captions.currentTrackNode.mode = 'hidden';\n      }\n    });\n  },\n  // Set captions by track index\n  // Used internally for the currentTrack setter with the passive option forced to false\n  set: function set(index) {\n    var passive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var tracks = captions.getTracks.call(this); // Disable captions if setting to -1\n\n    if (index === -1) {\n      captions.toggle.call(this, false, passive);\n      return;\n    }\n\n    if (!is$1.number(index)) {\n      this.debug.warn('Invalid caption argument', index);\n      return;\n    }\n\n    if (!(index in tracks)) {\n      this.debug.warn('Track not found', index);\n      return;\n    }\n\n    if (this.captions.currentTrack !== index) {\n      this.captions.currentTrack = index;\n      var track = tracks[index];\n\n      var _ref = track || {},\n          language = _ref.language; // Store reference to node for invalidation on remove\n\n\n      this.captions.currentTrackNode = track; // Update settings menu\n\n      controls.updateSetting.call(this, 'captions'); // When passive, don't override user preferences\n\n      if (!passive) {\n        this.captions.language = language;\n        this.storage.set({\n          language: language\n        });\n      } // Handle Vimeo captions\n\n\n      if (this.isVimeo) {\n        this.embed.enableTextTrack(language);\n      } // Trigger event\n\n\n      triggerEvent.call(this, this.media, 'languagechange');\n    } // Show captions\n\n\n    captions.toggle.call(this, true, passive);\n\n    if (this.isHTML5 && this.isVideo) {\n      // If we change the active track while a cue is already displayed we need to update it\n      captions.updateCues.call(this);\n    }\n  },\n  // Set captions by language\n  // Used internally for the language setter with the passive option forced to false\n  setLanguage: function setLanguage(input) {\n    var passive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!is$1.string(input)) {\n      this.debug.warn('Invalid language argument', input);\n      return;\n    } // Normalize\n\n\n    var language = input.toLowerCase();\n    this.captions.language = language; // Set currentTrack\n\n    var tracks = captions.getTracks.call(this);\n    var track = captions.findTrack.call(this, [language]);\n    captions.set.call(this, tracks.indexOf(track), passive);\n  },\n  // Get current valid caption tracks\n  // If update is false it will also ignore tracks without metadata\n  // This is used to \"freeze\" the language options when captions.update is false\n  getTracks: function getTracks() {\n    var _this3 = this;\n\n    var update = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    // Handle media or textTracks missing or null\n    var tracks = Array.from((this.media || {}).textTracks || []); // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n    // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n\n    return tracks.filter(function (track) {\n      return !_this3.isHTML5 || update || _this3.captions.meta.has(track);\n    }).filter(function (track) {\n      return ['captions', 'subtitles'].includes(track.kind);\n    });\n  },\n  // Match tracks based on languages and get the first\n  findTrack: function findTrack(languages) {\n    var _this4 = this;\n\n    var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var tracks = captions.getTracks.call(this);\n\n    var sortIsDefault = function sortIsDefault(track) {\n      return Number((_this4.captions.meta.get(track) || {}).default);\n    };\n\n    var sorted = Array.from(tracks).sort(function (a, b) {\n      return sortIsDefault(b) - sortIsDefault(a);\n    });\n    var track;\n    languages.every(function (language) {\n      track = sorted.find(function (t) {\n        return t.language === language;\n      });\n      return !track; // Break iteration if there is a match\n    }); // If no match is found but is required, get first\n\n    return track || (force ? sorted[0] : undefined);\n  },\n  // Get the current track\n  getCurrentTrack: function getCurrentTrack() {\n    return captions.getTracks.call(this)[this.currentTrack];\n  },\n  // Get UI label for track\n  getLabel: function getLabel(track) {\n    var currentTrack = track;\n\n    if (!is$1.track(currentTrack) && support.textTracks && this.captions.toggled) {\n      currentTrack = captions.getCurrentTrack.call(this);\n    }\n\n    if (is$1.track(currentTrack)) {\n      if (!is$1.empty(currentTrack.label)) {\n        return currentTrack.label;\n      }\n\n      if (!is$1.empty(currentTrack.language)) {\n        return track.language.toUpperCase();\n      }\n\n      return i18n.get('enabled', this.config);\n    }\n\n    return i18n.get('disabled', this.config);\n  },\n  // Update captions using current track's active cues\n  // Also optional array argument in case there isn't any track (ex: vimeo)\n  updateCues: function updateCues(input) {\n    // Requires UI\n    if (!this.supported.ui) {\n      return;\n    }\n\n    if (!is$1.element(this.elements.captions)) {\n      this.debug.warn('No captions element to render to');\n      return;\n    } // Only accept array or empty input\n\n\n    if (!is$1.nullOrUndefined(input) && !Array.isArray(input)) {\n      this.debug.warn('updateCues: Invalid input', input);\n      return;\n    }\n\n    var cues = input; // Get cues from track\n\n    if (!cues) {\n      var track = captions.getCurrentTrack.call(this);\n      cues = Array.from((track || {}).activeCues || []).map(function (cue) {\n        return cue.getCueAsHTML();\n      }).map(getHTML);\n    } // Set new caption text\n\n\n    var content = cues.map(function (cueText) {\n      return cueText.trim();\n    }).join('\\n');\n    var changed = content !== this.elements.captions.innerHTML;\n\n    if (changed) {\n      // Empty the container and create a new child element\n      emptyElement(this.elements.captions);\n      var caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n      caption.innerHTML = content;\n      this.elements.captions.appendChild(caption); // Trigger event\n\n      triggerEvent.call(this, this.media, 'cuechange');\n    }\n  }\n};\n\n// ==========================================================================\n// Plyr default config\n// ==========================================================================\nvar defaults$1 = {\n  // Disable\n  enabled: true,\n  // Custom media title\n  title: '',\n  // Logging to console\n  debug: false,\n  // Auto play (if supported)\n  autoplay: false,\n  // Only allow one media playing at once (vimeo only)\n  autopause: true,\n  // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n  // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n  playsinline: true,\n  // Default time to skip when rewind/fast forward\n  seekTime: 10,\n  // Default volume\n  volume: 1,\n  muted: false,\n  // Pass a custom duration\n  duration: null,\n  // Display the media duration on load in the current time position\n  // If you have opted to display both duration and currentTime, this is ignored\n  displayDuration: true,\n  // Invert the current time to be a countdown\n  invertTime: true,\n  // Clicking the currentTime inverts it's value to show time left rather than elapsed\n  toggleInvert: true,\n  // Force an aspect ratio\n  // The format must be `'w:h'` (e.g. `'16:9'`)\n  ratio: null,\n  // Click video container to play/pause\n  clickToPlay: true,\n  // Auto hide the controls\n  hideControls: true,\n  // Reset to start when playback ended\n  resetOnEnd: false,\n  // Disable the standard context menu\n  disableContextMenu: true,\n  // Sprite (for icons)\n  loadSprite: true,\n  iconPrefix: 'plyr',\n  iconUrl: 'https://cdn.plyr.io/3.6.3/plyr.svg',\n  // Blank video (used to prevent errors on source change)\n  blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n  // Quality default\n  quality: {\n    default: 576,\n    // The options to display in the UI, if available for the source media\n    options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n    forced: false,\n    onChange: null\n  },\n  // Set loops\n  loop: {\n    active: false // start: null,\n    // end: null,\n\n  },\n  // Speed default and options to display\n  speed: {\n    selected: 1,\n    // The options to display in the UI, if available for the source media (e.g. Vimeo and YouTube only support 0.5x-4x)\n    options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 4]\n  },\n  // Keyboard shortcut settings\n  keyboard: {\n    focused: true,\n    global: false\n  },\n  // Display tooltips\n  tooltips: {\n    controls: false,\n    seek: true\n  },\n  // Captions settings\n  captions: {\n    active: false,\n    language: 'auto',\n    // Listen to new tracks added after Plyr is initialized.\n    // This is needed for streaming captions, but may result in unselectable options\n    update: false\n  },\n  // Fullscreen settings\n  fullscreen: {\n    enabled: true,\n    // Allow fullscreen?\n    fallback: true,\n    // Fallback using full viewport/window\n    iosNative: false // Use the native fullscreen in iOS (disables custom controls)\n    // Selector for the fullscreen container so contextual / non-player content can remain visible in fullscreen mode\n    // Non-ancestors of the player element will be ignored\n    // container: null, // defaults to the player element\n\n  },\n  // Local storage\n  storage: {\n    enabled: true,\n    key: 'plyr'\n  },\n  // Default controls\n  controls: ['play-large', // 'restart',\n  // 'rewind',\n  'play', // 'fast-forward',\n  'progress', 'current-time', // 'duration',\n  'mute', 'volume', 'captions', 'settings', 'pip', 'airplay', // 'download',\n  'fullscreen'],\n  settings: ['captions', 'quality', 'speed'],\n  // Localisation\n  i18n: {\n    restart: 'Restart',\n    rewind: 'Rewind {seektime}s',\n    play: 'Play',\n    pause: 'Pause',\n    fastForward: 'Forward {seektime}s',\n    seek: 'Seek',\n    seekLabel: '{currentTime} of {duration}',\n    played: 'Played',\n    buffered: 'Buffered',\n    currentTime: 'Current time',\n    duration: 'Duration',\n    volume: 'Volume',\n    mute: 'Mute',\n    unmute: 'Unmute',\n    enableCaptions: 'Enable captions',\n    disableCaptions: 'Disable captions',\n    download: 'Download',\n    enterFullscreen: 'Enter fullscreen',\n    exitFullscreen: 'Exit fullscreen',\n    frameTitle: 'Player for {title}',\n    captions: 'Captions',\n    settings: 'Settings',\n    pip: 'PIP',\n    menuBack: 'Go back to previous menu',\n    speed: 'Speed',\n    normal: 'Normal',\n    quality: 'Quality',\n    loop: 'Loop',\n    start: 'Start',\n    end: 'End',\n    all: 'All',\n    reset: 'Reset',\n    disabled: 'Disabled',\n    enabled: 'Enabled',\n    advertisement: 'Ad',\n    qualityBadge: {\n      2160: '4K',\n      1440: 'HD',\n      1080: 'HD',\n      720: 'HD',\n      576: 'SD',\n      480: 'SD'\n    }\n  },\n  // URLs\n  urls: {\n    download: null,\n    vimeo: {\n      sdk: 'https://player.vimeo.com/api/player.js',\n      iframe: 'https://player.vimeo.com/video/{0}?{1}',\n      api: 'https://vimeo.com/api/oembed.json?url={0}'\n    },\n    youtube: {\n      sdk: 'https://www.youtube.com/iframe_api',\n      api: 'https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}'\n    },\n    googleIMA: {\n      sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js'\n    }\n  },\n  // Custom control listeners\n  listeners: {\n    seek: null,\n    play: null,\n    pause: null,\n    restart: null,\n    rewind: null,\n    fastForward: null,\n    mute: null,\n    volume: null,\n    captions: null,\n    download: null,\n    fullscreen: null,\n    pip: null,\n    airplay: null,\n    speed: null,\n    quality: null,\n    loop: null,\n    language: null\n  },\n  // Events to watch and bubble\n  events: [// Events to watch on HTML5 media elements and bubble\n  // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n  'ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'seeked', 'emptied', 'ratechange', 'cuechange', // Custom events\n  'download', 'enterfullscreen', 'exitfullscreen', 'captionsenabled', 'captionsdisabled', 'languagechange', 'controlshidden', 'controlsshown', 'ready', // YouTube\n  'statechange', // Quality\n  'qualitychange', // Ads\n  'adsloaded', 'adscontentpause', 'adscontentresume', 'adstarted', 'adsmidpoint', 'adscomplete', 'adsallcomplete', 'adsimpression', 'adsclick'],\n  // Selectors\n  // Change these to match your template if using custom HTML\n  selectors: {\n    editable: 'input, textarea, select, [contenteditable]',\n    container: '.plyr',\n    controls: {\n      container: null,\n      wrapper: '.plyr__controls'\n    },\n    labels: '[data-plyr]',\n    buttons: {\n      play: '[data-plyr=\"play\"]',\n      pause: '[data-plyr=\"pause\"]',\n      restart: '[data-plyr=\"restart\"]',\n      rewind: '[data-plyr=\"rewind\"]',\n      fastForward: '[data-plyr=\"fast-forward\"]',\n      mute: '[data-plyr=\"mute\"]',\n      captions: '[data-plyr=\"captions\"]',\n      download: '[data-plyr=\"download\"]',\n      fullscreen: '[data-plyr=\"fullscreen\"]',\n      pip: '[data-plyr=\"pip\"]',\n      airplay: '[data-plyr=\"airplay\"]',\n      settings: '[data-plyr=\"settings\"]',\n      loop: '[data-plyr=\"loop\"]'\n    },\n    inputs: {\n      seek: '[data-plyr=\"seek\"]',\n      volume: '[data-plyr=\"volume\"]',\n      speed: '[data-plyr=\"speed\"]',\n      language: '[data-plyr=\"language\"]',\n      quality: '[data-plyr=\"quality\"]'\n    },\n    display: {\n      currentTime: '.plyr__time--current',\n      duration: '.plyr__time--duration',\n      buffer: '.plyr__progress__buffer',\n      loop: '.plyr__progress__loop',\n      // Used later\n      volume: '.plyr__volume--display'\n    },\n    progress: '.plyr__progress',\n    captions: '.plyr__captions',\n    caption: '.plyr__caption'\n  },\n  // Class hooks added to the player in different states\n  classNames: {\n    type: 'plyr--{0}',\n    provider: 'plyr--{0}',\n    video: 'plyr__video-wrapper',\n    embed: 'plyr__video-embed',\n    videoFixedRatio: 'plyr__video-wrapper--fixed-ratio',\n    embedContainer: 'plyr__video-embed__container',\n    poster: 'plyr__poster',\n    posterEnabled: 'plyr__poster-enabled',\n    ads: 'plyr__ads',\n    control: 'plyr__control',\n    controlPressed: 'plyr__control--pressed',\n    playing: 'plyr--playing',\n    paused: 'plyr--paused',\n    stopped: 'plyr--stopped',\n    loading: 'plyr--loading',\n    hover: 'plyr--hover',\n    tooltip: 'plyr__tooltip',\n    cues: 'plyr__cues',\n    hidden: 'plyr__sr-only',\n    hideControls: 'plyr--hide-controls',\n    isIos: 'plyr--is-ios',\n    isTouch: 'plyr--is-touch',\n    uiSupported: 'plyr--full-ui',\n    noTransition: 'plyr--no-transition',\n    display: {\n      time: 'plyr__time'\n    },\n    menu: {\n      value: 'plyr__menu__value',\n      badge: 'plyr__badge',\n      open: 'plyr--menu-open'\n    },\n    captions: {\n      enabled: 'plyr--captions-enabled',\n      active: 'plyr--captions-active'\n    },\n    fullscreen: {\n      enabled: 'plyr--fullscreen-enabled',\n      fallback: 'plyr--fullscreen-fallback'\n    },\n    pip: {\n      supported: 'plyr--pip-supported',\n      active: 'plyr--pip-active'\n    },\n    airplay: {\n      supported: 'plyr--airplay-supported',\n      active: 'plyr--airplay-active'\n    },\n    tabFocus: 'plyr__tab-focus',\n    previewThumbnails: {\n      // Tooltip thumbs\n      thumbContainer: 'plyr__preview-thumb',\n      thumbContainerShown: 'plyr__preview-thumb--is-shown',\n      imageContainer: 'plyr__preview-thumb__image-container',\n      timeContainer: 'plyr__preview-thumb__time-container',\n      // Scrubbing\n      scrubbingContainer: 'plyr__preview-scrubbing',\n      scrubbingContainerShown: 'plyr__preview-scrubbing--is-shown'\n    }\n  },\n  // Embed attributes\n  attributes: {\n    embed: {\n      provider: 'data-plyr-provider',\n      id: 'data-plyr-embed-id'\n    }\n  },\n  // Advertisements plugin\n  // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n  ads: {\n    enabled: false,\n    publisherId: '',\n    tagUrl: ''\n  },\n  // Preview Thumbnails plugin\n  previewThumbnails: {\n    enabled: false,\n    src: ''\n  },\n  // Vimeo plugin\n  vimeo: {\n    byline: false,\n    portrait: false,\n    title: false,\n    speed: true,\n    transparent: false,\n    // Custom settings from Plyr\n    customControls: true,\n    referrerPolicy: null,\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy\n    // Whether the owner of the video has a Pro or Business account\n    // (which allows us to properly hide controls without CSS hacks, etc)\n    premium: false\n  },\n  // YouTube plugin\n  youtube: {\n    rel: 0,\n    // No related vids\n    showinfo: 0,\n    // Hide info\n    iv_load_policy: 3,\n    // Hide annotations\n    modestbranding: 1,\n    // Hide logos as much as possible (they still show one in the corner when paused)\n    // Custom settings from Plyr\n    customControls: true,\n    noCookie: false // Whether to use an alternative version of YouTube without cookies\n\n  }\n};\n\n// ==========================================================================\n// Plyr states\n// ==========================================================================\nvar pip = {\n  active: 'picture-in-picture',\n  inactive: 'inline'\n};\n\n// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\nvar providers = {\n  html5: 'html5',\n  youtube: 'youtube',\n  vimeo: 'vimeo'\n};\nvar types = {\n  audio: 'audio',\n  video: 'video'\n};\n/**\n * Get provider by URL\n * @param {String} url\n */\n\nfunction getProviderByUrl(url) {\n  // YouTube\n  if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtube-nocookie\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n    return providers.youtube;\n  } // Vimeo\n\n\n  if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n    return providers.vimeo;\n  }\n\n  return null;\n}\n\n// ==========================================================================\n// Console wrapper\n// ==========================================================================\nvar noop = function noop() {};\n\nvar Console = /*#__PURE__*/function () {\n  function Console() {\n    var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    _classCallCheck(this, Console);\n\n    this.enabled = window.console && enabled;\n\n    if (this.enabled) {\n      this.log('Debugging enabled');\n    }\n  }\n\n  _createClass(Console, [{\n    key: \"log\",\n    get: function get() {\n      // eslint-disable-next-line no-console\n      return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n  }, {\n    key: \"warn\",\n    get: function get() {\n      // eslint-disable-next-line no-console\n      return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      // eslint-disable-next-line no-console\n      return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n  }]);\n\n  return Console;\n}();\n\nvar Fullscreen = /*#__PURE__*/function () {\n  function Fullscreen(player) {\n    var _this = this;\n\n    _classCallCheck(this, Fullscreen);\n\n    _defineProperty(this, \"onChange\", function () {\n      if (!_this.enabled) {\n        return;\n      } // Update toggle button\n\n\n      var button = _this.player.elements.buttons.fullscreen;\n\n      if (is$1.element(button)) {\n        button.pressed = _this.active;\n      } // Always trigger events on the plyr / media element (not a fullscreen container) and let them bubble up\n\n\n      var target = _this.target === _this.player.media ? _this.target : _this.player.elements.container; // Trigger an event\n\n      triggerEvent.call(_this.player, target, _this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n    });\n\n    _defineProperty(this, \"toggleFallback\", function () {\n      var toggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      // Store or restore scroll position\n      if (toggle) {\n        _this.scrollPosition = {\n          x: window.scrollX || 0,\n          y: window.scrollY || 0\n        };\n      } else {\n        window.scrollTo(_this.scrollPosition.x, _this.scrollPosition.y);\n      } // Toggle scroll\n\n\n      document.body.style.overflow = toggle ? 'hidden' : ''; // Toggle class hook\n\n      toggleClass(_this.target, _this.player.config.classNames.fullscreen.fallback, toggle); // Force full viewport on iPhone X+\n\n      if (browser.isIos) {\n        var viewport = document.head.querySelector('meta[name=\"viewport\"]');\n        var property = 'viewport-fit=cover'; // Inject the viewport meta if required\n\n        if (!viewport) {\n          viewport = document.createElement('meta');\n          viewport.setAttribute('name', 'viewport');\n        } // Check if the property already exists\n\n\n        var hasProperty = is$1.string(viewport.content) && viewport.content.includes(property);\n\n        if (toggle) {\n          _this.cleanupViewport = !hasProperty;\n\n          if (!hasProperty) {\n            viewport.content += \",\".concat(property);\n          }\n        } else if (_this.cleanupViewport) {\n          viewport.content = viewport.content.split(',').filter(function (part) {\n            return part.trim() !== property;\n          }).join(',');\n        }\n      } // Toggle button and fire events\n\n\n      _this.onChange();\n    });\n\n    _defineProperty(this, \"trapFocus\", function (event) {\n      // Bail if iOS, not active, not the tab key\n      if (browser.isIos || !_this.active || event.key !== 'Tab' || event.keyCode !== 9) {\n        return;\n      } // Get the current focused element\n\n\n      var focused = document.activeElement;\n      var focusable = getElements.call(_this.player, 'a[href], button:not(:disabled), input:not(:disabled), [tabindex]');\n\n      var _focusable = _slicedToArray(focusable, 1),\n          first = _focusable[0];\n\n      var last = focusable[focusable.length - 1];\n\n      if (focused === last && !event.shiftKey) {\n        // Move focus to first element that can be tabbed if Shift isn't used\n        first.focus();\n        event.preventDefault();\n      } else if (focused === first && event.shiftKey) {\n        // Move focus to last element that can be tabbed if Shift is used\n        last.focus();\n        event.preventDefault();\n      }\n    });\n\n    _defineProperty(this, \"update\", function () {\n      if (_this.enabled) {\n        var mode;\n\n        if (_this.forceFallback) {\n          mode = 'Fallback (forced)';\n        } else if (Fullscreen.native) {\n          mode = 'Native';\n        } else {\n          mode = 'Fallback';\n        }\n\n        _this.player.debug.log(\"\".concat(mode, \" fullscreen enabled\"));\n      } else {\n        _this.player.debug.log('Fullscreen not supported and fallback disabled');\n      } // Add styling hook to show button\n\n\n      toggleClass(_this.player.elements.container, _this.player.config.classNames.fullscreen.enabled, _this.enabled);\n    });\n\n    _defineProperty(this, \"enter\", function () {\n      if (!_this.enabled) {\n        return;\n      } // iOS native fullscreen doesn't need the request step\n\n\n      if (browser.isIos && _this.player.config.fullscreen.iosNative) {\n        _this.target.webkitEnterFullscreen();\n      } else if (!Fullscreen.native || _this.forceFallback) {\n        _this.toggleFallback(true);\n      } else if (!_this.prefix) {\n        _this.target.requestFullscreen({\n          navigationUI: 'hide'\n        });\n      } else if (!is$1.empty(_this.prefix)) {\n        _this.target[\"\".concat(_this.prefix, \"Request\").concat(_this.property)]();\n      }\n    });\n\n    _defineProperty(this, \"exit\", function () {\n      if (!_this.enabled) {\n        return;\n      } // iOS native fullscreen\n\n\n      if (browser.isIos && _this.player.config.fullscreen.iosNative) {\n        _this.target.webkitExitFullscreen();\n\n        silencePromise(_this.player.play());\n      } else if (!Fullscreen.native || _this.forceFallback) {\n        _this.toggleFallback(false);\n      } else if (!_this.prefix) {\n        (document.cancelFullScreen || document.exitFullscreen).call(document);\n      } else if (!is$1.empty(_this.prefix)) {\n        var action = _this.prefix === 'moz' ? 'Cancel' : 'Exit';\n        document[\"\".concat(_this.prefix).concat(action).concat(_this.property)]();\n      }\n    });\n\n    _defineProperty(this, \"toggle\", function () {\n      if (!_this.active) {\n        _this.enter();\n      } else {\n        _this.exit();\n      }\n    });\n\n    // Keep reference to parent\n    this.player = player; // Get prefix\n\n    this.prefix = Fullscreen.prefix;\n    this.property = Fullscreen.property; // Scroll position\n\n    this.scrollPosition = {\n      x: 0,\n      y: 0\n    }; // Force the use of 'full window/browser' rather than fullscreen\n\n    this.forceFallback = player.config.fullscreen.fallback === 'force'; // Get the fullscreen element\n    // Checks container is an ancestor, defaults to null\n\n    this.player.elements.fullscreen = player.config.fullscreen.container && closest(this.player.elements.container, player.config.fullscreen.container); // Register event listeners\n    // Handle event (incase user presses escape etc)\n\n    on.call(this.player, document, this.prefix === 'ms' ? 'MSFullscreenChange' : \"\".concat(this.prefix, \"fullscreenchange\"), function () {\n      // TODO: Filter for target??\n      _this.onChange();\n    }); // Fullscreen toggle on double click\n\n    on.call(this.player, this.player.elements.container, 'dblclick', function (event) {\n      // Ignore double click in controls\n      if (is$1.element(_this.player.elements.controls) && _this.player.elements.controls.contains(event.target)) {\n        return;\n      }\n\n      _this.player.listeners.proxy(event, _this.toggle, 'fullscreen');\n    }); // Tap focus when in fullscreen\n\n    on.call(this, this.player.elements.container, 'keydown', function (event) {\n      return _this.trapFocus(event);\n    }); // Update the UI\n\n    this.update(); // this.toggle = this.toggle.bind(this);\n  } // Determine if native supported\n\n\n  _createClass(Fullscreen, [{\n    key: \"usingNative\",\n    // If we're actually using native\n    get: function get() {\n      return Fullscreen.native && !this.forceFallback;\n    } // Get the prefix for handlers\n\n  }, {\n    key: \"enabled\",\n    // Determine if fullscreen is enabled\n    get: function get() {\n      return (Fullscreen.native || this.player.config.fullscreen.fallback) && this.player.config.fullscreen.enabled && this.player.supported.ui && this.player.isVideo;\n    } // Get active state\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      if (!this.enabled) {\n        return false;\n      } // Fallback using classname\n\n\n      if (!Fullscreen.native || this.forceFallback) {\n        return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n      }\n\n      var element = !this.prefix ? document.fullscreenElement : document[\"\".concat(this.prefix).concat(this.property, \"Element\")];\n      return element && element.shadowRoot ? element === this.target.getRootNode().host : element === this.target;\n    } // Get target element\n\n  }, {\n    key: \"target\",\n    get: function get() {\n      return browser.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.fullscreen || this.player.elements.container;\n    }\n  }], [{\n    key: \"native\",\n    get: function get() {\n      return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled);\n    }\n  }, {\n    key: \"prefix\",\n    get: function get() {\n      // No prefix\n      if (is$1.function(document.exitFullscreen)) {\n        return '';\n      } // Check for fullscreen support by vendor prefix\n\n\n      var value = '';\n      var prefixes = ['webkit', 'moz', 'ms'];\n      prefixes.some(function (pre) {\n        if (is$1.function(document[\"\".concat(pre, \"ExitFullscreen\")]) || is$1.function(document[\"\".concat(pre, \"CancelFullScreen\")])) {\n          value = pre;\n          return true;\n        }\n\n        return false;\n      });\n      return value;\n    }\n  }, {\n    key: \"property\",\n    get: function get() {\n      return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n  }]);\n\n  return Fullscreen;\n}();\n\n// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\nfunction loadImage(src) {\n  var minWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return new Promise(function (resolve, reject) {\n    var image = new Image();\n\n    var handler = function handler() {\n      delete image.onload;\n      delete image.onerror;\n      (image.naturalWidth >= minWidth ? resolve : reject)(image);\n    };\n\n    Object.assign(image, {\n      onload: handler,\n      onerror: handler,\n      src: src\n    });\n  });\n}\n\nvar ui = {\n  addStyleHook: function addStyleHook() {\n    toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n    toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n  },\n  // Toggle native HTML5 media controls\n  toggleNativeControls: function toggleNativeControls() {\n    var toggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (toggle && this.isHTML5) {\n      this.media.setAttribute('controls', '');\n    } else {\n      this.media.removeAttribute('controls');\n    }\n  },\n  // Setup the UI\n  build: function build() {\n    var _this = this;\n\n    // Re-attach media element listeners\n    // TODO: Use event bubbling?\n    this.listeners.media(); // Don't setup interface if no support\n\n    if (!this.supported.ui) {\n      this.debug.warn(\"Basic support only for \".concat(this.provider, \" \").concat(this.type)); // Restore native controls\n\n      ui.toggleNativeControls.call(this, true); // Bail\n\n      return;\n    } // Inject custom controls if not present\n\n\n    if (!is$1.element(this.elements.controls)) {\n      // Inject custom controls\n      controls.inject.call(this); // Re-attach control listeners\n\n      this.listeners.controls();\n    } // Remove native controls\n\n\n    ui.toggleNativeControls.call(this); // Setup captions for HTML5\n\n    if (this.isHTML5) {\n      captions.setup.call(this);\n    } // Reset volume\n\n\n    this.volume = null; // Reset mute state\n\n    this.muted = null; // Reset loop state\n\n    this.loop = null; // Reset quality setting\n\n    this.quality = null; // Reset speed\n\n    this.speed = null; // Reset volume display\n\n    controls.updateVolume.call(this); // Reset time display\n\n    controls.timeUpdate.call(this); // Update the UI\n\n    ui.checkPlaying.call(this); // Check for picture-in-picture support\n\n    toggleClass(this.elements.container, this.config.classNames.pip.supported, support.pip && this.isHTML5 && this.isVideo); // Check for airplay support\n\n    toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5); // Add iOS class\n\n    toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos); // Add touch class\n\n    toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch); // Ready for API calls\n\n    this.ready = true; // Ready event at end of execution stack\n\n    setTimeout(function () {\n      triggerEvent.call(_this, _this.media, 'ready');\n    }, 0); // Set the title\n\n    ui.setTitle.call(this); // Assure the poster image is set, if the property was added before the element was created\n\n    if (this.poster) {\n      ui.setPoster.call(this, this.poster, false).catch(function () {});\n    } // Manually set the duration if user has overridden it.\n    // The event listeners for it doesn't get called if preload is disabled (#701)\n\n\n    if (this.config.duration) {\n      controls.durationUpdate.call(this);\n    }\n  },\n  // Setup aria attribute for play and iframe title\n  setTitle: function setTitle() {\n    // Find the current text\n    var label = i18n.get('play', this.config); // If there's a media title set, use that for the label\n\n    if (is$1.string(this.config.title) && !is$1.empty(this.config.title)) {\n      label += \", \".concat(this.config.title);\n    } // If there's a play button, set label\n\n\n    Array.from(this.elements.buttons.play || []).forEach(function (button) {\n      button.setAttribute('aria-label', label);\n    }); // Set iframe title\n    // https://github.com/sampotts/plyr/issues/124\n\n    if (this.isEmbed) {\n      var iframe = getElement.call(this, 'iframe');\n\n      if (!is$1.element(iframe)) {\n        return;\n      } // Default to media type\n\n\n      var title = !is$1.empty(this.config.title) ? this.config.title : 'video';\n      var format = i18n.get('frameTitle', this.config);\n      iframe.setAttribute('title', format.replace('{title}', title));\n    }\n  },\n  // Toggle poster\n  togglePoster: function togglePoster(enable) {\n    toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n  },\n  // Set the poster image (async)\n  // Used internally for the poster setter, with the passive option forced to false\n  setPoster: function setPoster(poster) {\n    var _this2 = this;\n\n    var passive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    // Don't override if call is passive\n    if (passive && this.poster) {\n      return Promise.reject(new Error('Poster already set'));\n    } // Set property synchronously to respect the call order\n\n\n    this.media.setAttribute('data-poster', poster); // Show the poster\n\n    this.elements.poster.removeAttribute('hidden'); // Wait until ui is ready\n\n    return ready.call(this) // Load image\n    .then(function () {\n      return loadImage(poster);\n    }).catch(function (err) {\n      // Hide poster on error unless it's been set by another call\n      if (poster === _this2.poster) {\n        ui.togglePoster.call(_this2, false);\n      } // Rethrow\n\n\n      throw err;\n    }).then(function () {\n      // Prevent race conditions\n      if (poster !== _this2.poster) {\n        throw new Error('setPoster cancelled by later call to setPoster');\n      }\n    }).then(function () {\n      Object.assign(_this2.elements.poster.style, {\n        backgroundImage: \"url('\".concat(poster, \"')\"),\n        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n        backgroundSize: ''\n      });\n      ui.togglePoster.call(_this2, true);\n      return poster;\n    });\n  },\n  // Check playing state\n  checkPlaying: function checkPlaying(event) {\n    var _this3 = this;\n\n    // Class hooks\n    toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n    toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n    toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped); // Set state\n\n    Array.from(this.elements.buttons.play || []).forEach(function (target) {\n      Object.assign(target, {\n        pressed: _this3.playing\n      });\n      target.setAttribute('aria-label', i18n.get(_this3.playing ? 'pause' : 'play', _this3.config));\n    }); // Only update controls on non timeupdate events\n\n    if (is$1.event(event) && event.type === 'timeupdate') {\n      return;\n    } // Toggle controls\n\n\n    ui.toggleControls.call(this);\n  },\n  // Check if media is loading\n  checkLoading: function checkLoading(event) {\n    var _this4 = this;\n\n    this.loading = ['stalled', 'waiting'].includes(event.type); // Clear timer\n\n    clearTimeout(this.timers.loading); // Timer to prevent flicker when seeking\n\n    this.timers.loading = setTimeout(function () {\n      // Update progress bar loading class state\n      toggleClass(_this4.elements.container, _this4.config.classNames.loading, _this4.loading); // Update controls visibility\n\n      ui.toggleControls.call(_this4);\n    }, this.loading ? 250 : 0);\n  },\n  // Toggle controls based on state and `force` argument\n  toggleControls: function toggleControls(force) {\n    var controlsElement = this.elements.controls;\n\n    if (controlsElement && this.config.hideControls) {\n      // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n      var recentTouchSeek = this.touch && this.lastSeekTime + 2000 > Date.now(); // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n\n      this.toggleControls(Boolean(force || this.loading || this.paused || controlsElement.pressed || controlsElement.hover || recentTouchSeek));\n    }\n  },\n  // Migrate any custom properties from the media to the parent\n  migrateStyles: function migrateStyles() {\n    var _this5 = this;\n\n    // Loop through values (as they are the keys when the object is spread 🤔)\n    Object.values(_objectSpread2({}, this.media.style)) // We're only fussed about Plyr specific properties\n    .filter(function (key) {\n      return !is$1.empty(key) && is$1.string(key) && key.startsWith('--plyr');\n    }).forEach(function (key) {\n      // Set on the container\n      _this5.elements.container.style.setProperty(key, _this5.media.style.getPropertyValue(key)); // Clean up from media element\n\n\n      _this5.media.style.removeProperty(key);\n    }); // Remove attribute if empty\n\n    if (is$1.empty(this.media.style)) {\n      this.media.removeAttribute('style');\n    }\n  }\n};\n\nvar Listeners = /*#__PURE__*/function () {\n  function Listeners(_player) {\n    var _this = this;\n\n    _classCallCheck(this, Listeners);\n\n    _defineProperty(this, \"firstTouch\", function () {\n      var player = _this.player;\n      var elements = player.elements;\n      player.touch = true; // Add touch class\n\n      toggleClass(elements.container, player.config.classNames.isTouch, true);\n    });\n\n    _defineProperty(this, \"setTabFocus\", function (event) {\n      var player = _this.player;\n      var elements = player.elements;\n      clearTimeout(_this.focusTimer); // Ignore any key other than tab\n\n      if (event.type === 'keydown' && event.which !== 9) {\n        return;\n      } // Store reference to event timeStamp\n\n\n      if (event.type === 'keydown') {\n        _this.lastKeyDown = event.timeStamp;\n      } // Remove current classes\n\n\n      var removeCurrent = function removeCurrent() {\n        var className = player.config.classNames.tabFocus;\n        var current = getElements.call(player, \".\".concat(className));\n        toggleClass(current, className, false);\n      }; // Determine if a key was pressed to trigger this event\n\n\n      var wasKeyDown = event.timeStamp - _this.lastKeyDown <= 20; // Ignore focus events if a key was pressed prior\n\n      if (event.type === 'focus' && !wasKeyDown) {\n        return;\n      } // Remove all current\n\n\n      removeCurrent(); // Delay the adding of classname until the focus has changed\n      // This event fires before the focusin event\n\n      if (event.type !== 'focusout') {\n        _this.focusTimer = setTimeout(function () {\n          var focused = document.activeElement; // Ignore if current focus element isn't inside the player\n\n          if (!elements.container.contains(focused)) {\n            return;\n          }\n\n          toggleClass(document.activeElement, player.config.classNames.tabFocus, true);\n        }, 10);\n      }\n    });\n\n    _defineProperty(this, \"global\", function () {\n      var toggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var player = _this.player; // Keyboard shortcuts\n\n      if (player.config.keyboard.global) {\n        toggleListener.call(player, window, 'keydown keyup', _this.handleKey, toggle, false);\n      } // Click anywhere closes menu\n\n\n      toggleListener.call(player, document.body, 'click', _this.toggleMenu, toggle); // Detect touch by events\n\n      once.call(player, document.body, 'touchstart', _this.firstTouch); // Tab focus detection\n\n      toggleListener.call(player, document.body, 'keydown focus blur focusout', _this.setTabFocus, toggle, false, true);\n    });\n\n    _defineProperty(this, \"container\", function () {\n      var player = _this.player;\n      var config = player.config,\n          elements = player.elements,\n          timers = player.timers; // Keyboard shortcuts\n\n      if (!config.keyboard.global && config.keyboard.focused) {\n        on.call(player, elements.container, 'keydown keyup', _this.handleKey, false);\n      } // Toggle controls on mouse events and entering fullscreen\n\n\n      on.call(player, elements.container, 'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen', function (event) {\n        var controlsElement = elements.controls; // Remove button states for fullscreen\n\n        if (controlsElement && event.type === 'enterfullscreen') {\n          controlsElement.pressed = false;\n          controlsElement.hover = false;\n        } // Show, then hide after a timeout unless another control event occurs\n\n\n        var show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n        var delay = 0;\n\n        if (show) {\n          ui.toggleControls.call(player, true); // Use longer timeout for touch devices\n\n          delay = player.touch ? 3000 : 2000;\n        } // Clear timer\n\n\n        clearTimeout(timers.controls); // Set new timer to prevent flicker when seeking\n\n        timers.controls = setTimeout(function () {\n          return ui.toggleControls.call(player, false);\n        }, delay);\n      }); // Set a gutter for Vimeo\n\n      var setGutter = function setGutter(ratio, padding, toggle) {\n        if (!player.isVimeo || player.config.vimeo.premium) {\n          return;\n        }\n\n        var target = player.elements.wrapper.firstChild;\n\n        var _ratio = _slicedToArray(ratio, 2),\n            y = _ratio[1];\n\n        var _getAspectRatio$call = getAspectRatio.call(player),\n            _getAspectRatio$call2 = _slicedToArray(_getAspectRatio$call, 2),\n            videoX = _getAspectRatio$call2[0],\n            videoY = _getAspectRatio$call2[1];\n\n        target.style.maxWidth = toggle ? \"\".concat(y / videoY * videoX, \"px\") : null;\n        target.style.margin = toggle ? '0 auto' : null;\n      }; // Resize on fullscreen change\n\n\n      var setPlayerSize = function setPlayerSize(measure) {\n        // If we don't need to measure the viewport\n        if (!measure) {\n          return setAspectRatio.call(player);\n        }\n\n        var rect = elements.container.getBoundingClientRect();\n        var width = rect.width,\n            height = rect.height;\n        return setAspectRatio.call(player, \"\".concat(width, \":\").concat(height));\n      };\n\n      var resized = function resized() {\n        clearTimeout(timers.resized);\n        timers.resized = setTimeout(setPlayerSize, 50);\n      };\n\n      on.call(player, elements.container, 'enterfullscreen exitfullscreen', function (event) {\n        var _player$fullscreen = player.fullscreen,\n            target = _player$fullscreen.target,\n            usingNative = _player$fullscreen.usingNative; // Ignore events not from target\n\n        if (target !== elements.container) {\n          return;\n        } // If it's not an embed and no ratio specified\n\n\n        if (!player.isEmbed && is$1.empty(player.config.ratio)) {\n          return;\n        }\n\n        var isEnter = event.type === 'enterfullscreen'; // Set the player size when entering fullscreen to viewport size\n\n        var _setPlayerSize = setPlayerSize(isEnter),\n            padding = _setPlayerSize.padding,\n            ratio = _setPlayerSize.ratio; // Set Vimeo gutter\n\n\n        setGutter(ratio, padding, isEnter); // Horrible hack for Safari 14 not repainting properly on entering fullscreen\n\n        if (isEnter) {\n          setTimeout(function () {\n            return repaint(elements.container);\n          }, 100);\n        } // If not using native browser fullscreen API, we need to check for resizes of viewport\n\n\n        if (!usingNative) {\n          if (isEnter) {\n            on.call(player, window, 'resize', resized);\n          } else {\n            off.call(player, window, 'resize', resized);\n          }\n        }\n      });\n    });\n\n    _defineProperty(this, \"media\", function () {\n      var player = _this.player;\n      var elements = player.elements; // Time change on media\n\n      on.call(player, player.media, 'timeupdate seeking seeked', function (event) {\n        return controls.timeUpdate.call(player, event);\n      }); // Display duration\n\n      on.call(player, player.media, 'durationchange loadeddata loadedmetadata', function (event) {\n        return controls.durationUpdate.call(player, event);\n      }); // Handle the media finishing\n\n      on.call(player, player.media, 'ended', function () {\n        // Show poster on end\n        if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n          // Restart\n          player.restart(); // Call pause otherwise IE11 will start playing the video again\n\n          player.pause();\n        }\n      }); // Check for buffer progress\n\n      on.call(player, player.media, 'progress playing seeking seeked', function (event) {\n        return controls.updateProgress.call(player, event);\n      }); // Handle volume changes\n\n      on.call(player, player.media, 'volumechange', function (event) {\n        return controls.updateVolume.call(player, event);\n      }); // Handle play/pause\n\n      on.call(player, player.media, 'playing play pause ended emptied timeupdate', function (event) {\n        return ui.checkPlaying.call(player, event);\n      }); // Loading state\n\n      on.call(player, player.media, 'waiting canplay seeked playing', function (event) {\n        return ui.checkLoading.call(player, event);\n      }); // Click video\n\n      if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n        // Re-fetch the wrapper\n        var wrapper = getElement.call(player, \".\".concat(player.config.classNames.video)); // Bail if there's no wrapper (this should never happen)\n\n        if (!is$1.element(wrapper)) {\n          return;\n        } // On click play, pause or restart\n\n\n        on.call(player, elements.container, 'click', function (event) {\n          var targets = [elements.container, wrapper]; // Ignore if click if not container or in video wrapper\n\n          if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n            return;\n          } // Touch devices will just show controls (if hidden)\n\n\n          if (player.touch && player.config.hideControls) {\n            return;\n          }\n\n          if (player.ended) {\n            _this.proxy(event, player.restart, 'restart');\n\n            _this.proxy(event, function () {\n              silencePromise(player.play());\n            }, 'play');\n          } else {\n            _this.proxy(event, function () {\n              silencePromise(player.togglePlay());\n            }, 'play');\n          }\n        });\n      } // Disable right click\n\n\n      if (player.supported.ui && player.config.disableContextMenu) {\n        on.call(player, elements.wrapper, 'contextmenu', function (event) {\n          event.preventDefault();\n        }, false);\n      } // Volume change\n\n\n      on.call(player, player.media, 'volumechange', function () {\n        // Save to storage\n        player.storage.set({\n          volume: player.volume,\n          muted: player.muted\n        });\n      }); // Speed change\n\n      on.call(player, player.media, 'ratechange', function () {\n        // Update UI\n        controls.updateSetting.call(player, 'speed'); // Save to storage\n\n        player.storage.set({\n          speed: player.speed\n        });\n      }); // Quality change\n\n      on.call(player, player.media, 'qualitychange', function (event) {\n        // Update UI\n        controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n      }); // Update download link when ready and if quality changes\n\n      on.call(player, player.media, 'ready qualitychange', function () {\n        controls.setDownloadUrl.call(player);\n      }); // Proxy events to container\n      // Bubble up key events for Edge\n\n      var proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n      on.call(player, player.media, proxyEvents, function (event) {\n        var _event$detail = event.detail,\n            detail = _event$detail === void 0 ? {} : _event$detail; // Get error details from media\n\n        if (event.type === 'error') {\n          detail = player.media.error;\n        }\n\n        triggerEvent.call(player, elements.container, event.type, true, detail);\n      });\n    });\n\n    _defineProperty(this, \"proxy\", function (event, defaultHandler, customHandlerKey) {\n      var player = _this.player;\n      var customHandler = player.config.listeners[customHandlerKey];\n      var hasCustomHandler = is$1.function(customHandler);\n      var returned = true; // Execute custom handler\n\n      if (hasCustomHandler) {\n        returned = customHandler.call(player, event);\n      } // Only call default handler if not prevented in custom handler\n\n\n      if (returned !== false && is$1.function(defaultHandler)) {\n        defaultHandler.call(player, event);\n      }\n    });\n\n    _defineProperty(this, \"bind\", function (element, type, defaultHandler, customHandlerKey) {\n      var passive = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n      var player = _this.player;\n      var customHandler = player.config.listeners[customHandlerKey];\n      var hasCustomHandler = is$1.function(customHandler);\n      on.call(player, element, type, function (event) {\n        return _this.proxy(event, defaultHandler, customHandlerKey);\n      }, passive && !hasCustomHandler);\n    });\n\n    _defineProperty(this, \"controls\", function () {\n      var player = _this.player;\n      var elements = player.elements; // IE doesn't support input event, so we fallback to change\n\n      var inputEvent = browser.isIE ? 'change' : 'input'; // Play/pause toggle\n\n      if (elements.buttons.play) {\n        Array.from(elements.buttons.play).forEach(function (button) {\n          _this.bind(button, 'click', function () {\n            silencePromise(player.togglePlay());\n          }, 'play');\n        });\n      } // Pause\n\n\n      _this.bind(elements.buttons.restart, 'click', player.restart, 'restart'); // Rewind\n\n\n      _this.bind(elements.buttons.rewind, 'click', function () {\n        // Record seek time so we can prevent hiding controls for a few seconds after rewind\n        player.lastSeekTime = Date.now();\n        player.rewind();\n      }, 'rewind'); // Rewind\n\n\n      _this.bind(elements.buttons.fastForward, 'click', function () {\n        // Record seek time so we can prevent hiding controls for a few seconds after fast forward\n        player.lastSeekTime = Date.now();\n        player.forward();\n      }, 'fastForward'); // Mute toggle\n\n\n      _this.bind(elements.buttons.mute, 'click', function () {\n        player.muted = !player.muted;\n      }, 'mute'); // Captions toggle\n\n\n      _this.bind(elements.buttons.captions, 'click', function () {\n        return player.toggleCaptions();\n      }); // Download\n\n\n      _this.bind(elements.buttons.download, 'click', function () {\n        triggerEvent.call(player, player.media, 'download');\n      }, 'download'); // Fullscreen toggle\n\n\n      _this.bind(elements.buttons.fullscreen, 'click', function () {\n        player.fullscreen.toggle();\n      }, 'fullscreen'); // Picture-in-Picture\n\n\n      _this.bind(elements.buttons.pip, 'click', function () {\n        player.pip = 'toggle';\n      }, 'pip'); // Airplay\n\n\n      _this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay'); // Settings menu - click toggle\n\n\n      _this.bind(elements.buttons.settings, 'click', function (event) {\n        // Prevent the document click listener closing the menu\n        event.stopPropagation();\n        event.preventDefault();\n        controls.toggleMenu.call(player, event);\n      }, null, false); // Can't be passive as we're preventing default\n      // Settings menu - keyboard toggle\n      // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n\n\n      _this.bind(elements.buttons.settings, 'keyup', function (event) {\n        var code = event.which; // We only care about space and return\n\n        if (![13, 32].includes(code)) {\n          return;\n        } // Because return triggers a click anyway, all we need to do is set focus\n\n\n        if (code === 13) {\n          controls.focusFirstMenuItem.call(player, null, true);\n          return;\n        } // Prevent scroll\n\n\n        event.preventDefault(); // Prevent playing video (Firefox)\n\n        event.stopPropagation(); // Toggle menu\n\n        controls.toggleMenu.call(player, event);\n      }, null, false // Can't be passive as we're preventing default\n      ); // Escape closes menu\n\n\n      _this.bind(elements.settings.menu, 'keydown', function (event) {\n        if (event.which === 27) {\n          controls.toggleMenu.call(player, event);\n        }\n      }); // Set range input alternative \"value\", which matches the tooltip time (#954)\n\n\n      _this.bind(elements.inputs.seek, 'mousedown mousemove', function (event) {\n        var rect = elements.progress.getBoundingClientRect();\n        var percent = 100 / rect.width * (event.pageX - rect.left);\n        event.currentTarget.setAttribute('seek-value', percent);\n      }); // Pause while seeking\n\n\n      _this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', function (event) {\n        var seek = event.currentTarget;\n        var code = event.keyCode ? event.keyCode : event.which;\n        var attribute = 'play-on-seeked';\n\n        if (is$1.keyboardEvent(event) && code !== 39 && code !== 37) {\n          return;\n        } // Record seek time so we can prevent hiding controls for a few seconds after seek\n\n\n        player.lastSeekTime = Date.now(); // Was playing before?\n\n        var play = seek.hasAttribute(attribute); // Done seeking\n\n        var done = ['mouseup', 'touchend', 'keyup'].includes(event.type); // If we're done seeking and it was playing, resume playback\n\n        if (play && done) {\n          seek.removeAttribute(attribute);\n          silencePromise(player.play());\n        } else if (!done && player.playing) {\n          seek.setAttribute(attribute, '');\n          player.pause();\n        }\n      }); // Fix range inputs on iOS\n      // Super weird iOS bug where after you interact with an <input type=\"range\">,\n      // it takes over further interactions on the page. This is a hack\n\n\n      if (browser.isIos) {\n        var inputs = getElements.call(player, 'input[type=\"range\"]');\n        Array.from(inputs).forEach(function (input) {\n          return _this.bind(input, inputEvent, function (event) {\n            return repaint(event.target);\n          });\n        });\n      } // Seek\n\n\n      _this.bind(elements.inputs.seek, inputEvent, function (event) {\n        var seek = event.currentTarget; // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n\n        var seekTo = seek.getAttribute('seek-value');\n\n        if (is$1.empty(seekTo)) {\n          seekTo = seek.value;\n        }\n\n        seek.removeAttribute('seek-value');\n        player.currentTime = seekTo / seek.max * player.duration;\n      }, 'seek'); // Seek tooltip\n\n\n      _this.bind(elements.progress, 'mouseenter mouseleave mousemove', function (event) {\n        return controls.updateSeekTooltip.call(player, event);\n      }); // Preview thumbnails plugin\n      // TODO: Really need to work on some sort of plug-in wide event bus or pub-sub for this\n\n\n      _this.bind(elements.progress, 'mousemove touchmove', function (event) {\n        var previewThumbnails = player.previewThumbnails;\n\n        if (previewThumbnails && previewThumbnails.loaded) {\n          previewThumbnails.startMove(event);\n        }\n      }); // Hide thumbnail preview - on mouse click, mouse leave, and video play/seek. All four are required, e.g., for buffering\n\n\n      _this.bind(elements.progress, 'mouseleave touchend click', function () {\n        var previewThumbnails = player.previewThumbnails;\n\n        if (previewThumbnails && previewThumbnails.loaded) {\n          previewThumbnails.endMove(false, true);\n        }\n      }); // Show scrubbing preview\n\n\n      _this.bind(elements.progress, 'mousedown touchstart', function (event) {\n        var previewThumbnails = player.previewThumbnails;\n\n        if (previewThumbnails && previewThumbnails.loaded) {\n          previewThumbnails.startScrubbing(event);\n        }\n      });\n\n      _this.bind(elements.progress, 'mouseup touchend', function (event) {\n        var previewThumbnails = player.previewThumbnails;\n\n        if (previewThumbnails && previewThumbnails.loaded) {\n          previewThumbnails.endScrubbing(event);\n        }\n      }); // Polyfill for lower fill in <input type=\"range\"> for webkit\n\n\n      if (browser.isWebkit) {\n        Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(function (element) {\n          _this.bind(element, 'input', function (event) {\n            return controls.updateRangeFill.call(player, event.target);\n          });\n        });\n      } // Current time invert\n      // Only if one time element is used for both currentTime and duration\n\n\n      if (player.config.toggleInvert && !is$1.element(elements.display.duration)) {\n        _this.bind(elements.display.currentTime, 'click', function () {\n          // Do nothing if we're at the start\n          if (player.currentTime === 0) {\n            return;\n          }\n\n          player.config.invertTime = !player.config.invertTime;\n          controls.timeUpdate.call(player);\n        });\n      } // Volume\n\n\n      _this.bind(elements.inputs.volume, inputEvent, function (event) {\n        player.volume = event.target.value;\n      }, 'volume'); // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n\n\n      _this.bind(elements.controls, 'mouseenter mouseleave', function (event) {\n        elements.controls.hover = !player.touch && event.type === 'mouseenter';\n      }); // Also update controls.hover state for any non-player children of fullscreen element (as above)\n\n\n      if (elements.fullscreen) {\n        Array.from(elements.fullscreen.children).filter(function (c) {\n          return !c.contains(elements.container);\n        }).forEach(function (child) {\n          _this.bind(child, 'mouseenter mouseleave', function (event) {\n            elements.controls.hover = !player.touch && event.type === 'mouseenter';\n          });\n        });\n      } // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n\n\n      _this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', function (event) {\n        elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n      }); // Show controls when they receive focus (e.g., when using keyboard tab key)\n\n\n      _this.bind(elements.controls, 'focusin', function () {\n        var config = player.config,\n            timers = player.timers; // Skip transition to prevent focus from scrolling the parent element\n\n        toggleClass(elements.controls, config.classNames.noTransition, true); // Toggle\n\n        ui.toggleControls.call(player, true); // Restore transition\n\n        setTimeout(function () {\n          toggleClass(elements.controls, config.classNames.noTransition, false);\n        }, 0); // Delay a little more for mouse users\n\n        var delay = _this.touch ? 3000 : 4000; // Clear timer\n\n        clearTimeout(timers.controls); // Hide again after delay\n\n        timers.controls = setTimeout(function () {\n          return ui.toggleControls.call(player, false);\n        }, delay);\n      }); // Mouse wheel for volume\n\n\n      _this.bind(elements.inputs.volume, 'wheel', function (event) {\n        // Detect \"natural\" scroll - suppored on OS X Safari only\n        // Other browsers on OS X will be inverted until support improves\n        var inverted = event.webkitDirectionInvertedFromDevice; // Get delta from event. Invert if `inverted` is true\n\n        var _map = [event.deltaX, -event.deltaY].map(function (value) {\n          return inverted ? -value : value;\n        }),\n            _map2 = _slicedToArray(_map, 2),\n            x = _map2[0],\n            y = _map2[1]; // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n\n\n        var direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y); // Change the volume by 2%\n\n        player.increaseVolume(direction / 50); // Don't break page scrolling at max and min\n\n        var volume = player.media.volume;\n\n        if (direction === 1 && volume < 1 || direction === -1 && volume > 0) {\n          event.preventDefault();\n        }\n      }, 'volume', false);\n    });\n\n    this.player = _player;\n    this.lastKey = null;\n    this.focusTimer = null;\n    this.lastKeyDown = null;\n    this.handleKey = this.handleKey.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.setTabFocus = this.setTabFocus.bind(this);\n    this.firstTouch = this.firstTouch.bind(this);\n  } // Handle key presses\n\n\n  _createClass(Listeners, [{\n    key: \"handleKey\",\n    value: function handleKey(event) {\n      var player = this.player;\n      var elements = player.elements;\n      var code = event.keyCode ? event.keyCode : event.which;\n      var pressed = event.type === 'keydown';\n      var repeat = pressed && code === this.lastKey; // Bail if a modifier key is set\n\n      if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n        return;\n      } // If the event is bubbled from the media element\n      // Firefox doesn't get the keycode for whatever reason\n\n\n      if (!is$1.number(code)) {\n        return;\n      } // Seek by the number keys\n\n\n      var seekByKey = function seekByKey() {\n        // Divide the max duration into 10th's and times by the number value\n        player.currentTime = player.duration / 10 * (code - 48);\n      }; // Handle the key on keydown\n      // Reset on keyup\n\n\n      if (pressed) {\n        // Check focused element\n        // and if the focused element is not editable (e.g. text input)\n        // and any that accept key input http://webaim.org/techniques/keyboard/\n        var focused = document.activeElement;\n\n        if (is$1.element(focused)) {\n          var editable = player.config.selectors.editable;\n          var seek = elements.inputs.seek;\n\n          if (focused !== seek && matches$1(focused, editable)) {\n            return;\n          }\n\n          if (event.which === 32 && matches$1(focused, 'button, [role^=\"menuitem\"]')) {\n            return;\n          }\n        } // Which keycodes should we prevent default\n\n\n        var preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79]; // If the code is found prevent default (e.g. prevent scrolling for arrows)\n\n        if (preventDefault.includes(code)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        switch (code) {\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n            // 0-9\n            if (!repeat) {\n              seekByKey();\n            }\n\n            break;\n\n          case 32:\n          case 75:\n            // Space and K key\n            if (!repeat) {\n              silencePromise(player.togglePlay());\n            }\n\n            break;\n\n          case 38:\n            // Arrow up\n            player.increaseVolume(0.1);\n            break;\n\n          case 40:\n            // Arrow down\n            player.decreaseVolume(0.1);\n            break;\n\n          case 77:\n            // M key\n            if (!repeat) {\n              player.muted = !player.muted;\n            }\n\n            break;\n\n          case 39:\n            // Arrow forward\n            player.forward();\n            break;\n\n          case 37:\n            // Arrow back\n            player.rewind();\n            break;\n\n          case 70:\n            // F key\n            player.fullscreen.toggle();\n            break;\n\n          case 67:\n            // C key\n            if (!repeat) {\n              player.toggleCaptions();\n            }\n\n            break;\n\n          case 76:\n            // L key\n            player.loop = !player.loop;\n            break;\n        } // Escape is handle natively when in full screen\n        // So we only need to worry about non native\n\n\n        if (code === 27 && !player.fullscreen.usingNative && player.fullscreen.active) {\n          player.fullscreen.toggle();\n        } // Store last code for next cycle\n\n\n        this.lastKey = code;\n      } else {\n        this.lastKey = null;\n      }\n    } // Toggle menu\n\n  }, {\n    key: \"toggleMenu\",\n    value: function toggleMenu(event) {\n      controls.toggleMenu.call(this.player, event);\n    } // Device is touch enabled\n\n  }]);\n\n  return Listeners;\n}();\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar loadjs_umd = createCommonjsModule(function (module, exports) {\n  (function (root, factory) {\n    {\n      module.exports = factory();\n    }\n  })(commonjsGlobal, function () {\n    /**\n     * Global dependencies.\n     * @global {Object} document - DOM\n     */\n    var devnull = function devnull() {},\n        bundleIdCache = {},\n        bundleResultCache = {},\n        bundleCallbackQueue = {};\n    /**\n     * Subscribe to bundle load event.\n     * @param {string[]} bundleIds - Bundle ids\n     * @param {Function} callbackFn - The callback function\n     */\n\n\n    function subscribe(bundleIds, callbackFn) {\n      // listify\n      bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n      var depsNotFound = [],\n          i = bundleIds.length,\n          numWaiting = i,\n          fn,\n          bundleId,\n          r,\n          q; // define callback function\n\n      fn = function fn(bundleId, pathsNotFound) {\n        if (pathsNotFound.length) depsNotFound.push(bundleId);\n        numWaiting--;\n        if (!numWaiting) callbackFn(depsNotFound);\n      }; // register callback\n\n\n      while (i--) {\n        bundleId = bundleIds[i]; // execute callback if in result cache\n\n        r = bundleResultCache[bundleId];\n\n        if (r) {\n          fn(bundleId, r);\n          continue;\n        } // add to callback queue\n\n\n        q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n        q.push(fn);\n      }\n    }\n    /**\n     * Publish bundle load event.\n     * @param {string} bundleId - Bundle id\n     * @param {string[]} pathsNotFound - List of files not found\n     */\n\n\n    function publish(bundleId, pathsNotFound) {\n      // exit if id isn't defined\n      if (!bundleId) return;\n      var q = bundleCallbackQueue[bundleId]; // cache result\n\n      bundleResultCache[bundleId] = pathsNotFound; // exit if queue is empty\n\n      if (!q) return; // empty callback queue\n\n      while (q.length) {\n        q[0](bundleId, pathsNotFound);\n        q.splice(0, 1);\n      }\n    }\n    /**\n     * Execute callbacks.\n     * @param {Object or Function} args - The callback args\n     * @param {string[]} depsNotFound - List of dependencies not found\n     */\n\n\n    function executeCallbacks(args, depsNotFound) {\n      // accept function as argument\n      if (args.call) args = {\n        success: args\n      }; // success and error callbacks\n\n      if (depsNotFound.length) (args.error || devnull)(depsNotFound);else (args.success || devnull)(args);\n    }\n    /**\n     * Load individual file.\n     * @param {string} path - The file path\n     * @param {Function} callbackFn - The callback function\n     */\n\n\n    function loadFile(path, callbackFn, args, numTries) {\n      var doc = document,\n          async = args.async,\n          maxTries = (args.numRetries || 0) + 1,\n          beforeCallbackFn = args.before || devnull,\n          pathname = path.replace(/[\\?|#].*$/, ''),\n          pathStripped = path.replace(/^(css|img)!/, ''),\n          isLegacyIECss,\n          e;\n      numTries = numTries || 0;\n\n      if (/(^css!|\\.css$)/.test(pathname)) {\n        // css\n        e = doc.createElement('link');\n        e.rel = 'stylesheet';\n        e.href = pathStripped; // tag IE9+\n\n        isLegacyIECss = 'hideFocus' in e; // use preload in IE Edge (to detect load errors)\n\n        if (isLegacyIECss && e.relList) {\n          isLegacyIECss = 0;\n          e.rel = 'preload';\n          e.as = 'style';\n        }\n      } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n        // image\n        e = doc.createElement('img');\n        e.src = pathStripped;\n      } else {\n        // javascript\n        e = doc.createElement('script');\n        e.src = path;\n        e.async = async === undefined ? true : async;\n      }\n\n      e.onload = e.onerror = e.onbeforeload = function (ev) {\n        var result = ev.type[0]; // treat empty stylesheets as failures to get around lack of onerror\n        // support in IE9-11\n\n        if (isLegacyIECss) {\n          try {\n            if (!e.sheet.cssText.length) result = 'e';\n          } catch (x) {\n            // sheets objects created from load errors don't allow access to\n            // `cssText` (unless error is Code:18 SecurityError)\n            if (x.code != 18) result = 'e';\n          }\n        } // handle retries in case of load failure\n\n\n        if (result == 'e') {\n          // increment counter\n          numTries += 1; // exit function and try again\n\n          if (numTries < maxTries) {\n            return loadFile(path, callbackFn, args, numTries);\n          }\n        } else if (e.rel == 'preload' && e.as == 'style') {\n          // activate preloaded stylesheets\n          return e.rel = 'stylesheet'; // jshint ignore:line\n        } // execute callback\n\n\n        callbackFn(path, result, ev.defaultPrevented);\n      }; // add to document (unless callback returns `false`)\n\n\n      if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n    }\n    /**\n     * Load multiple files.\n     * @param {string[]} paths - The file paths\n     * @param {Function} callbackFn - The callback function\n     */\n\n\n    function loadFiles(paths, callbackFn, args) {\n      // listify paths\n      paths = paths.push ? paths : [paths];\n      var numWaiting = paths.length,\n          x = numWaiting,\n          pathsNotFound = [],\n          fn,\n          i; // define callback function\n\n      fn = function fn(path, result, defaultPrevented) {\n        // handle error\n        if (result == 'e') pathsNotFound.push(path); // handle beforeload event. If defaultPrevented then that means the load\n        // will be blocked (ex. Ghostery/ABP on Safari)\n\n        if (result == 'b') {\n          if (defaultPrevented) pathsNotFound.push(path);else return;\n        }\n\n        numWaiting--;\n        if (!numWaiting) callbackFn(pathsNotFound);\n      }; // load scripts\n\n\n      for (i = 0; i < x; i++) {\n        loadFile(paths[i], fn, args);\n      }\n    }\n    /**\n     * Initiate script load and register bundle.\n     * @param {(string|string[])} paths - The file paths\n     * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n     *   callback or (3) object literal with success/error arguments, numRetries,\n     *   etc.\n     * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n     *   literal with success/error arguments, numRetries, etc.\n     */\n\n\n    function loadjs(paths, arg1, arg2) {\n      var bundleId, args; // bundleId (if string)\n\n      if (arg1 && arg1.trim) bundleId = arg1; // args (default is {})\n\n      args = (bundleId ? arg2 : arg1) || {}; // throw error if bundle is already defined\n\n      if (bundleId) {\n        if (bundleId in bundleIdCache) {\n          throw \"LoadJS\";\n        } else {\n          bundleIdCache[bundleId] = true;\n        }\n      }\n\n      function loadFn(resolve, reject) {\n        loadFiles(paths, function (pathsNotFound) {\n          // execute callbacks\n          executeCallbacks(args, pathsNotFound); // resolve Promise\n\n          if (resolve) {\n            executeCallbacks({\n              success: resolve,\n              error: reject\n            }, pathsNotFound);\n          } // publish bundle load event\n\n\n          publish(bundleId, pathsNotFound);\n        }, args);\n      }\n\n      if (args.returnPromise) return new Promise(loadFn);else loadFn();\n    }\n    /**\n     * Execute callbacks when dependencies have been satisfied.\n     * @param {(string|string[])} deps - List of bundle ids\n     * @param {Object} args - success/error arguments\n     */\n\n\n    loadjs.ready = function ready(deps, args) {\n      // subscribe to bundle load event\n      subscribe(deps, function (depsNotFound) {\n        // execute callbacks\n        executeCallbacks(args, depsNotFound);\n      });\n      return loadjs;\n    };\n    /**\n     * Manually satisfy bundle dependencies.\n     * @param {string} bundleId - The bundle id\n     */\n\n\n    loadjs.done = function done(bundleId) {\n      publish(bundleId, []);\n    };\n    /**\n     * Reset loadjs dependencies statuses\n     */\n\n\n    loadjs.reset = function reset() {\n      bundleIdCache = {};\n      bundleResultCache = {};\n      bundleCallbackQueue = {};\n    };\n    /**\n     * Determine if bundle has already been defined\n     * @param String} bundleId - The bundle id\n     */\n\n\n    loadjs.isDefined = function isDefined(bundleId) {\n      return bundleId in bundleIdCache;\n    }; // export\n\n\n    return loadjs;\n  });\n});\n\n// ==========================================================================\nfunction loadScript(url) {\n  return new Promise(function (resolve, reject) {\n    loadjs_umd(url, {\n      success: resolve,\n      error: reject\n    });\n  });\n}\n\nfunction parseId(url) {\n  if (is$1.empty(url)) {\n    return null;\n  }\n\n  if (is$1.number(Number(url))) {\n    return url;\n  }\n\n  var regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n  return url.match(regex) ? RegExp.$2 : url;\n} // Set playback state and trigger change (only on actual change)\n\n\nfunction assurePlaybackState(play) {\n  if (play && !this.embed.hasPlayed) {\n    this.embed.hasPlayed = true;\n  }\n\n  if (this.media.paused === play) {\n    this.media.paused = !play;\n    triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n  }\n}\n\nvar vimeo = {\n  setup: function setup() {\n    var player = this; // Add embed class for responsive\n\n    toggleClass(player.elements.wrapper, player.config.classNames.embed, true); // Set speed options from config\n\n    player.options.speed = player.config.speed.options; // Set intial ratio\n\n    setAspectRatio.call(player); // Load the SDK if not already\n\n    if (!is$1.object(window.Vimeo)) {\n      loadScript(player.config.urls.vimeo.sdk).then(function () {\n        vimeo.ready.call(player);\n      }).catch(function (error) {\n        player.debug.warn('Vimeo SDK (player.js) failed to load', error);\n      });\n    } else {\n      vimeo.ready.call(player);\n    }\n  },\n  // API Ready\n  ready: function ready() {\n    var _this = this;\n\n    var player = this;\n    var config = player.config.vimeo;\n\n    var premium = config.premium,\n        referrerPolicy = config.referrerPolicy,\n        frameParams = _objectWithoutProperties(config, [\"premium\", \"referrerPolicy\"]); // If the owner has a pro or premium account then we can hide controls etc\n\n\n    if (premium) {\n      Object.assign(frameParams, {\n        controls: false,\n        sidedock: false\n      });\n    } // Get Vimeo params for the iframe\n\n\n    var params = buildUrlParams(_objectSpread2({\n      loop: player.config.loop.active,\n      autoplay: player.autoplay,\n      muted: player.muted,\n      gesture: 'media',\n      playsinline: !this.config.fullscreen.iosNative\n    }, frameParams)); // Get the source URL or ID\n\n    var source = player.media.getAttribute('src'); // Get from <div> if needed\n\n    if (is$1.empty(source)) {\n      source = player.media.getAttribute(player.config.attributes.embed.id);\n    }\n\n    var id = parseId(source); // Build an iframe\n\n    var iframe = createElement('iframe');\n    var src = format(player.config.urls.vimeo.iframe, id, params);\n    iframe.setAttribute('src', src);\n    iframe.setAttribute('allowfullscreen', '');\n    iframe.setAttribute('allow', 'autoplay,fullscreen,picture-in-picture'); // Set the referrer policy if required\n\n    if (!is$1.empty(referrerPolicy)) {\n      iframe.setAttribute('referrerPolicy', referrerPolicy);\n    } // Inject the package\n\n\n    if (premium || !config.customControls) {\n      iframe.setAttribute('data-poster', player.poster);\n      player.media = replaceElement(iframe, player.media);\n    } else {\n      var wrapper = createElement('div', {\n        class: player.config.classNames.embedContainer,\n        'data-poster': player.poster\n      });\n      wrapper.appendChild(iframe);\n      player.media = replaceElement(wrapper, player.media);\n    } // Get poster image\n\n\n    if (!config.customControls) {\n      fetch(format(player.config.urls.vimeo.api, src)).then(function (response) {\n        if (is$1.empty(response) || !response.thumbnail_url) {\n          return;\n        } // Set and show poster\n\n\n        ui.setPoster.call(player, response.thumbnail_url).catch(function () {});\n      });\n    } // Setup instance\n    // https://github.com/vimeo/player.js\n\n\n    player.embed = new window.Vimeo.Player(iframe, {\n      autopause: player.config.autopause,\n      muted: player.muted\n    });\n    player.media.paused = true;\n    player.media.currentTime = 0; // Disable native text track rendering\n\n    if (player.supported.ui) {\n      player.embed.disableTextTrack();\n    } // Create a faux HTML5 API using the Vimeo API\n\n\n    player.media.play = function () {\n      assurePlaybackState.call(player, true);\n      return player.embed.play();\n    };\n\n    player.media.pause = function () {\n      assurePlaybackState.call(player, false);\n      return player.embed.pause();\n    };\n\n    player.media.stop = function () {\n      player.pause();\n      player.currentTime = 0;\n    }; // Seeking\n\n\n    var currentTime = player.media.currentTime;\n    Object.defineProperty(player.media, 'currentTime', {\n      get: function get() {\n        return currentTime;\n      },\n      set: function set(time) {\n        // Vimeo will automatically play on seek if the video hasn't been played before\n        // Get current paused state and volume etc\n        var embed = player.embed,\n            media = player.media,\n            paused = player.paused,\n            volume = player.volume;\n        var restorePause = paused && !embed.hasPlayed; // Set seeking state and trigger event\n\n        media.seeking = true;\n        triggerEvent.call(player, media, 'seeking'); // If paused, mute until seek is complete\n\n        Promise.resolve(restorePause && embed.setVolume(0)) // Seek\n        .then(function () {\n          return embed.setCurrentTime(time);\n        }) // Restore paused\n        .then(function () {\n          return restorePause && embed.pause();\n        }) // Restore volume\n        .then(function () {\n          return restorePause && embed.setVolume(volume);\n        }).catch(function () {// Do nothing\n        });\n      }\n    }); // Playback speed\n\n    var speed = player.config.speed.selected;\n    Object.defineProperty(player.media, 'playbackRate', {\n      get: function get() {\n        return speed;\n      },\n      set: function set(input) {\n        player.embed.setPlaybackRate(input).then(function () {\n          speed = input;\n          triggerEvent.call(player, player.media, 'ratechange');\n        }).catch(function () {\n          // Cannot set Playback Rate, Video is probably not on Pro account\n          player.options.speed = [1];\n        });\n      }\n    }); // Volume\n\n    var volume = player.config.volume;\n    Object.defineProperty(player.media, 'volume', {\n      get: function get() {\n        return volume;\n      },\n      set: function set(input) {\n        player.embed.setVolume(input).then(function () {\n          volume = input;\n          triggerEvent.call(player, player.media, 'volumechange');\n        });\n      }\n    }); // Muted\n\n    var muted = player.config.muted;\n    Object.defineProperty(player.media, 'muted', {\n      get: function get() {\n        return muted;\n      },\n      set: function set(input) {\n        var toggle = is$1.boolean(input) ? input : false;\n        player.embed.setVolume(toggle ? 0 : player.config.volume).then(function () {\n          muted = toggle;\n          triggerEvent.call(player, player.media, 'volumechange');\n        });\n      }\n    }); // Loop\n\n    var loop = player.config.loop;\n    Object.defineProperty(player.media, 'loop', {\n      get: function get() {\n        return loop;\n      },\n      set: function set(input) {\n        var toggle = is$1.boolean(input) ? input : player.config.loop.active;\n        player.embed.setLoop(toggle).then(function () {\n          loop = toggle;\n        });\n      }\n    }); // Source\n\n    var currentSrc;\n    player.embed.getVideoUrl().then(function (value) {\n      currentSrc = value;\n      controls.setDownloadUrl.call(player);\n    }).catch(function (error) {\n      _this.debug.warn(error);\n    });\n    Object.defineProperty(player.media, 'currentSrc', {\n      get: function get() {\n        return currentSrc;\n      }\n    }); // Ended\n\n    Object.defineProperty(player.media, 'ended', {\n      get: function get() {\n        return player.currentTime === player.duration;\n      }\n    }); // Set aspect ratio based on video size\n\n    Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(function (dimensions) {\n      var _dimensions = _slicedToArray(dimensions, 2),\n          width = _dimensions[0],\n          height = _dimensions[1];\n\n      player.embed.ratio = [width, height];\n      setAspectRatio.call(_this);\n    }); // Set autopause\n\n    player.embed.setAutopause(player.config.autopause).then(function (state) {\n      player.config.autopause = state;\n    }); // Get title\n\n    player.embed.getVideoTitle().then(function (title) {\n      player.config.title = title;\n      ui.setTitle.call(_this);\n    }); // Get current time\n\n    player.embed.getCurrentTime().then(function (value) {\n      currentTime = value;\n      triggerEvent.call(player, player.media, 'timeupdate');\n    }); // Get duration\n\n    player.embed.getDuration().then(function (value) {\n      player.media.duration = value;\n      triggerEvent.call(player, player.media, 'durationchange');\n    }); // Get captions\n\n    player.embed.getTextTracks().then(function (tracks) {\n      player.media.textTracks = tracks;\n      captions.setup.call(player);\n    });\n    player.embed.on('cuechange', function (_ref) {\n      var _ref$cues = _ref.cues,\n          cues = _ref$cues === void 0 ? [] : _ref$cues;\n      var strippedCues = cues.map(function (cue) {\n        return stripHTML(cue.text);\n      });\n      captions.updateCues.call(player, strippedCues);\n    });\n    player.embed.on('loaded', function () {\n      // Assure state and events are updated on autoplay\n      player.embed.getPaused().then(function (paused) {\n        assurePlaybackState.call(player, !paused);\n\n        if (!paused) {\n          triggerEvent.call(player, player.media, 'playing');\n        }\n      });\n\n      if (is$1.element(player.embed.element) && player.supported.ui) {\n        var frame = player.embed.element; // Fix keyboard focus issues\n        // https://github.com/sampotts/plyr/issues/317\n\n        frame.setAttribute('tabindex', -1);\n      }\n    });\n    player.embed.on('bufferstart', function () {\n      triggerEvent.call(player, player.media, 'waiting');\n    });\n    player.embed.on('bufferend', function () {\n      triggerEvent.call(player, player.media, 'playing');\n    });\n    player.embed.on('play', function () {\n      assurePlaybackState.call(player, true);\n      triggerEvent.call(player, player.media, 'playing');\n    });\n    player.embed.on('pause', function () {\n      assurePlaybackState.call(player, false);\n    });\n    player.embed.on('timeupdate', function (data) {\n      player.media.seeking = false;\n      currentTime = data.seconds;\n      triggerEvent.call(player, player.media, 'timeupdate');\n    });\n    player.embed.on('progress', function (data) {\n      player.media.buffered = data.percent;\n      triggerEvent.call(player, player.media, 'progress'); // Check all loaded\n\n      if (parseInt(data.percent, 10) === 1) {\n        triggerEvent.call(player, player.media, 'canplaythrough');\n      } // Get duration as if we do it before load, it gives an incorrect value\n      // https://github.com/sampotts/plyr/issues/891\n\n\n      player.embed.getDuration().then(function (value) {\n        if (value !== player.media.duration) {\n          player.media.duration = value;\n          triggerEvent.call(player, player.media, 'durationchange');\n        }\n      });\n    });\n    player.embed.on('seeked', function () {\n      player.media.seeking = false;\n      triggerEvent.call(player, player.media, 'seeked');\n    });\n    player.embed.on('ended', function () {\n      player.media.paused = true;\n      triggerEvent.call(player, player.media, 'ended');\n    });\n    player.embed.on('error', function (detail) {\n      player.media.error = detail;\n      triggerEvent.call(player, player.media, 'error');\n    }); // Rebuild UI\n\n    if (config.customControls) {\n      setTimeout(function () {\n        return ui.build.call(player);\n      }, 0);\n    }\n  }\n};\n\n// ==========================================================================\n\nfunction parseId$1(url) {\n  if (is$1.empty(url)) {\n    return null;\n  }\n\n  var regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  return url.match(regex) ? RegExp.$2 : url;\n} // Set playback state and trigger change (only on actual change)\n\n\nfunction assurePlaybackState$1(play) {\n  if (play && !this.embed.hasPlayed) {\n    this.embed.hasPlayed = true;\n  }\n\n  if (this.media.paused === play) {\n    this.media.paused = !play;\n    triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n  }\n}\n\nfunction getHost(config) {\n  if (config.noCookie) {\n    return 'https://www.youtube-nocookie.com';\n  }\n\n  if (window.location.protocol === 'http:') {\n    return 'http://www.youtube.com';\n  } // Use YouTube's default\n\n\n  return undefined;\n}\n\nvar youtube = {\n  setup: function setup() {\n    var _this = this;\n\n    // Add embed class for responsive\n    toggleClass(this.elements.wrapper, this.config.classNames.embed, true); // Setup API\n\n    if (is$1.object(window.YT) && is$1.function(window.YT.Player)) {\n      youtube.ready.call(this);\n    } else {\n      // Reference current global callback\n      var callback = window.onYouTubeIframeAPIReady; // Set callback to process queue\n\n      window.onYouTubeIframeAPIReady = function () {\n        // Call global callback if set\n        if (is$1.function(callback)) {\n          callback();\n        }\n\n        youtube.ready.call(_this);\n      }; // Load the SDK\n\n\n      loadScript(this.config.urls.youtube.sdk).catch(function (error) {\n        _this.debug.warn('YouTube API failed to load', error);\n      });\n    }\n  },\n  // Get the media title\n  getTitle: function getTitle(videoId) {\n    var _this2 = this;\n\n    var url = format(this.config.urls.youtube.api, videoId);\n    fetch(url).then(function (data) {\n      if (is$1.object(data)) {\n        var title = data.title,\n            height = data.height,\n            width = data.width; // Set title\n\n        _this2.config.title = title;\n        ui.setTitle.call(_this2); // Set aspect ratio\n\n        _this2.embed.ratio = [width, height];\n      }\n\n      setAspectRatio.call(_this2);\n    }).catch(function () {\n      // Set aspect ratio\n      setAspectRatio.call(_this2);\n    });\n  },\n  // API ready\n  ready: function ready() {\n    var player = this;\n    var config = player.config.youtube; // Ignore already setup (race condition)\n\n    var currentId = player.media && player.media.getAttribute('id');\n\n    if (!is$1.empty(currentId) && currentId.startsWith('youtube-')) {\n      return;\n    } // Get the source URL or ID\n\n\n    var source = player.media.getAttribute('src'); // Get from <div> if needed\n\n    if (is$1.empty(source)) {\n      source = player.media.getAttribute(this.config.attributes.embed.id);\n    } // Replace the <iframe> with a <div> due to YouTube API issues\n\n\n    var videoId = parseId$1(source);\n    var id = generateId(player.provider); // Replace media element\n\n    var container = createElement('div', {\n      id: id,\n      'data-poster': config.customControls ? player.poster : undefined\n    });\n    player.media = replaceElement(container, player.media); // Only load the poster when using custom controls\n\n    if (config.customControls) {\n      var posterSrc = function posterSrc(s) {\n        return \"https://i.ytimg.com/vi/\".concat(videoId, \"/\").concat(s, \"default.jpg\");\n      }; // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n\n\n      loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n      .catch(function () {\n        return loadImage(posterSrc('sd'), 121);\n      }) // 480p padded 4:3\n      .catch(function () {\n        return loadImage(posterSrc('hq'));\n      }) // 360p padded 4:3. Always exists\n      .then(function (image) {\n        return ui.setPoster.call(player, image.src);\n      }).then(function (src) {\n        // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n        if (!src.includes('maxres')) {\n          player.elements.poster.style.backgroundSize = 'cover';\n        }\n      }).catch(function () {});\n    } // Setup instance\n    // https://developers.google.com/youtube/iframe_api_reference\n\n\n    player.embed = new window.YT.Player(player.media, {\n      videoId: videoId,\n      host: getHost(config),\n      playerVars: extend({}, {\n        // Autoplay\n        autoplay: player.config.autoplay ? 1 : 0,\n        // iframe interface language\n        hl: player.config.hl,\n        // Only show controls if not fully supported or opted out\n        controls: player.supported.ui && config.customControls ? 0 : 1,\n        // Disable keyboard as we handle it\n        disablekb: 1,\n        // Allow iOS inline playback\n        playsinline: !player.config.fullscreen.iosNative ? 1 : 0,\n        // Captions are flaky on YouTube\n        cc_load_policy: player.captions.active ? 1 : 0,\n        cc_lang_pref: player.config.captions.language,\n        // Tracking for stats\n        widget_referrer: window ? window.location.href : null\n      }, config),\n      events: {\n        onError: function onError(event) {\n          // YouTube may fire onError twice, so only handle it once\n          if (!player.media.error) {\n            var code = event.data; // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n\n            var message = {\n              2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n              5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n              100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n              101: 'The owner of the requested video does not allow it to be played in embedded players.',\n              150: 'The owner of the requested video does not allow it to be played in embedded players.'\n            }[code] || 'An unknown error occured';\n            player.media.error = {\n              code: code,\n              message: message\n            };\n            triggerEvent.call(player, player.media, 'error');\n          }\n        },\n        onPlaybackRateChange: function onPlaybackRateChange(event) {\n          // Get the instance\n          var instance = event.target; // Get current speed\n\n          player.media.playbackRate = instance.getPlaybackRate();\n          triggerEvent.call(player, player.media, 'ratechange');\n        },\n        onReady: function onReady(event) {\n          // Bail if onReady has already been called. See issue #1108\n          if (is$1.function(player.media.play)) {\n            return;\n          } // Get the instance\n\n\n          var instance = event.target; // Get the title\n\n          youtube.getTitle.call(player, videoId); // Create a faux HTML5 API using the YouTube API\n\n          player.media.play = function () {\n            assurePlaybackState$1.call(player, true);\n            instance.playVideo();\n          };\n\n          player.media.pause = function () {\n            assurePlaybackState$1.call(player, false);\n            instance.pauseVideo();\n          };\n\n          player.media.stop = function () {\n            instance.stopVideo();\n          };\n\n          player.media.duration = instance.getDuration();\n          player.media.paused = true; // Seeking\n\n          player.media.currentTime = 0;\n          Object.defineProperty(player.media, 'currentTime', {\n            get: function get() {\n              return Number(instance.getCurrentTime());\n            },\n            set: function set(time) {\n              // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n              if (player.paused && !player.embed.hasPlayed) {\n                player.embed.mute();\n              } // Set seeking state and trigger event\n\n\n              player.media.seeking = true;\n              triggerEvent.call(player, player.media, 'seeking'); // Seek after events sent\n\n              instance.seekTo(time);\n            }\n          }); // Playback speed\n\n          Object.defineProperty(player.media, 'playbackRate', {\n            get: function get() {\n              return instance.getPlaybackRate();\n            },\n            set: function set(input) {\n              instance.setPlaybackRate(input);\n            }\n          }); // Volume\n\n          var volume = player.config.volume;\n          Object.defineProperty(player.media, 'volume', {\n            get: function get() {\n              return volume;\n            },\n            set: function set(input) {\n              volume = input;\n              instance.setVolume(volume * 100);\n              triggerEvent.call(player, player.media, 'volumechange');\n            }\n          }); // Muted\n\n          var muted = player.config.muted;\n          Object.defineProperty(player.media, 'muted', {\n            get: function get() {\n              return muted;\n            },\n            set: function set(input) {\n              var toggle = is$1.boolean(input) ? input : muted;\n              muted = toggle;\n              instance[toggle ? 'mute' : 'unMute']();\n              instance.setVolume(volume * 100);\n              triggerEvent.call(player, player.media, 'volumechange');\n            }\n          }); // Source\n\n          Object.defineProperty(player.media, 'currentSrc', {\n            get: function get() {\n              return instance.getVideoUrl();\n            }\n          }); // Ended\n\n          Object.defineProperty(player.media, 'ended', {\n            get: function get() {\n              return player.currentTime === player.duration;\n            }\n          }); // Get available speeds\n\n          var speeds = instance.getAvailablePlaybackRates(); // Filter based on config\n\n          player.options.speed = speeds.filter(function (s) {\n            return player.config.speed.options.includes(s);\n          }); // Set the tabindex to avoid focus entering iframe\n\n          if (player.supported.ui && config.customControls) {\n            player.media.setAttribute('tabindex', -1);\n          }\n\n          triggerEvent.call(player, player.media, 'timeupdate');\n          triggerEvent.call(player, player.media, 'durationchange'); // Reset timer\n\n          clearInterval(player.timers.buffering); // Setup buffering\n\n          player.timers.buffering = setInterval(function () {\n            // Get loaded % from YouTube\n            player.media.buffered = instance.getVideoLoadedFraction(); // Trigger progress only when we actually buffer something\n\n            if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n              triggerEvent.call(player, player.media, 'progress');\n            } // Set last buffer point\n\n\n            player.media.lastBuffered = player.media.buffered; // Bail if we're at 100%\n\n            if (player.media.buffered === 1) {\n              clearInterval(player.timers.buffering); // Trigger event\n\n              triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n          }, 200); // Rebuild UI\n\n          if (config.customControls) {\n            setTimeout(function () {\n              return ui.build.call(player);\n            }, 50);\n          }\n        },\n        onStateChange: function onStateChange(event) {\n          // Get the instance\n          var instance = event.target; // Reset timer\n\n          clearInterval(player.timers.playing);\n          var seeked = player.media.seeking && [1, 2].includes(event.data);\n\n          if (seeked) {\n            // Unset seeking and fire seeked event\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n          } // Handle events\n          // -1   Unstarted\n          // 0    Ended\n          // 1    Playing\n          // 2    Paused\n          // 3    Buffering\n          // 5    Video cued\n\n\n          switch (event.data) {\n            case -1:\n              // Update scrubber\n              triggerEvent.call(player, player.media, 'timeupdate'); // Get loaded % from YouTube\n\n              player.media.buffered = instance.getVideoLoadedFraction();\n              triggerEvent.call(player, player.media, 'progress');\n              break;\n\n            case 0:\n              assurePlaybackState$1.call(player, false); // YouTube doesn't support loop for a single video, so mimick it.\n\n              if (player.media.loop) {\n                // YouTube needs a call to `stopVideo` before playing again\n                instance.stopVideo();\n                instance.playVideo();\n              } else {\n                triggerEvent.call(player, player.media, 'ended');\n              }\n\n              break;\n\n            case 1:\n              // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n              if (config.customControls && !player.config.autoplay && player.media.paused && !player.embed.hasPlayed) {\n                player.media.pause();\n              } else {\n                assurePlaybackState$1.call(player, true);\n                triggerEvent.call(player, player.media, 'playing'); // Poll to get playback progress\n\n                player.timers.playing = setInterval(function () {\n                  triggerEvent.call(player, player.media, 'timeupdate');\n                }, 50); // Check duration again due to YouTube bug\n                // https://github.com/sampotts/plyr/issues/374\n                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n\n                if (player.media.duration !== instance.getDuration()) {\n                  player.media.duration = instance.getDuration();\n                  triggerEvent.call(player, player.media, 'durationchange');\n                }\n              }\n\n              break;\n\n            case 2:\n              // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n              if (!player.muted) {\n                player.embed.unMute();\n              }\n\n              assurePlaybackState$1.call(player, false);\n              break;\n\n            case 3:\n              // Trigger waiting event to add loading classes to container as the video buffers.\n              triggerEvent.call(player, player.media, 'waiting');\n              break;\n          }\n\n          triggerEvent.call(player, player.elements.container, 'statechange', false, {\n            code: event.data\n          });\n        }\n      }\n    });\n  }\n};\n\n// ==========================================================================\nvar media = {\n  // Setup media\n  setup: function setup() {\n    // If there's no media, bail\n    if (!this.media) {\n      this.debug.warn('No media element found!');\n      return;\n    } // Add type class\n\n\n    toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true); // Add provider class\n\n    toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true); // Add video class for embeds\n    // This will require changes if audio embeds are added\n\n    if (this.isEmbed) {\n      toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n    } // Inject the player wrapper\n\n\n    if (this.isVideo) {\n      // Create the wrapper div\n      this.elements.wrapper = createElement('div', {\n        class: this.config.classNames.video\n      }); // Wrap the video in a container\n\n      wrap(this.media, this.elements.wrapper); // Poster image container\n\n      this.elements.poster = createElement('div', {\n        class: this.config.classNames.poster,\n        hidden: ''\n      });\n      this.elements.wrapper.appendChild(this.elements.poster);\n    }\n\n    if (this.isHTML5) {\n      html5.setup.call(this);\n    } else if (this.isYouTube) {\n      youtube.setup.call(this);\n    } else if (this.isVimeo) {\n      vimeo.setup.call(this);\n    }\n  }\n};\n\nvar destroy = function destroy(instance) {\n  // Destroy our adsManager\n  if (instance.manager) {\n    instance.manager.destroy();\n  } // Destroy our adsManager\n\n\n  if (instance.elements.displayContainer) {\n    instance.elements.displayContainer.destroy();\n  }\n\n  instance.elements.container.remove();\n};\n\nvar Ads = /*#__PURE__*/function () {\n  /**\n   * Ads constructor.\n   * @param {Object} player\n   * @return {Ads}\n   */\n  function Ads(player) {\n    var _this = this;\n\n    _classCallCheck(this, Ads);\n\n    _defineProperty(this, \"load\", function () {\n      if (!_this.enabled) {\n        return;\n      } // Check if the Google IMA3 SDK is loaded or load it ourselves\n\n\n      if (!is$1.object(window.google) || !is$1.object(window.google.ima)) {\n        loadScript(_this.player.config.urls.googleIMA.sdk).then(function () {\n          _this.ready();\n        }).catch(function () {\n          // Script failed to load or is blocked\n          _this.trigger('error', new Error('Google IMA SDK failed to load'));\n        });\n      } else {\n        _this.ready();\n      }\n    });\n\n    _defineProperty(this, \"ready\", function () {\n      // Double check we're enabled\n      if (!_this.enabled) {\n        destroy(_this);\n      } // Start ticking our safety timer. If the whole advertisement\n      // thing doesn't resolve within our set time; we bail\n\n\n      _this.startSafetyTimer(12000, 'ready()'); // Clear the safety timer\n\n\n      _this.managerPromise.then(function () {\n        _this.clearSafetyTimer('onAdsManagerLoaded()');\n      }); // Set listeners on the Plyr instance\n\n\n      _this.listeners(); // Setup the IMA SDK\n\n\n      _this.setupIMA();\n    });\n\n    _defineProperty(this, \"setupIMA\", function () {\n      // Create the container for our advertisements\n      _this.elements.container = createElement('div', {\n        class: _this.player.config.classNames.ads\n      });\n\n      _this.player.elements.container.appendChild(_this.elements.container); // So we can run VPAID2\n\n\n      google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED); // Set language\n\n      google.ima.settings.setLocale(_this.player.config.ads.language); // Set playback for iOS10+\n\n      google.ima.settings.setDisableCustomPlaybackForIOS10Plus(_this.player.config.playsinline); // We assume the adContainer is the video container of the plyr element that will house the ads\n\n      _this.elements.displayContainer = new google.ima.AdDisplayContainer(_this.elements.container, _this.player.media); // Create ads loader\n\n      _this.loader = new google.ima.AdsLoader(_this.elements.displayContainer); // Listen and respond to ads loaded and error events\n\n      _this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, function (event) {\n        return _this.onAdsManagerLoaded(event);\n      }, false);\n\n      _this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, function (error) {\n        return _this.onAdError(error);\n      }, false); // Request video ads to be pre-loaded\n\n\n      _this.requestAds();\n    });\n\n    _defineProperty(this, \"requestAds\", function () {\n      var container = _this.player.elements.container;\n\n      try {\n        // Request video ads\n        var request = new google.ima.AdsRequest();\n        request.adTagUrl = _this.tagUrl; // Specify the linear and nonlinear slot sizes. This helps the SDK\n        // to select the correct creative if multiple are returned\n\n        request.linearAdSlotWidth = container.offsetWidth;\n        request.linearAdSlotHeight = container.offsetHeight;\n        request.nonLinearAdSlotWidth = container.offsetWidth;\n        request.nonLinearAdSlotHeight = container.offsetHeight; // We only overlay ads as we only support video.\n\n        request.forceNonLinearFullSlot = false; // Mute based on current state\n\n        request.setAdWillPlayMuted(!_this.player.muted);\n\n        _this.loader.requestAds(request);\n      } catch (e) {\n        _this.onAdError(e);\n      }\n    });\n\n    _defineProperty(this, \"pollCountdown\", function () {\n      var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!start) {\n        clearInterval(_this.countdownTimer);\n\n        _this.elements.container.removeAttribute('data-badge-text');\n\n        return;\n      }\n\n      var update = function update() {\n        var time = formatTime(Math.max(_this.manager.getRemainingTime(), 0));\n        var label = \"\".concat(i18n.get('advertisement', _this.player.config), \" - \").concat(time);\n\n        _this.elements.container.setAttribute('data-badge-text', label);\n      };\n\n      _this.countdownTimer = setInterval(update, 100);\n    });\n\n    _defineProperty(this, \"onAdsManagerLoaded\", function (event) {\n      // Load could occur after a source change (race condition)\n      if (!_this.enabled) {\n        return;\n      } // Get the ads manager\n\n\n      var settings = new google.ima.AdsRenderingSettings(); // Tell the SDK to save and restore content video state on our behalf\n\n      settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n      settings.enablePreloading = true; // The SDK is polling currentTime on the contentPlayback. And needs a duration\n      // so it can determine when to start the mid- and post-roll\n\n      _this.manager = event.getAdsManager(_this.player, settings); // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n\n      _this.cuePoints = _this.manager.getCuePoints(); // Add listeners to the required events\n      // Advertisement error events\n\n      _this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, function (error) {\n        return _this.onAdError(error);\n      }); // Advertisement regular events\n\n\n      Object.keys(google.ima.AdEvent.Type).forEach(function (type) {\n        _this.manager.addEventListener(google.ima.AdEvent.Type[type], function (e) {\n          return _this.onAdEvent(e);\n        });\n      }); // Resolve our adsManager\n\n      _this.trigger('loaded');\n    });\n\n    _defineProperty(this, \"addCuePoints\", function () {\n      // Add advertisement cue's within the time line if available\n      if (!is$1.empty(_this.cuePoints)) {\n        _this.cuePoints.forEach(function (cuePoint) {\n          if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < _this.player.duration) {\n            var seekElement = _this.player.elements.progress;\n\n            if (is$1.element(seekElement)) {\n              var cuePercentage = 100 / _this.player.duration * cuePoint;\n              var cue = createElement('span', {\n                class: _this.player.config.classNames.cues\n              });\n              cue.style.left = \"\".concat(cuePercentage.toString(), \"%\");\n              seekElement.appendChild(cue);\n            }\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"onAdEvent\", function (event) {\n      var container = _this.player.elements.container; // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n      // don't have ad object associated\n\n      var ad = event.getAd();\n      var adData = event.getAdData(); // Proxy event\n\n      var dispatchEvent = function dispatchEvent(type) {\n        triggerEvent.call(_this.player, _this.player.media, \"ads\".concat(type.replace(/_/g, '').toLowerCase()));\n      }; // Bubble the event\n\n\n      dispatchEvent(event.type);\n\n      switch (event.type) {\n        case google.ima.AdEvent.Type.LOADED:\n          // This is the first event sent for an ad - it is possible to determine whether the\n          // ad is a video ad or an overlay\n          _this.trigger('loaded'); // Start countdown\n\n\n          _this.pollCountdown(true);\n\n          if (!ad.isLinear()) {\n            // Position AdDisplayContainer correctly for overlay\n            ad.width = container.offsetWidth;\n            ad.height = container.offsetHeight;\n          } // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n          // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n\n\n          break;\n\n        case google.ima.AdEvent.Type.STARTED:\n          // Set volume to match player\n          _this.manager.setVolume(_this.player.volume);\n\n          break;\n\n        case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n          // All ads for the current videos are done. We can now request new advertisements\n          // in case the video is re-played\n          // TODO: Example for what happens when a next video in a playlist would be loaded.\n          // So here we load a new video when all ads are done.\n          // Then we load new ads within a new adsManager. When the video\n          // Is started - after - the ads are loaded, then we get ads.\n          // You can also easily test cancelling and reloading by running\n          // player.ads.cancel() and player.ads.play from the console I guess.\n          // this.player.source = {\n          //     type: 'video',\n          //     title: 'View From A Blue Moon',\n          //     sources: [{\n          //         src:\n          // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n          // 'video/mp4', }], poster:\n          // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n          // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n          // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n          // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n          // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n          // };\n          // TODO: So there is still this thing where a video should only be allowed to start\n          // playing when the IMA SDK is ready or has failed\n          if (_this.player.ended) {\n            _this.loadAds();\n          } else {\n            // The SDK won't allow new ads to be called without receiving a contentComplete()\n            _this.loader.contentComplete();\n          }\n\n          break;\n\n        case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n          // This event indicates the ad has started - the video player can adjust the UI,\n          // for example display a pause button and remaining time. Fired when content should\n          // be paused. This usually happens right before an ad is about to cover the content\n          _this.pauseContent();\n\n          break;\n\n        case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n          // This event indicates the ad has finished - the video player can perform\n          // appropriate UI actions, such as removing the timer for remaining time detection.\n          // Fired when content should be resumed. This usually happens when an ad finishes\n          // or collapses\n          _this.pollCountdown();\n\n          _this.resumeContent();\n\n          break;\n\n        case google.ima.AdEvent.Type.LOG:\n          if (adData.adError) {\n            _this.player.debug.warn(\"Non-fatal ad error: \".concat(adData.adError.getMessage()));\n          }\n\n          break;\n      }\n    });\n\n    _defineProperty(this, \"onAdError\", function (event) {\n      _this.cancel();\n\n      _this.player.debug.warn('Ads error', event);\n    });\n\n    _defineProperty(this, \"listeners\", function () {\n      var container = _this.player.elements.container;\n      var time;\n\n      _this.player.on('canplay', function () {\n        _this.addCuePoints();\n      });\n\n      _this.player.on('ended', function () {\n        _this.loader.contentComplete();\n      });\n\n      _this.player.on('timeupdate', function () {\n        time = _this.player.currentTime;\n      });\n\n      _this.player.on('seeked', function () {\n        var seekedTime = _this.player.currentTime;\n\n        if (is$1.empty(_this.cuePoints)) {\n          return;\n        }\n\n        _this.cuePoints.forEach(function (cuePoint, index) {\n          if (time < cuePoint && cuePoint < seekedTime) {\n            _this.manager.discardAdBreak();\n\n            _this.cuePoints.splice(index, 1);\n          }\n        });\n      }); // Listen to the resizing of the window. And resize ad accordingly\n      // TODO: eventually implement ResizeObserver\n\n\n      window.addEventListener('resize', function () {\n        if (_this.manager) {\n          _this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n        }\n      });\n    });\n\n    _defineProperty(this, \"play\", function () {\n      var container = _this.player.elements.container;\n\n      if (!_this.managerPromise) {\n        _this.resumeContent();\n      } // Play the requested advertisement whenever the adsManager is ready\n\n\n      _this.managerPromise.then(function () {\n        // Set volume to match player\n        _this.manager.setVolume(_this.player.volume); // Initialize the container. Must be done via a user action on mobile devices\n\n\n        _this.elements.displayContainer.initialize();\n\n        try {\n          if (!_this.initialized) {\n            // Initialize the ads manager. Ad rules playlist will start at this time\n            _this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL); // Call play to start showing the ad. Single video and overlay ads will\n            // start at this time; the call will be ignored for ad rules\n\n\n            _this.manager.start();\n          }\n\n          _this.initialized = true;\n        } catch (adError) {\n          // An error may be thrown if there was a problem with the\n          // VAST response\n          _this.onAdError(adError);\n        }\n      }).catch(function () {});\n    });\n\n    _defineProperty(this, \"resumeContent\", function () {\n      // Hide the advertisement container\n      _this.elements.container.style.zIndex = ''; // Ad is stopped\n\n      _this.playing = false; // Play video\n\n      silencePromise(_this.player.media.play());\n    });\n\n    _defineProperty(this, \"pauseContent\", function () {\n      // Show the advertisement container\n      _this.elements.container.style.zIndex = 3; // Ad is playing\n\n      _this.playing = true; // Pause our video.\n\n      _this.player.media.pause();\n    });\n\n    _defineProperty(this, \"cancel\", function () {\n      // Pause our video\n      if (_this.initialized) {\n        _this.resumeContent();\n      } // Tell our instance that we're done for now\n\n\n      _this.trigger('error'); // Re-create our adsManager\n\n\n      _this.loadAds();\n    });\n\n    _defineProperty(this, \"loadAds\", function () {\n      // Tell our adsManager to go bye bye\n      _this.managerPromise.then(function () {\n        // Destroy our adsManager\n        if (_this.manager) {\n          _this.manager.destroy();\n        } // Re-set our adsManager promises\n\n\n        _this.managerPromise = new Promise(function (resolve) {\n          _this.on('loaded', resolve);\n\n          _this.player.debug.log(_this.manager);\n        }); // Now that the manager has been destroyed set it to also be un-initialized\n\n        _this.initialized = false; // Now request some new advertisements\n\n        _this.requestAds();\n      }).catch(function () {});\n    });\n\n    _defineProperty(this, \"trigger\", function (event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var handlers = _this.events[event];\n\n      if (is$1.array(handlers)) {\n        handlers.forEach(function (handler) {\n          if (is$1.function(handler)) {\n            handler.apply(_this, args);\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"on\", function (event, callback) {\n      if (!is$1.array(_this.events[event])) {\n        _this.events[event] = [];\n      }\n\n      _this.events[event].push(callback);\n\n      return _this;\n    });\n\n    _defineProperty(this, \"startSafetyTimer\", function (time, from) {\n      _this.player.debug.log(\"Safety timer invoked from: \".concat(from));\n\n      _this.safetyTimer = setTimeout(function () {\n        _this.cancel();\n\n        _this.clearSafetyTimer('startSafetyTimer()');\n      }, time);\n    });\n\n    _defineProperty(this, \"clearSafetyTimer\", function (from) {\n      if (!is$1.nullOrUndefined(_this.safetyTimer)) {\n        _this.player.debug.log(\"Safety timer cleared from: \".concat(from));\n\n        clearTimeout(_this.safetyTimer);\n        _this.safetyTimer = null;\n      }\n    });\n\n    this.player = player;\n    this.config = player.config.ads;\n    this.playing = false;\n    this.initialized = false;\n    this.elements = {\n      container: null,\n      displayContainer: null\n    };\n    this.manager = null;\n    this.loader = null;\n    this.cuePoints = null;\n    this.events = {};\n    this.safetyTimer = null;\n    this.countdownTimer = null; // Setup a promise to resolve when the IMA manager is ready\n\n    this.managerPromise = new Promise(function (resolve, reject) {\n      // The ad is loaded and ready\n      _this.on('loaded', resolve); // Ads failed\n\n\n      _this.on('error', reject);\n    });\n    this.load();\n  }\n\n  _createClass(Ads, [{\n    key: \"enabled\",\n    get: function get() {\n      var config = this.config;\n      return this.player.isHTML5 && this.player.isVideo && config.enabled && (!is$1.empty(config.publisherId) || is$1.url(config.tagUrl));\n    }\n    /**\n     * Load the IMA SDK\n     */\n\n  }, {\n    key: \"tagUrl\",\n    // Build the tag URL\n    get: function get() {\n      var config = this.config;\n\n      if (is$1.url(config.tagUrl)) {\n        return config.tagUrl;\n      }\n\n      var params = {\n        AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n        AV_CHANNELID: '5a0458dc28a06145e4519d21',\n        AV_URL: window.location.hostname,\n        cb: Date.now(),\n        AV_WIDTH: 640,\n        AV_HEIGHT: 480,\n        AV_CDIM2: config.publisherId\n      };\n      var base = 'https://go.aniview.com/api/adserver6/vast/';\n      return \"\".concat(base, \"?\").concat(buildUrlParams(params));\n    }\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n\n  }]);\n\n  return Ads;\n}();\n\nvar parseVtt = function parseVtt(vttDataString) {\n  var processedList = [];\n  var frames = vttDataString.split(/\\r\\n\\r\\n|\\n\\n|\\r\\r/);\n  frames.forEach(function (frame) {\n    var result = {};\n    var lines = frame.split(/\\r\\n|\\n|\\r/);\n    lines.forEach(function (line) {\n      if (!is$1.number(result.startTime)) {\n        // The line with start and end times on it is the first line of interest\n        var matchTimes = line.match(/([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/); // Note that this currently ignores caption formatting directives that are optionally on the end of this line - fine for non-captions VTT\n\n        if (matchTimes) {\n          result.startTime = Number(matchTimes[1] || 0) * 60 * 60 + Number(matchTimes[2]) * 60 + Number(matchTimes[3]) + Number(\"0.\".concat(matchTimes[4]));\n          result.endTime = Number(matchTimes[6] || 0) * 60 * 60 + Number(matchTimes[7]) * 60 + Number(matchTimes[8]) + Number(\"0.\".concat(matchTimes[9]));\n        }\n      } else if (!is$1.empty(line.trim()) && is$1.empty(result.text)) {\n        // If we already have the startTime, then we're definitely up to the text line(s)\n        var lineSplit = line.trim().split('#xywh=');\n\n        var _lineSplit = _slicedToArray(lineSplit, 1);\n\n        result.text = _lineSplit[0];\n\n        // If there's content in lineSplit[1], then we have sprites. If not, then it's just one frame per image\n        if (lineSplit[1]) {\n          var _lineSplit$1$split = lineSplit[1].split(',');\n\n          var _lineSplit$1$split2 = _slicedToArray(_lineSplit$1$split, 4);\n\n          result.x = _lineSplit$1$split2[0];\n          result.y = _lineSplit$1$split2[1];\n          result.w = _lineSplit$1$split2[2];\n          result.h = _lineSplit$1$split2[3];\n        }\n      }\n    });\n\n    if (result.text) {\n      processedList.push(result);\n    }\n  });\n  return processedList;\n};\n/**\n * Preview thumbnails for seek hover and scrubbing\n * Seeking: Hover over the seek bar (desktop only): shows a small preview container above the seek bar\n * Scrubbing: Click and drag the seek bar (desktop and mobile): shows the preview image over the entire video, as if the video is scrubbing at very high speed\n *\n * Notes:\n * - Thumbs are set via JS settings on Plyr init, not HTML5 'track' property. Using the track property would be a bit gross, because it doesn't support custom 'kinds'. kind=metadata might be used for something else, and we want to allow multiple thumbnails tracks. Tracks must have a unique combination of 'kind' and 'label'. We would have to do something like kind=metadata,label=thumbnails1 / kind=metadata,label=thumbnails2. Square peg, round hole\n * - VTT info: the image URL is relative to the VTT, not the current document. But if the url starts with a slash, it will naturally be relative to the current domain. https://support.jwplayer.com/articles/how-to-add-preview-thumbnails\n * - This implementation uses multiple separate img elements. Other implementations use background-image on one element. This would be nice and simple, but Firefox and Safari have flickering issues with replacing backgrounds of larger images. It seems that YouTube perhaps only avoids this because they don't have the option for high-res previews (even the fullscreen ones, when mousedown/seeking). Images appear over the top of each other, and previous ones are discarded once the new ones have been rendered\n */\n\n\nvar fitRatio = function fitRatio(ratio, outer) {\n  var targetRatio = outer.width / outer.height;\n  var result = {};\n\n  if (ratio > targetRatio) {\n    result.width = outer.width;\n    result.height = 1 / ratio * outer.width;\n  } else {\n    result.height = outer.height;\n    result.width = ratio * outer.height;\n  }\n\n  return result;\n};\n\nvar PreviewThumbnails = /*#__PURE__*/function () {\n  /**\n   * PreviewThumbnails constructor.\n   * @param {Plyr} player\n   * @return {PreviewThumbnails}\n   */\n  function PreviewThumbnails(player) {\n    var _this = this;\n\n    _classCallCheck(this, PreviewThumbnails);\n\n    _defineProperty(this, \"load\", function () {\n      // Toggle the regular seek tooltip\n      if (_this.player.elements.display.seekTooltip) {\n        _this.player.elements.display.seekTooltip.hidden = _this.enabled;\n      }\n\n      if (!_this.enabled) {\n        return;\n      }\n\n      _this.getThumbnails().then(function () {\n        if (!_this.enabled) {\n          return;\n        } // Render DOM elements\n\n\n        _this.render(); // Check to see if thumb container size was specified manually in CSS\n\n\n        _this.determineContainerAutoSizing();\n\n        _this.loaded = true;\n      });\n    });\n\n    _defineProperty(this, \"getThumbnails\", function () {\n      return new Promise(function (resolve) {\n        var src = _this.player.config.previewThumbnails.src;\n\n        if (is$1.empty(src)) {\n          throw new Error('Missing previewThumbnails.src config attribute');\n        } // Resolve promise\n\n\n        var sortAndResolve = function sortAndResolve() {\n          // Sort smallest to biggest (e.g., [120p, 480p, 1080p])\n          _this.thumbnails.sort(function (x, y) {\n            return x.height - y.height;\n          });\n\n          _this.player.debug.log('Preview thumbnails', _this.thumbnails);\n\n          resolve();\n        }; // Via callback()\n\n\n        if (is$1.function(src)) {\n          src(function (thumbnails) {\n            _this.thumbnails = thumbnails;\n            sortAndResolve();\n          });\n        } // VTT urls\n        else {\n            // If string, convert into single-element list\n            var urls = is$1.string(src) ? [src] : src; // Loop through each src URL. Download and process the VTT file, storing the resulting data in this.thumbnails\n\n            var promises = urls.map(function (u) {\n              return _this.getThumbnail(u);\n            }); // Resolve\n\n            Promise.all(promises).then(sortAndResolve);\n          }\n      });\n    });\n\n    _defineProperty(this, \"getThumbnail\", function (url) {\n      return new Promise(function (resolve) {\n        fetch(url).then(function (response) {\n          var thumbnail = {\n            frames: parseVtt(response),\n            height: null,\n            urlPrefix: ''\n          }; // If the URLs don't start with '/', then we need to set their relative path to be the location of the VTT file\n          // If the URLs do start with '/', then they obviously don't need a prefix, so it will remain blank\n          // If the thumbnail URLs start with with none of '/', 'http://' or 'https://', then we need to set their relative path to be the location of the VTT file\n\n          if (!thumbnail.frames[0].text.startsWith('/') && !thumbnail.frames[0].text.startsWith('http://') && !thumbnail.frames[0].text.startsWith('https://')) {\n            thumbnail.urlPrefix = url.substring(0, url.lastIndexOf('/') + 1);\n          } // Download the first frame, so that we can determine/set the height of this thumbnailsDef\n\n\n          var tempImage = new Image();\n\n          tempImage.onload = function () {\n            thumbnail.height = tempImage.naturalHeight;\n            thumbnail.width = tempImage.naturalWidth;\n\n            _this.thumbnails.push(thumbnail);\n\n            resolve();\n          };\n\n          tempImage.src = thumbnail.urlPrefix + thumbnail.frames[0].text;\n        });\n      });\n    });\n\n    _defineProperty(this, \"startMove\", function (event) {\n      if (!_this.loaded) {\n        return;\n      }\n\n      if (!is$1.event(event) || !['touchmove', 'mousemove'].includes(event.type)) {\n        return;\n      } // Wait until media has a duration\n\n\n      if (!_this.player.media.duration) {\n        return;\n      }\n\n      if (event.type === 'touchmove') {\n        // Calculate seek hover position as approx video seconds\n        _this.seekTime = _this.player.media.duration * (_this.player.elements.inputs.seek.value / 100);\n      } else {\n        // Calculate seek hover position as approx video seconds\n        var clientRect = _this.player.elements.progress.getBoundingClientRect();\n\n        var percentage = 100 / clientRect.width * (event.pageX - clientRect.left);\n        _this.seekTime = _this.player.media.duration * (percentage / 100);\n\n        if (_this.seekTime < 0) {\n          // The mousemove fires for 10+px out to the left\n          _this.seekTime = 0;\n        }\n\n        if (_this.seekTime > _this.player.media.duration - 1) {\n          // Took 1 second off the duration for safety, because different players can disagree on the real duration of a video\n          _this.seekTime = _this.player.media.duration - 1;\n        }\n\n        _this.mousePosX = event.pageX; // Set time text inside image container\n\n        _this.elements.thumb.time.innerText = formatTime(_this.seekTime);\n      } // Download and show image\n\n\n      _this.showImageAtCurrentTime();\n    });\n\n    _defineProperty(this, \"endMove\", function () {\n      _this.toggleThumbContainer(false, true);\n    });\n\n    _defineProperty(this, \"startScrubbing\", function (event) {\n      // Only act on left mouse button (0), or touch device (event.button does not exist or is false)\n      if (is$1.nullOrUndefined(event.button) || event.button === false || event.button === 0) {\n        _this.mouseDown = true; // Wait until media has a duration\n\n        if (_this.player.media.duration) {\n          _this.toggleScrubbingContainer(true);\n\n          _this.toggleThumbContainer(false, true); // Download and show image\n\n\n          _this.showImageAtCurrentTime();\n        }\n      }\n    });\n\n    _defineProperty(this, \"endScrubbing\", function () {\n      _this.mouseDown = false; // Hide scrubbing preview. But wait until the video has successfully seeked before hiding the scrubbing preview\n\n      if (Math.ceil(_this.lastTime) === Math.ceil(_this.player.media.currentTime)) {\n        // The video was already seeked/loaded at the chosen time - hide immediately\n        _this.toggleScrubbingContainer(false);\n      } else {\n        // The video hasn't seeked yet. Wait for that\n        once.call(_this.player, _this.player.media, 'timeupdate', function () {\n          // Re-check mousedown - we might have already started scrubbing again\n          if (!_this.mouseDown) {\n            _this.toggleScrubbingContainer(false);\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"listeners\", function () {\n      // Hide thumbnail preview - on mouse click, mouse leave (in listeners.js for now), and video play/seek. All four are required, e.g., for buffering\n      _this.player.on('play', function () {\n        _this.toggleThumbContainer(false, true);\n      });\n\n      _this.player.on('seeked', function () {\n        _this.toggleThumbContainer(false);\n      });\n\n      _this.player.on('timeupdate', function () {\n        _this.lastTime = _this.player.media.currentTime;\n      });\n    });\n\n    _defineProperty(this, \"render\", function () {\n      // Create HTML element: plyr__preview-thumbnail-container\n      _this.elements.thumb.container = createElement('div', {\n        class: _this.player.config.classNames.previewThumbnails.thumbContainer\n      }); // Wrapper for the image for styling\n\n      _this.elements.thumb.imageContainer = createElement('div', {\n        class: _this.player.config.classNames.previewThumbnails.imageContainer\n      });\n\n      _this.elements.thumb.container.appendChild(_this.elements.thumb.imageContainer); // Create HTML element, parent+span: time text (e.g., 01:32:00)\n\n\n      var timeContainer = createElement('div', {\n        class: _this.player.config.classNames.previewThumbnails.timeContainer\n      });\n      _this.elements.thumb.time = createElement('span', {}, '00:00');\n      timeContainer.appendChild(_this.elements.thumb.time);\n\n      _this.elements.thumb.container.appendChild(timeContainer); // Inject the whole thumb\n\n\n      if (is$1.element(_this.player.elements.progress)) {\n        _this.player.elements.progress.appendChild(_this.elements.thumb.container);\n      } // Create HTML element: plyr__preview-scrubbing-container\n\n\n      _this.elements.scrubbing.container = createElement('div', {\n        class: _this.player.config.classNames.previewThumbnails.scrubbingContainer\n      });\n\n      _this.player.elements.wrapper.appendChild(_this.elements.scrubbing.container);\n    });\n\n    _defineProperty(this, \"destroy\", function () {\n      if (_this.elements.thumb.container) {\n        _this.elements.thumb.container.remove();\n      }\n\n      if (_this.elements.scrubbing.container) {\n        _this.elements.scrubbing.container.remove();\n      }\n    });\n\n    _defineProperty(this, \"showImageAtCurrentTime\", function () {\n      if (_this.mouseDown) {\n        _this.setScrubbingContainerSize();\n      } else {\n        _this.setThumbContainerSizeAndPos();\n      } // Find the desired thumbnail index\n      // TODO: Handle a video longer than the thumbs where thumbNum is null\n\n\n      var thumbNum = _this.thumbnails[0].frames.findIndex(function (frame) {\n        return _this.seekTime >= frame.startTime && _this.seekTime <= frame.endTime;\n      });\n\n      var hasThumb = thumbNum >= 0;\n      var qualityIndex = 0; // Show the thumb container if we're not scrubbing\n\n      if (!_this.mouseDown) {\n        _this.toggleThumbContainer(hasThumb);\n      } // No matching thumb found\n\n\n      if (!hasThumb) {\n        return;\n      } // Check to see if we've already downloaded higher quality versions of this image\n\n\n      _this.thumbnails.forEach(function (thumbnail, index) {\n        if (_this.loadedImages.includes(thumbnail.frames[thumbNum].text)) {\n          qualityIndex = index;\n        }\n      }); // Only proceed if either thumbnum or thumbfilename has changed\n\n\n      if (thumbNum !== _this.showingThumb) {\n        _this.showingThumb = thumbNum;\n\n        _this.loadImage(qualityIndex);\n      }\n    });\n\n    _defineProperty(this, \"loadImage\", function () {\n      var qualityIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var thumbNum = _this.showingThumb;\n      var thumbnail = _this.thumbnails[qualityIndex];\n      var urlPrefix = thumbnail.urlPrefix;\n      var frame = thumbnail.frames[thumbNum];\n      var thumbFilename = thumbnail.frames[thumbNum].text;\n      var thumbUrl = urlPrefix + thumbFilename;\n\n      if (!_this.currentImageElement || _this.currentImageElement.dataset.filename !== thumbFilename) {\n        // If we're already loading a previous image, remove its onload handler - we don't want it to load after this one\n        // Only do this if not using sprites. Without sprites we really want to show as many images as possible, as a best-effort\n        if (_this.loadingImage && _this.usingSprites) {\n          _this.loadingImage.onload = null;\n        } // We're building and adding a new image. In other implementations of similar functionality (YouTube), background image\n        // is instead used. But this causes issues with larger images in Firefox and Safari - switching between background\n        // images causes a flicker. Putting a new image over the top does not\n\n\n        var previewImage = new Image();\n        previewImage.src = thumbUrl;\n        previewImage.dataset.index = thumbNum;\n        previewImage.dataset.filename = thumbFilename;\n        _this.showingThumbFilename = thumbFilename;\n\n        _this.player.debug.log(\"Loading image: \".concat(thumbUrl)); // For some reason, passing the named function directly causes it to execute immediately. So I've wrapped it in an anonymous function...\n\n\n        previewImage.onload = function () {\n          return _this.showImage(previewImage, frame, qualityIndex, thumbNum, thumbFilename, true);\n        };\n\n        _this.loadingImage = previewImage;\n\n        _this.removeOldImages(previewImage);\n      } else {\n        // Update the existing image\n        _this.showImage(_this.currentImageElement, frame, qualityIndex, thumbNum, thumbFilename, false);\n\n        _this.currentImageElement.dataset.index = thumbNum;\n\n        _this.removeOldImages(_this.currentImageElement);\n      }\n    });\n\n    _defineProperty(this, \"showImage\", function (previewImage, frame, qualityIndex, thumbNum, thumbFilename) {\n      var newImage = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n\n      _this.player.debug.log(\"Showing thumb: \".concat(thumbFilename, \". num: \").concat(thumbNum, \". qual: \").concat(qualityIndex, \". newimg: \").concat(newImage));\n\n      _this.setImageSizeAndOffset(previewImage, frame);\n\n      if (newImage) {\n        _this.currentImageContainer.appendChild(previewImage);\n\n        _this.currentImageElement = previewImage;\n\n        if (!_this.loadedImages.includes(thumbFilename)) {\n          _this.loadedImages.push(thumbFilename);\n        }\n      } // Preload images before and after the current one\n      // Show higher quality of the same frame\n      // Each step here has a short time delay, and only continues if still hovering/seeking the same spot. This is to protect slow connections from overloading\n\n\n      _this.preloadNearby(thumbNum, true).then(_this.preloadNearby(thumbNum, false)).then(_this.getHigherQuality(qualityIndex, previewImage, frame, thumbFilename));\n    });\n\n    _defineProperty(this, \"removeOldImages\", function (currentImage) {\n      // Get a list of all images, convert it from a DOM list to an array\n      Array.from(_this.currentImageContainer.children).forEach(function (image) {\n        if (image.tagName.toLowerCase() !== 'img') {\n          return;\n        }\n\n        var removeDelay = _this.usingSprites ? 500 : 1000;\n\n        if (image.dataset.index !== currentImage.dataset.index && !image.dataset.deleting) {\n          // Wait 200ms, as the new image can take some time to show on certain browsers (even though it was downloaded before showing). This will prevent flicker, and show some generosity towards slower clients\n          // First set attribute 'deleting' to prevent multi-handling of this on repeat firing of this function\n          // eslint-disable-next-line no-param-reassign\n          image.dataset.deleting = true; // This has to be set before the timeout - to prevent issues switching between hover and scrub\n\n          var currentImageContainer = _this.currentImageContainer;\n          setTimeout(function () {\n            currentImageContainer.removeChild(image);\n\n            _this.player.debug.log(\"Removing thumb: \".concat(image.dataset.filename));\n          }, removeDelay);\n        }\n      });\n    });\n\n    _defineProperty(this, \"preloadNearby\", function (thumbNum) {\n      var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          var oldThumbFilename = _this.thumbnails[0].frames[thumbNum].text;\n\n          if (_this.showingThumbFilename === oldThumbFilename) {\n            // Find the nearest thumbs with different filenames. Sometimes it'll be the next index, but in the case of sprites, it might be 100+ away\n            var thumbnailsClone;\n\n            if (forward) {\n              thumbnailsClone = _this.thumbnails[0].frames.slice(thumbNum);\n            } else {\n              thumbnailsClone = _this.thumbnails[0].frames.slice(0, thumbNum).reverse();\n            }\n\n            var foundOne = false;\n            thumbnailsClone.forEach(function (frame) {\n              var newThumbFilename = frame.text;\n\n              if (newThumbFilename !== oldThumbFilename) {\n                // Found one with a different filename. Make sure it hasn't already been loaded on this page visit\n                if (!_this.loadedImages.includes(newThumbFilename)) {\n                  foundOne = true;\n\n                  _this.player.debug.log(\"Preloading thumb filename: \".concat(newThumbFilename));\n\n                  var urlPrefix = _this.thumbnails[0].urlPrefix;\n                  var thumbURL = urlPrefix + newThumbFilename;\n                  var previewImage = new Image();\n                  previewImage.src = thumbURL;\n\n                  previewImage.onload = function () {\n                    _this.player.debug.log(\"Preloaded thumb filename: \".concat(newThumbFilename));\n\n                    if (!_this.loadedImages.includes(newThumbFilename)) _this.loadedImages.push(newThumbFilename); // We don't resolve until the thumb is loaded\n\n                    resolve();\n                  };\n                }\n              }\n            }); // If there are none to preload then we want to resolve immediately\n\n            if (!foundOne) {\n              resolve();\n            }\n          }\n        }, 300);\n      });\n    });\n\n    _defineProperty(this, \"getHigherQuality\", function (currentQualityIndex, previewImage, frame, thumbFilename) {\n      if (currentQualityIndex < _this.thumbnails.length - 1) {\n        // Only use the higher quality version if it's going to look any better - if the current thumb is of a lower pixel density than the thumbnail container\n        var previewImageHeight = previewImage.naturalHeight;\n\n        if (_this.usingSprites) {\n          previewImageHeight = frame.h;\n        }\n\n        if (previewImageHeight < _this.thumbContainerHeight) {\n          // Recurse back to the loadImage function - show a higher quality one, but only if the viewer is on this frame for a while\n          setTimeout(function () {\n            // Make sure the mouse hasn't already moved on and started hovering at another image\n            if (_this.showingThumbFilename === thumbFilename) {\n              _this.player.debug.log(\"Showing higher quality thumb for: \".concat(thumbFilename));\n\n              _this.loadImage(currentQualityIndex + 1);\n            }\n          }, 300);\n        }\n      }\n    });\n\n    _defineProperty(this, \"toggleThumbContainer\", function () {\n      var toggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var clearShowing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var className = _this.player.config.classNames.previewThumbnails.thumbContainerShown;\n\n      _this.elements.thumb.container.classList.toggle(className, toggle);\n\n      if (!toggle && clearShowing) {\n        _this.showingThumb = null;\n        _this.showingThumbFilename = null;\n      }\n    });\n\n    _defineProperty(this, \"toggleScrubbingContainer\", function () {\n      var toggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var className = _this.player.config.classNames.previewThumbnails.scrubbingContainerShown;\n\n      _this.elements.scrubbing.container.classList.toggle(className, toggle);\n\n      if (!toggle) {\n        _this.showingThumb = null;\n        _this.showingThumbFilename = null;\n      }\n    });\n\n    _defineProperty(this, \"determineContainerAutoSizing\", function () {\n      if (_this.elements.thumb.imageContainer.clientHeight > 20 || _this.elements.thumb.imageContainer.clientWidth > 20) {\n        // This will prevent auto sizing in this.setThumbContainerSizeAndPos()\n        _this.sizeSpecifiedInCSS = true;\n      }\n    });\n\n    _defineProperty(this, \"setThumbContainerSizeAndPos\", function () {\n      if (!_this.sizeSpecifiedInCSS) {\n        var thumbWidth = Math.floor(_this.thumbContainerHeight * _this.thumbAspectRatio);\n        _this.elements.thumb.imageContainer.style.height = \"\".concat(_this.thumbContainerHeight, \"px\");\n        _this.elements.thumb.imageContainer.style.width = \"\".concat(thumbWidth, \"px\");\n      } else if (_this.elements.thumb.imageContainer.clientHeight > 20 && _this.elements.thumb.imageContainer.clientWidth < 20) {\n        var _thumbWidth = Math.floor(_this.elements.thumb.imageContainer.clientHeight * _this.thumbAspectRatio);\n\n        _this.elements.thumb.imageContainer.style.width = \"\".concat(_thumbWidth, \"px\");\n      } else if (_this.elements.thumb.imageContainer.clientHeight < 20 && _this.elements.thumb.imageContainer.clientWidth > 20) {\n        var thumbHeight = Math.floor(_this.elements.thumb.imageContainer.clientWidth / _this.thumbAspectRatio);\n        _this.elements.thumb.imageContainer.style.height = \"\".concat(thumbHeight, \"px\");\n      }\n\n      _this.setThumbContainerPos();\n    });\n\n    _defineProperty(this, \"setThumbContainerPos\", function () {\n      var seekbarRect = _this.player.elements.progress.getBoundingClientRect();\n\n      var plyrRect = _this.player.elements.container.getBoundingClientRect();\n\n      var container = _this.elements.thumb.container; // Find the lowest and highest desired left-position, so we don't slide out the side of the video container\n\n      var minVal = plyrRect.left - seekbarRect.left + 10;\n      var maxVal = plyrRect.right - seekbarRect.left - container.clientWidth - 10; // Set preview container position to: mousepos, minus seekbar.left, minus half of previewContainer.clientWidth\n\n      var previewPos = _this.mousePosX - seekbarRect.left - container.clientWidth / 2;\n\n      if (previewPos < minVal) {\n        previewPos = minVal;\n      }\n\n      if (previewPos > maxVal) {\n        previewPos = maxVal;\n      }\n\n      container.style.left = \"\".concat(previewPos, \"px\");\n    });\n\n    _defineProperty(this, \"setScrubbingContainerSize\", function () {\n      var _fitRatio = fitRatio(_this.thumbAspectRatio, {\n        width: _this.player.media.clientWidth,\n        height: _this.player.media.clientHeight\n      }),\n          width = _fitRatio.width,\n          height = _fitRatio.height;\n\n      _this.elements.scrubbing.container.style.width = \"\".concat(width, \"px\");\n      _this.elements.scrubbing.container.style.height = \"\".concat(height, \"px\");\n    });\n\n    _defineProperty(this, \"setImageSizeAndOffset\", function (previewImage, frame) {\n      if (!_this.usingSprites) {\n        return;\n      } // Find difference between height and preview container height\n\n\n      var multiplier = _this.thumbContainerHeight / frame.h; // eslint-disable-next-line no-param-reassign\n\n      previewImage.style.height = \"\".concat(previewImage.naturalHeight * multiplier, \"px\"); // eslint-disable-next-line no-param-reassign\n\n      previewImage.style.width = \"\".concat(previewImage.naturalWidth * multiplier, \"px\"); // eslint-disable-next-line no-param-reassign\n\n      previewImage.style.left = \"-\".concat(frame.x * multiplier, \"px\"); // eslint-disable-next-line no-param-reassign\n\n      previewImage.style.top = \"-\".concat(frame.y * multiplier, \"px\");\n    });\n\n    this.player = player;\n    this.thumbnails = [];\n    this.loaded = false;\n    this.lastMouseMoveTime = Date.now();\n    this.mouseDown = false;\n    this.loadedImages = [];\n    this.elements = {\n      thumb: {},\n      scrubbing: {}\n    };\n    this.load();\n  }\n\n  _createClass(PreviewThumbnails, [{\n    key: \"enabled\",\n    get: function get() {\n      return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled;\n    }\n  }, {\n    key: \"currentImageContainer\",\n    get: function get() {\n      if (this.mouseDown) {\n        return this.elements.scrubbing.container;\n      }\n\n      return this.elements.thumb.imageContainer;\n    }\n  }, {\n    key: \"usingSprites\",\n    get: function get() {\n      return Object.keys(this.thumbnails[0].frames[0]).includes('w');\n    }\n  }, {\n    key: \"thumbAspectRatio\",\n    get: function get() {\n      if (this.usingSprites) {\n        return this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h;\n      }\n\n      return this.thumbnails[0].width / this.thumbnails[0].height;\n    }\n  }, {\n    key: \"thumbContainerHeight\",\n    get: function get() {\n      if (this.mouseDown) {\n        var _fitRatio2 = fitRatio(this.thumbAspectRatio, {\n          width: this.player.media.clientWidth,\n          height: this.player.media.clientHeight\n        }),\n            height = _fitRatio2.height;\n\n        return height;\n      } // If css is used this needs to return the css height for sprites to work (see setImageSizeAndOffset)\n\n\n      if (this.sizeSpecifiedInCSS) {\n        return this.elements.thumb.imageContainer.clientHeight;\n      }\n\n      return Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4);\n    }\n  }, {\n    key: \"currentImageElement\",\n    get: function get() {\n      if (this.mouseDown) {\n        return this.currentScrubbingImageElement;\n      }\n\n      return this.currentThumbnailImageElement;\n    },\n    set: function set(element) {\n      if (this.mouseDown) {\n        this.currentScrubbingImageElement = element;\n      } else {\n        this.currentThumbnailImageElement = element;\n      }\n    }\n  }]);\n\n  return PreviewThumbnails;\n}();\n\nvar source = {\n  // Add elements to HTML5 media (source, tracks, etc)\n  insertElements: function insertElements(type, attributes) {\n    var _this = this;\n\n    if (is$1.string(attributes)) {\n      insertElement(type, this.media, {\n        src: attributes\n      });\n    } else if (is$1.array(attributes)) {\n      attributes.forEach(function (attribute) {\n        insertElement(type, _this.media, attribute);\n      });\n    }\n  },\n  // Update source\n  // Sources are not checked for support so be careful\n  change: function change(input) {\n    var _this2 = this;\n\n    if (!getDeep(input, 'sources.length')) {\n      this.debug.warn('Invalid source format');\n      return;\n    } // Cancel current network requests\n\n\n    html5.cancelRequests.call(this); // Destroy instance and re-setup\n\n    this.destroy.call(this, function () {\n      // Reset quality options\n      _this2.options.quality = []; // Remove elements\n\n      removeElement(_this2.media);\n      _this2.media = null; // Reset class name\n\n      if (is$1.element(_this2.elements.container)) {\n        _this2.elements.container.removeAttribute('class');\n      } // Set the type and provider\n\n\n      var sources = input.sources,\n          type = input.type;\n\n      var _sources = _slicedToArray(sources, 1),\n          _sources$ = _sources[0],\n          _sources$$provider = _sources$.provider,\n          provider = _sources$$provider === void 0 ? providers.html5 : _sources$$provider,\n          src = _sources$.src;\n\n      var tagName = provider === 'html5' ? type : 'div';\n      var attributes = provider === 'html5' ? {} : {\n        src: src\n      };\n      Object.assign(_this2, {\n        provider: provider,\n        type: type,\n        // Check for support\n        supported: support.check(type, provider, _this2.config.playsinline),\n        // Create new element\n        media: createElement(tagName, attributes)\n      }); // Inject the new element\n\n      _this2.elements.container.appendChild(_this2.media); // Autoplay the new source?\n\n\n      if (is$1.boolean(input.autoplay)) {\n        _this2.config.autoplay = input.autoplay;\n      } // Set attributes for audio and video\n\n\n      if (_this2.isHTML5) {\n        if (_this2.config.crossorigin) {\n          _this2.media.setAttribute('crossorigin', '');\n        }\n\n        if (_this2.config.autoplay) {\n          _this2.media.setAttribute('autoplay', '');\n        }\n\n        if (!is$1.empty(input.poster)) {\n          _this2.poster = input.poster;\n        }\n\n        if (_this2.config.loop.active) {\n          _this2.media.setAttribute('loop', '');\n        }\n\n        if (_this2.config.muted) {\n          _this2.media.setAttribute('muted', '');\n        }\n\n        if (_this2.config.playsinline) {\n          _this2.media.setAttribute('playsinline', '');\n        }\n      } // Restore class hook\n\n\n      ui.addStyleHook.call(_this2); // Set new sources for html5\n\n      if (_this2.isHTML5) {\n        source.insertElements.call(_this2, 'source', sources);\n      } // Set video title\n\n\n      _this2.config.title = input.title; // Set up from scratch\n\n      media.setup.call(_this2); // HTML5 stuff\n\n      if (_this2.isHTML5) {\n        // Setup captions\n        if (Object.keys(input).includes('tracks')) {\n          source.insertElements.call(_this2, 'track', input.tracks);\n        }\n      } // If HTML5 or embed but not fully supported, setupInterface and call ready now\n\n\n      if (_this2.isHTML5 || _this2.isEmbed && !_this2.supported.ui) {\n        // Setup interface\n        ui.build.call(_this2);\n      } // Load HTML5 sources\n\n\n      if (_this2.isHTML5) {\n        _this2.media.load();\n      } // Update previewThumbnails config & reload plugin\n\n\n      if (!is$1.empty(input.previewThumbnails)) {\n        Object.assign(_this2.config.previewThumbnails, input.previewThumbnails); // Cleanup previewThumbnails plugin if it was loaded\n\n        if (_this2.previewThumbnails && _this2.previewThumbnails.loaded) {\n          _this2.previewThumbnails.destroy();\n\n          _this2.previewThumbnails = null;\n        } // Create new instance if it is still enabled\n\n\n        if (_this2.config.previewThumbnails.enabled) {\n          _this2.previewThumbnails = new PreviewThumbnails(_this2);\n        }\n      } // Update the fullscreen support\n\n\n      _this2.fullscreen.update();\n    }, true);\n  }\n};\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * Example: limit the output of this computation to between 0 and 255\n * (x * 255).clamp(0, 255)\n *\n * @param {Number} input\n * @param {Number} min The lower boundary of the output range\n * @param {Number} max The upper boundary of the output range\n * @returns A number in the range [min, max]\n * @type Number\n */\nfunction clamp() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 255;\n  return Math.min(Math.max(input, min), max);\n}\n\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n// Plyr instance\n\nvar Plyr = /*#__PURE__*/function () {\n  function Plyr(target, options) {\n    var _this = this;\n\n    _classCallCheck(this, Plyr);\n\n    _defineProperty(this, \"play\", function () {\n      if (!is$1.function(_this.media.play)) {\n        return null;\n      } // Intecept play with ads\n\n\n      if (_this.ads && _this.ads.enabled) {\n        _this.ads.managerPromise.then(function () {\n          return _this.ads.play();\n        }).catch(function () {\n          return silencePromise(_this.media.play());\n        });\n      } // Return the promise (for HTML5)\n\n\n      return _this.media.play();\n    });\n\n    _defineProperty(this, \"pause\", function () {\n      if (!_this.playing || !is$1.function(_this.media.pause)) {\n        return null;\n      }\n\n      return _this.media.pause();\n    });\n\n    _defineProperty(this, \"togglePlay\", function (input) {\n      // Toggle based on current state if nothing passed\n      var toggle = is$1.boolean(input) ? input : !_this.playing;\n\n      if (toggle) {\n        return _this.play();\n      }\n\n      return _this.pause();\n    });\n\n    _defineProperty(this, \"stop\", function () {\n      if (_this.isHTML5) {\n        _this.pause();\n\n        _this.restart();\n      } else if (is$1.function(_this.media.stop)) {\n        _this.media.stop();\n      }\n    });\n\n    _defineProperty(this, \"restart\", function () {\n      _this.currentTime = 0;\n    });\n\n    _defineProperty(this, \"rewind\", function (seekTime) {\n      _this.currentTime -= is$1.number(seekTime) ? seekTime : _this.config.seekTime;\n    });\n\n    _defineProperty(this, \"forward\", function (seekTime) {\n      _this.currentTime += is$1.number(seekTime) ? seekTime : _this.config.seekTime;\n    });\n\n    _defineProperty(this, \"increaseVolume\", function (step) {\n      var volume = _this.media.muted ? 0 : _this.volume;\n      _this.volume = volume + (is$1.number(step) ? step : 0);\n    });\n\n    _defineProperty(this, \"decreaseVolume\", function (step) {\n      _this.increaseVolume(-step);\n    });\n\n    _defineProperty(this, \"airplay\", function () {\n      // Show dialog if supported\n      if (support.airplay) {\n        _this.media.webkitShowPlaybackTargetPicker();\n      }\n    });\n\n    _defineProperty(this, \"toggleControls\", function (toggle) {\n      // Don't toggle if missing UI support or if it's audio\n      if (_this.supported.ui && !_this.isAudio) {\n        // Get state before change\n        var isHidden = hasClass(_this.elements.container, _this.config.classNames.hideControls); // Negate the argument if not undefined since adding the class to hides the controls\n\n        var force = typeof toggle === 'undefined' ? undefined : !toggle; // Apply and get updated state\n\n        var hiding = toggleClass(_this.elements.container, _this.config.classNames.hideControls, force); // Close menu\n\n        if (hiding && is$1.array(_this.config.controls) && _this.config.controls.includes('settings') && !is$1.empty(_this.config.settings)) {\n          controls.toggleMenu.call(_this, false);\n        } // Trigger event on change\n\n\n        if (hiding !== isHidden) {\n          var eventName = hiding ? 'controlshidden' : 'controlsshown';\n          triggerEvent.call(_this, _this.media, eventName);\n        }\n\n        return !hiding;\n      }\n\n      return false;\n    });\n\n    _defineProperty(this, \"on\", function (event, callback) {\n      on.call(_this, _this.elements.container, event, callback);\n    });\n\n    _defineProperty(this, \"once\", function (event, callback) {\n      once.call(_this, _this.elements.container, event, callback);\n    });\n\n    _defineProperty(this, \"off\", function (event, callback) {\n      off(_this.elements.container, event, callback);\n    });\n\n    _defineProperty(this, \"destroy\", function (callback) {\n      var soft = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!_this.ready) {\n        return;\n      }\n\n      var done = function done() {\n        // Reset overflow (incase destroyed while in fullscreen)\n        document.body.style.overflow = ''; // GC for embed\n\n        _this.embed = null; // If it's a soft destroy, make minimal changes\n\n        if (soft) {\n          if (Object.keys(_this.elements).length) {\n            // Remove elements\n            removeElement(_this.elements.buttons.play);\n            removeElement(_this.elements.captions);\n            removeElement(_this.elements.controls);\n            removeElement(_this.elements.wrapper); // Clear for GC\n\n            _this.elements.buttons.play = null;\n            _this.elements.captions = null;\n            _this.elements.controls = null;\n            _this.elements.wrapper = null;\n          } // Callback\n\n\n          if (is$1.function(callback)) {\n            callback();\n          }\n        } else {\n          // Unbind listeners\n          unbindListeners.call(_this); // Cancel current network requests\n\n          html5.cancelRequests.call(_this); // Replace the container with the original element provided\n\n          replaceElement(_this.elements.original, _this.elements.container); // Event\n\n          triggerEvent.call(_this, _this.elements.original, 'destroyed', true); // Callback\n\n          if (is$1.function(callback)) {\n            callback.call(_this.elements.original);\n          } // Reset state\n\n\n          _this.ready = false; // Clear for garbage collection\n\n          setTimeout(function () {\n            _this.elements = null;\n            _this.media = null;\n          }, 200);\n        }\n      }; // Stop playback\n\n\n      _this.stop(); // Clear timeouts\n\n\n      clearTimeout(_this.timers.loading);\n      clearTimeout(_this.timers.controls);\n      clearTimeout(_this.timers.resized); // Provider specific stuff\n\n      if (_this.isHTML5) {\n        // Restore native video controls\n        ui.toggleNativeControls.call(_this, true); // Clean up\n\n        done();\n      } else if (_this.isYouTube) {\n        // Clear timers\n        clearInterval(_this.timers.buffering);\n        clearInterval(_this.timers.playing); // Destroy YouTube API\n\n        if (_this.embed !== null && is$1.function(_this.embed.destroy)) {\n          _this.embed.destroy();\n        } // Clean up\n\n\n        done();\n      } else if (_this.isVimeo) {\n        // Destroy Vimeo API\n        // then clean up (wait, to prevent postmessage errors)\n        if (_this.embed !== null) {\n          _this.embed.unload().then(done);\n        } // Vimeo does not always return\n\n\n        setTimeout(done, 200);\n      }\n    });\n\n    _defineProperty(this, \"supports\", function (type) {\n      return support.mime.call(_this, type);\n    });\n\n    this.timers = {}; // State\n\n    this.ready = false;\n    this.loading = false;\n    this.failed = false; // Touch device\n\n    this.touch = support.touch; // Set the media element\n\n    this.media = target; // String selector passed\n\n    if (is$1.string(this.media)) {\n      this.media = document.querySelectorAll(this.media);\n    } // jQuery, NodeList or Array passed, use first element\n\n\n    if (window.jQuery && this.media instanceof jQuery || is$1.nodeList(this.media) || is$1.array(this.media)) {\n      // eslint-disable-next-line\n      this.media = this.media[0];\n    } // Set config\n\n\n    this.config = extend({}, defaults$1, Plyr.defaults, options || {}, function () {\n      try {\n        return JSON.parse(_this.media.getAttribute('data-plyr-config'));\n      } catch (e) {\n        return {};\n      }\n    }()); // Elements cache\n\n    this.elements = {\n      container: null,\n      fullscreen: null,\n      captions: null,\n      buttons: {},\n      display: {},\n      progress: {},\n      inputs: {},\n      settings: {\n        popup: null,\n        menu: null,\n        panels: {},\n        buttons: {}\n      }\n    }; // Captions\n\n    this.captions = {\n      active: null,\n      currentTrack: -1,\n      meta: new WeakMap()\n    }; // Fullscreen\n\n    this.fullscreen = {\n      active: false\n    }; // Options\n\n    this.options = {\n      speed: [],\n      quality: []\n    }; // Debugging\n    // TODO: move to globals\n\n    this.debug = new Console(this.config.debug); // Log config options and support\n\n    this.debug.log('Config', this.config);\n    this.debug.log('Support', support); // We need an element to setup\n\n    if (is$1.nullOrUndefined(this.media) || !is$1.element(this.media)) {\n      this.debug.error('Setup failed: no suitable element passed');\n      return;\n    } // Bail if the element is initialized\n\n\n    if (this.media.plyr) {\n      this.debug.warn('Target already setup');\n      return;\n    } // Bail if not enabled\n\n\n    if (!this.config.enabled) {\n      this.debug.error('Setup failed: disabled by config');\n      return;\n    } // Bail if disabled or no basic support\n    // You may want to disable certain UAs etc\n\n\n    if (!support.check().api) {\n      this.debug.error('Setup failed: no support');\n      return;\n    } // Cache original element state for .destroy()\n\n\n    var clone = this.media.cloneNode(true);\n    clone.autoplay = false;\n    this.elements.original = clone; // Set media type based on tag or data attribute\n    // Supported: video, audio, vimeo, youtube\n\n    var _type = this.media.tagName.toLowerCase(); // Embed properties\n\n\n    var iframe = null;\n    var url = null; // Different setup based on type\n\n    switch (_type) {\n      case 'div':\n        // Find the frame\n        iframe = this.media.querySelector('iframe'); // <iframe> type\n\n        if (is$1.element(iframe)) {\n          // Detect provider\n          url = parseUrl(iframe.getAttribute('src'));\n          this.provider = getProviderByUrl(url.toString()); // Rework elements\n\n          this.elements.container = this.media;\n          this.media = iframe; // Reset classname\n\n          this.elements.container.className = ''; // Get attributes from URL and set config\n\n          if (url.search.length) {\n            var truthy = ['1', 'true'];\n\n            if (truthy.includes(url.searchParams.get('autoplay'))) {\n              this.config.autoplay = true;\n            }\n\n            if (truthy.includes(url.searchParams.get('loop'))) {\n              this.config.loop.active = true;\n            } // TODO: replace fullscreen.iosNative with this playsinline config option\n            // YouTube requires the playsinline in the URL\n\n\n            if (this.isYouTube) {\n              this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n              this.config.youtube.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n            } else {\n              this.config.playsinline = true;\n            }\n          }\n        } else {\n          // <div> with attributes\n          this.provider = this.media.getAttribute(this.config.attributes.embed.provider); // Remove attribute\n\n          this.media.removeAttribute(this.config.attributes.embed.provider);\n        } // Unsupported or missing provider\n\n\n        if (is$1.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n          this.debug.error('Setup failed: Invalid provider');\n          return;\n        } // Audio will come later for external providers\n\n\n        this.type = types.video;\n        break;\n\n      case 'video':\n      case 'audio':\n        this.type = _type;\n        this.provider = providers.html5; // Get config from attributes\n\n        if (this.media.hasAttribute('crossorigin')) {\n          this.config.crossorigin = true;\n        }\n\n        if (this.media.hasAttribute('autoplay')) {\n          this.config.autoplay = true;\n        }\n\n        if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n          this.config.playsinline = true;\n        }\n\n        if (this.media.hasAttribute('muted')) {\n          this.config.muted = true;\n        }\n\n        if (this.media.hasAttribute('loop')) {\n          this.config.loop.active = true;\n        }\n\n        break;\n\n      default:\n        this.debug.error('Setup failed: unsupported type');\n        return;\n    } // Check for support again but with type\n\n\n    this.supported = support.check(this.type, this.provider, this.config.playsinline); // If no support for even API, bail\n\n    if (!this.supported.api) {\n      this.debug.error('Setup failed: no support');\n      return;\n    }\n\n    this.eventListeners = []; // Create listeners\n\n    this.listeners = new Listeners(this); // Setup local storage for user settings\n\n    this.storage = new Storage(this); // Store reference\n\n    this.media.plyr = this; // Wrap media\n\n    if (!is$1.element(this.elements.container)) {\n      this.elements.container = createElement('div', {\n        tabindex: 0\n      });\n      wrap(this.media, this.elements.container);\n    } // Migrate custom properties from media to container (so they work 😉)\n\n\n    ui.migrateStyles.call(this); // Add style hook\n\n    ui.addStyleHook.call(this); // Setup media\n\n    media.setup.call(this); // Listen for events if debugging\n\n    if (this.config.debug) {\n      on.call(this, this.elements.container, this.config.events.join(' '), function (event) {\n        _this.debug.log(\"event: \".concat(event.type));\n      });\n    } // Setup fullscreen\n\n\n    this.fullscreen = new Fullscreen(this); // Setup interface\n    // If embed but not fully supported, build interface now to avoid flash of controls\n\n    if (this.isHTML5 || this.isEmbed && !this.supported.ui) {\n      ui.build.call(this);\n    } // Container listeners\n\n\n    this.listeners.container(); // Global listeners\n\n    this.listeners.global(); // Setup ads if provided\n\n    if (this.config.ads.enabled) {\n      this.ads = new Ads(this);\n    } // Autoplay if required\n\n\n    if (this.isHTML5 && this.config.autoplay) {\n      this.once('canplay', function () {\n        return silencePromise(_this.play());\n      });\n    } // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n\n\n    this.lastSeekTime = 0; // Setup preview thumbnails if enabled\n\n    if (this.config.previewThumbnails.enabled) {\n      this.previewThumbnails = new PreviewThumbnails(this);\n    }\n  } // ---------------------------------------\n  // API\n  // ---------------------------------------\n\n  /**\n   * Types and provider helpers\n   */\n\n\n  _createClass(Plyr, [{\n    key: \"toggleCaptions\",\n\n    /**\n     * Toggle captions\n     * @param {Boolean} input - Whether to enable captions\n     */\n    value: function toggleCaptions(input) {\n      captions.toggle.call(this, input, false);\n    }\n    /**\n     * Set the caption track by index\n     * @param {Number} - Caption index\n     */\n\n  }, {\n    key: \"isHTML5\",\n    get: function get() {\n      return this.provider === providers.html5;\n    }\n  }, {\n    key: \"isEmbed\",\n    get: function get() {\n      return this.isYouTube || this.isVimeo;\n    }\n  }, {\n    key: \"isYouTube\",\n    get: function get() {\n      return this.provider === providers.youtube;\n    }\n  }, {\n    key: \"isVimeo\",\n    get: function get() {\n      return this.provider === providers.vimeo;\n    }\n  }, {\n    key: \"isVideo\",\n    get: function get() {\n      return this.type === types.video;\n    }\n  }, {\n    key: \"isAudio\",\n    get: function get() {\n      return this.type === types.audio;\n    }\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n\n  }, {\n    key: \"playing\",\n\n    /**\n     * Get playing state\n     */\n    get: function get() {\n      return Boolean(this.ready && !this.paused && !this.ended);\n    }\n    /**\n     * Get paused state\n     */\n\n  }, {\n    key: \"paused\",\n    get: function get() {\n      return Boolean(this.media.paused);\n    }\n    /**\n     * Get stopped state\n     */\n\n  }, {\n    key: \"stopped\",\n    get: function get() {\n      return Boolean(this.paused && this.currentTime === 0);\n    }\n    /**\n     * Get ended state\n     */\n\n  }, {\n    key: \"ended\",\n    get: function get() {\n      return Boolean(this.media.ended);\n    }\n    /**\n     * Toggle playback based on current status\n     * @param {Boolean} input\n     */\n\n  }, {\n    key: \"currentTime\",\n\n    /**\n     * Seek to a time\n     * @param {Number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set: function set(input) {\n      // Bail if media duration isn't available yet\n      if (!this.duration) {\n        return;\n      } // Validate input\n\n\n      var inputIsValid = is$1.number(input) && input > 0; // Set\n\n      this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0; // Logging\n\n      this.debug.log(\"Seeking to \".concat(this.currentTime, \" seconds\"));\n    }\n    /**\n     * Get current time\n     */\n    ,\n    get: function get() {\n      return Number(this.media.currentTime);\n    }\n    /**\n     * Get buffered\n     */\n\n  }, {\n    key: \"buffered\",\n    get: function get() {\n      var buffered = this.media.buffered; // YouTube / Vimeo return a float between 0-1\n\n      if (is$1.number(buffered)) {\n        return buffered;\n      } // HTML5\n      // TODO: Handle buffered chunks of the media\n      // (i.e. seek to another section buffers only that section)\n\n\n      if (buffered && buffered.length && this.duration > 0) {\n        return buffered.end(0) / this.duration;\n      }\n\n      return 0;\n    }\n    /**\n     * Get seeking status\n     */\n\n  }, {\n    key: \"seeking\",\n    get: function get() {\n      return Boolean(this.media.seeking);\n    }\n    /**\n     * Get the duration of the current media\n     */\n\n  }, {\n    key: \"duration\",\n    get: function get() {\n      // Faux duration set via config\n      var fauxDuration = parseFloat(this.config.duration); // Media duration can be NaN or Infinity before the media has loaded\n\n      var realDuration = (this.media || {}).duration;\n      var duration = !is$1.number(realDuration) || realDuration === Infinity ? 0 : realDuration; // If config duration is funky, use regular duration\n\n      return fauxDuration || duration;\n    }\n    /**\n     * Set the player volume\n     * @param {Number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n\n  }, {\n    key: \"volume\",\n    set: function set(value) {\n      var volume = value;\n      var max = 1;\n      var min = 0;\n\n      if (is$1.string(volume)) {\n        volume = Number(volume);\n      } // Load volume from storage if no value specified\n\n\n      if (!is$1.number(volume)) {\n        volume = this.storage.get('volume');\n      } // Use config if all else fails\n\n\n      if (!is$1.number(volume)) {\n        volume = this.config.volume;\n      } // Maximum is volumeMax\n\n\n      if (volume > max) {\n        volume = max;\n      } // Minimum is volumeMin\n\n\n      if (volume < min) {\n        volume = min;\n      } // Update config\n\n\n      this.config.volume = volume; // Set the player volume\n\n      this.media.volume = volume; // If muted, and we're increasing volume manually, reset muted state\n\n      if (!is$1.empty(value) && this.muted && volume > 0) {\n        this.muted = false;\n      }\n    }\n    /**\n     * Get the current player volume\n     */\n    ,\n    get: function get() {\n      return Number(this.media.volume);\n    }\n    /**\n     * Increase volume\n     * @param {Boolean} step - How much to decrease by (between 0 and 1)\n     */\n\n  }, {\n    key: \"muted\",\n\n    /**\n     * Set muted state\n     * @param {Boolean} mute\n     */\n    set: function set(mute) {\n      var toggle = mute; // Load muted state from storage\n\n      if (!is$1.boolean(toggle)) {\n        toggle = this.storage.get('muted');\n      } // Use config if all else fails\n\n\n      if (!is$1.boolean(toggle)) {\n        toggle = this.config.muted;\n      } // Update config\n\n\n      this.config.muted = toggle; // Set mute on the player\n\n      this.media.muted = toggle;\n    }\n    /**\n     * Get current muted state\n     */\n    ,\n    get: function get() {\n      return Boolean(this.media.muted);\n    }\n    /**\n     * Check if the media has audio\n     */\n\n  }, {\n    key: \"hasAudio\",\n    get: function get() {\n      // Assume yes for all non HTML5 (as we can't tell...)\n      if (!this.isHTML5) {\n        return true;\n      }\n\n      if (this.isAudio) {\n        return true;\n      } // Get audio tracks\n\n\n      return Boolean(this.media.mozHasAudio) || Boolean(this.media.webkitAudioDecodedByteCount) || Boolean(this.media.audioTracks && this.media.audioTracks.length);\n    }\n    /**\n     * Set playback speed\n     * @param {Number} speed - the speed of playback (0.5-2.0)\n     */\n\n  }, {\n    key: \"speed\",\n    set: function set(input) {\n      var _this2 = this;\n\n      var speed = null;\n\n      if (is$1.number(input)) {\n        speed = input;\n      }\n\n      if (!is$1.number(speed)) {\n        speed = this.storage.get('speed');\n      }\n\n      if (!is$1.number(speed)) {\n        speed = this.config.speed.selected;\n      } // Clamp to min/max\n\n\n      var min = this.minimumSpeed,\n          max = this.maximumSpeed;\n      speed = clamp(speed, min, max); // Update config\n\n      this.config.speed.selected = speed; // Set media speed\n\n      setTimeout(function () {\n        _this2.media.playbackRate = speed;\n      }, 0);\n    }\n    /**\n     * Get current playback speed\n     */\n    ,\n    get: function get() {\n      return Number(this.media.playbackRate);\n    }\n    /**\n     * Get the minimum allowed speed\n     */\n\n  }, {\n    key: \"minimumSpeed\",\n    get: function get() {\n      if (this.isYouTube) {\n        // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n        return Math.min.apply(Math, _toConsumableArray(this.options.speed));\n      }\n\n      if (this.isVimeo) {\n        // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n        return 0.5;\n      } // https://stackoverflow.com/a/32320020/1191319\n\n\n      return 0.0625;\n    }\n    /**\n     * Get the maximum allowed speed\n     */\n\n  }, {\n    key: \"maximumSpeed\",\n    get: function get() {\n      if (this.isYouTube) {\n        // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n        return Math.max.apply(Math, _toConsumableArray(this.options.speed));\n      }\n\n      if (this.isVimeo) {\n        // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n        return 2;\n      } // https://stackoverflow.com/a/32320020/1191319\n\n\n      return 16;\n    }\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {Number} input - Quality level\n     */\n\n  }, {\n    key: \"quality\",\n    set: function set(input) {\n      var config = this.config.quality;\n      var options = this.options.quality;\n\n      if (!options.length) {\n        return;\n      }\n\n      var quality = [!is$1.empty(input) && Number(input), this.storage.get('quality'), config.selected, config.default].find(is$1.number);\n      var updateStorage = true;\n\n      if (!options.includes(quality)) {\n        var value = closest$1(options, quality);\n        this.debug.warn(\"Unsupported quality option: \".concat(quality, \", using \").concat(value, \" instead\"));\n        quality = value; // Don't update storage if quality is not supported\n\n        updateStorage = false;\n      } // Update config\n\n\n      config.selected = quality; // Set quality\n\n      this.media.quality = quality; // Save to storage\n\n      if (updateStorage) {\n        this.storage.set({\n          quality: quality\n        });\n      }\n    }\n    /**\n     * Get current quality level\n     */\n    ,\n    get: function get() {\n      return this.media.quality;\n    }\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {Boolean} input - Whether to loop or not\n     */\n\n  }, {\n    key: \"loop\",\n    set: function set(input) {\n      var toggle = is$1.boolean(input) ? input : this.config.loop.active;\n      this.config.loop.active = toggle;\n      this.media.loop = toggle; // Set default to be a true toggle\n\n      /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n           switch (type) {\n              case 'start':\n                  if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                      this.config.loop.end = null;\n                  }\n                  this.config.loop.start = this.currentTime;\n                  // this.config.loop.indicator.start = this.elements.display.played.value;\n                  break;\n               case 'end':\n                  if (this.config.loop.start >= this.currentTime) {\n                      return this;\n                  }\n                  this.config.loop.end = this.currentTime;\n                  // this.config.loop.indicator.end = this.elements.display.played.value;\n                  break;\n               case 'all':\n                  this.config.loop.start = 0;\n                  this.config.loop.end = this.duration - 2;\n                  this.config.loop.indicator.start = 0;\n                  this.config.loop.indicator.end = 100;\n                  break;\n               case 'toggle':\n                  if (this.config.loop.active) {\n                      this.config.loop.start = 0;\n                      this.config.loop.end = null;\n                  } else {\n                      this.config.loop.start = 0;\n                      this.config.loop.end = this.duration - 2;\n                  }\n                  break;\n               default:\n                  this.config.loop.start = 0;\n                  this.config.loop.end = null;\n                  break;\n          } */\n    }\n    /**\n     * Get current loop state\n     */\n    ,\n    get: function get() {\n      return Boolean(this.media.loop);\n    }\n    /**\n     * Set new media source\n     * @param {Object} input - The new source object (see docs)\n     */\n\n  }, {\n    key: \"source\",\n    set: function set(input) {\n      source.change.call(this, input);\n    }\n    /**\n     * Get current source\n     */\n    ,\n    get: function get() {\n      return this.media.currentSrc;\n    }\n    /**\n     * Get a download URL (either source or custom)\n     */\n\n  }, {\n    key: \"download\",\n    get: function get() {\n      var download = this.config.urls.download;\n      return is$1.url(download) ? download : this.source;\n    }\n    /**\n     * Set the download URL\n     */\n    ,\n    set: function set(input) {\n      if (!is$1.url(input)) {\n        return;\n      }\n\n      this.config.urls.download = input;\n      controls.setDownloadUrl.call(this);\n    }\n    /**\n     * Set the poster image for a video\n     * @param {String} input - the URL for the new poster image\n     */\n\n  }, {\n    key: \"poster\",\n    set: function set(input) {\n      if (!this.isVideo) {\n        this.debug.warn('Poster can only be set for video');\n        return;\n      }\n\n      ui.setPoster.call(this, input, false).catch(function () {});\n    }\n    /**\n     * Get the current poster image\n     */\n    ,\n    get: function get() {\n      if (!this.isVideo) {\n        return null;\n      }\n\n      return this.media.getAttribute('poster') || this.media.getAttribute('data-poster');\n    }\n    /**\n     * Get the current aspect ratio in use\n     */\n\n  }, {\n    key: \"ratio\",\n    get: function get() {\n      if (!this.isVideo) {\n        return null;\n      }\n\n      var ratio = reduceAspectRatio(getAspectRatio.call(this));\n      return is$1.array(ratio) ? ratio.join(':') : ratio;\n    }\n    /**\n     * Set video aspect ratio\n     */\n    ,\n    set: function set(input) {\n      if (!this.isVideo) {\n        this.debug.warn('Aspect ratio can only be set for video');\n        return;\n      }\n\n      if (!is$1.string(input) || !validateRatio(input)) {\n        this.debug.error(\"Invalid aspect ratio specified (\".concat(input, \")\"));\n        return;\n      }\n\n      this.config.ratio = input;\n      setAspectRatio.call(this);\n    }\n    /**\n     * Set the autoplay state\n     * @param {Boolean} input - Whether to autoplay or not\n     */\n\n  }, {\n    key: \"autoplay\",\n    set: function set(input) {\n      var toggle = is$1.boolean(input) ? input : this.config.autoplay;\n      this.config.autoplay = toggle;\n    }\n    /**\n     * Get the current autoplay state\n     */\n    ,\n    get: function get() {\n      return Boolean(this.config.autoplay);\n    }\n  }, {\n    key: \"currentTrack\",\n    set: function set(input) {\n      captions.set.call(this, input, false);\n    }\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    ,\n    get: function get() {\n      var _this$captions = this.captions,\n          toggled = _this$captions.toggled,\n          currentTrack = _this$captions.currentTrack;\n      return toggled ? currentTrack : -1;\n    }\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {String} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n\n  }, {\n    key: \"language\",\n    set: function set(input) {\n      captions.setLanguage.call(this, input, false);\n    }\n    /**\n     * Get the current track's language\n     */\n    ,\n    get: function get() {\n      return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n\n  }, {\n    key: \"pip\",\n    set: function set(input) {\n      // Bail if no support\n      if (!support.pip) {\n        return;\n      } // Toggle based on current state if not passed\n\n\n      var toggle = is$1.boolean(input) ? input : !this.pip; // Toggle based on current state\n      // Safari\n\n      if (is$1.function(this.media.webkitSetPresentationMode)) {\n        this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n      } // Chrome\n\n\n      if (is$1.function(this.media.requestPictureInPicture)) {\n        if (!this.pip && toggle) {\n          this.media.requestPictureInPicture();\n        } else if (this.pip && !toggle) {\n          document.exitPictureInPicture();\n        }\n      }\n    }\n    /**\n     * Get the current picture-in-picture state\n     */\n    ,\n    get: function get() {\n      if (!support.pip) {\n        return null;\n      } // Safari\n\n\n      if (!is$1.empty(this.media.webkitPresentationMode)) {\n        return this.media.webkitPresentationMode === pip.active;\n      } // Chrome\n\n\n      return this.media === document.pictureInPictureElement;\n    }\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n\n  }], [{\n    key: \"supported\",\n\n    /**\n     * Check for support\n     * @param {String} type - Player type (audio/video)\n     * @param {String} provider - Provider (html5/youtube/vimeo)\n     * @param {Boolean} inline - Where player has `playsinline` sttribute\n     */\n    value: function supported(type, provider, inline) {\n      return support.check(type, provider, inline);\n    }\n    /**\n     * Load an SVG sprite into the page\n     * @param {String} url - URL for the SVG sprite\n     * @param {String} [id] - Unique ID\n     */\n\n  }, {\n    key: \"loadSprite\",\n    value: function loadSprite$1(url, id) {\n      return loadSprite(url, id);\n    }\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {Object} options\n     */\n\n  }, {\n    key: \"setup\",\n    value: function setup(selector) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var targets = null;\n\n      if (is$1.string(selector)) {\n        targets = Array.from(document.querySelectorAll(selector));\n      } else if (is$1.nodeList(selector)) {\n        targets = Array.from(selector);\n      } else if (is$1.array(selector)) {\n        targets = selector.filter(is$1.element);\n      }\n\n      if (is$1.empty(targets)) {\n        return null;\n      }\n\n      return targets.map(function (t) {\n        return new Plyr(t, options);\n      });\n    }\n  }]);\n\n  return Plyr;\n}();\n\nPlyr.defaults = cloneDeep(defaults$1);\n\nexport default Plyr;\n","function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ownKeys(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(n),!0).forEach((function(t){_defineProperty(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var defaults={addCSS:!0,thumbWidth:15,watch:!0};function matches(e,t){return function(){return Array.from(document.querySelectorAll(t)).includes(this)}.call(e,t)}function trigger(e,t){if(e&&t){var n=new Event(t,{bubbles:!0});e.dispatchEvent(n)}}var getConstructor=function(e){return null!=e?e.constructor:null},instanceOf=function(e,t){return!!(e&&t&&e instanceof t)},isNullOrUndefined=function(e){return null==e},isObject=function(e){return getConstructor(e)===Object},isNumber=function(e){return getConstructor(e)===Number&&!Number.isNaN(e)},isString=function(e){return getConstructor(e)===String},isBoolean=function(e){return getConstructor(e)===Boolean},isFunction=function(e){return getConstructor(e)===Function},isArray=function(e){return Array.isArray(e)},isNodeList=function(e){return instanceOf(e,NodeList)},isElement=function(e){return instanceOf(e,Element)},isEvent=function(e){return instanceOf(e,Event)},isEmpty=function(e){return isNullOrUndefined(e)||(isString(e)||isArray(e)||isNodeList(e))&&!e.length||isObject(e)&&!Object.keys(e).length},is={nullOrUndefined:isNullOrUndefined,object:isObject,number:isNumber,string:isString,boolean:isBoolean,function:isFunction,array:isArray,nodeList:isNodeList,element:isElement,event:isEvent,empty:isEmpty};function getDecimalPlaces(e){var t=\"\".concat(e).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);return t?Math.max(0,(t[1]?t[1].length:0)-(t[2]?+t[2]:0)):0}function round(e,t){if(1>t){var n=getDecimalPlaces(t);return parseFloat(e.toFixed(n))}return Math.round(e/t)*t}var RangeTouch=function(){function e(t,n){_classCallCheck(this,e),is.element(t)?this.element=t:is.string(t)&&(this.element=document.querySelector(t)),is.element(this.element)&&is.empty(this.element.rangeTouch)&&(this.config=_objectSpread2({},defaults,{},n),this.init())}return _createClass(e,[{key:\"init\",value:function(){e.enabled&&(this.config.addCSS&&(this.element.style.userSelect=\"none\",this.element.style.webKitUserSelect=\"none\",this.element.style.touchAction=\"manipulation\"),this.listeners(!0),this.element.rangeTouch=this)}},{key:\"destroy\",value:function(){e.enabled&&(this.config.addCSS&&(this.element.style.userSelect=\"\",this.element.style.webKitUserSelect=\"\",this.element.style.touchAction=\"\"),this.listeners(!1),this.element.rangeTouch=null)}},{key:\"listeners\",value:function(e){var t=this,n=e?\"addEventListener\":\"removeEventListener\";[\"touchstart\",\"touchmove\",\"touchend\"].forEach((function(e){t.element[n](e,(function(e){return t.set(e)}),!1)}))}},{key:\"get\",value:function(t){if(!e.enabled||!is.event(t))return null;var n,r=t.target,i=t.changedTouches[0],o=parseFloat(r.getAttribute(\"min\"))||0,s=parseFloat(r.getAttribute(\"max\"))||100,u=parseFloat(r.getAttribute(\"step\"))||1,c=r.getBoundingClientRect(),a=100/c.width*(this.config.thumbWidth/2)/100;return 0>(n=100/c.width*(i.clientX-c.left))?n=0:100<n&&(n=100),50>n?n-=(100-2*n)*a:50<n&&(n+=2*(n-50)*a),o+round(n/100*(s-o),u)}},{key:\"set\",value:function(t){e.enabled&&is.event(t)&&!t.target.disabled&&(t.preventDefault(),t.target.value=this.get(t),trigger(t.target,\"touchend\"===t.type?\"change\":\"input\"))}}],[{key:\"setup\",value:function(t){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},r=null;if(is.empty(t)||is.string(t)?r=Array.from(document.querySelectorAll(is.string(t)?t:'input[type=\"range\"]')):is.element(t)?r=[t]:is.nodeList(t)?r=Array.from(t):is.array(t)&&(r=t.filter(is.element)),is.empty(r))return null;var i=_objectSpread2({},defaults,{},n);if(is.string(t)&&i.watch){var o=new MutationObserver((function(n){Array.from(n).forEach((function(n){Array.from(n.addedNodes).forEach((function(n){is.element(n)&&matches(n,t)&&new e(n,i)}))}))}));o.observe(document.body,{childList:!0,subtree:!0})}return r.map((function(t){return new e(t,n)}))}},{key:\"enabled\",get:function(){return\"ontouchstart\"in document.documentElement}}]),e}();export default RangeTouch;","// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = (input) => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = (input) => input === null || typeof input === 'undefined';\nconst isObject = (input) => getConstructor(input) === Object;\nconst isNumber = (input) => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = (input) => getConstructor(input) === String;\nconst isBoolean = (input) => getConstructor(input) === Boolean;\nconst isFunction = (input) => getConstructor(input) === Function;\nconst isArray = (input) => Array.isArray(input);\nconst isWeakMap = (input) => instanceOf(input, WeakMap);\nconst isNodeList = (input) => instanceOf(input, NodeList);\nconst isElement = (input) => instanceOf(input, Element);\nconst isTextNode = (input) => getConstructor(input) === Text;\nconst isEvent = (input) => instanceOf(input, Event);\nconst isKeyboardEvent = (input) => instanceOf(input, KeyboardEvent);\nconst isCue = (input) => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = (input) => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\nconst isPromise = (input) => instanceOf(input, Promise) && isFunction(input.then);\n\nconst isEmpty = (input) =>\n  isNullOrUndefined(input) ||\n  ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n  (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = (input) => {\n  // Accept a URL object\n  if (instanceOf(input, window.URL)) {\n    return true;\n  }\n\n  // Must be string from here\n  if (!isString(input)) {\n    return false;\n  }\n\n  // Add the protocol if required\n  let string = input;\n  if (!input.startsWith('http://') || !input.startsWith('https://')) {\n    string = `http://${input}`;\n  }\n\n  try {\n    return !isEmpty(new URL(string).hostname);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default {\n  nullOrUndefined: isNullOrUndefined,\n  object: isObject,\n  number: isNumber,\n  string: isString,\n  boolean: isBoolean,\n  function: isFunction,\n  array: isArray,\n  weakMap: isWeakMap,\n  nodeList: isNodeList,\n  element: isElement,\n  textNode: isTextNode,\n  event: isEvent,\n  keyboardEvent: isKeyboardEvent,\n  cue: isCue,\n  track: isTrack,\n  promise: isPromise,\n  url: isUrl,\n  empty: isEmpty,\n};\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n  const element = document.createElement('span');\n\n  const events = {\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'transitionend',\n    OTransition: 'oTransitionEnd otransitionend',\n    transition: 'transitionend',\n  };\n\n  const type = Object.keys(events).find((event) => element.style[event] !== undefined);\n\n  return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element, delay) {\n  setTimeout(() => {\n    try {\n      // eslint-disable-next-line no-param-reassign\n      element.hidden = true;\n\n      // eslint-disable-next-line no-unused-expressions\n      element.offsetHeight;\n\n      // eslint-disable-next-line no-param-reassign\n      element.hidden = false;\n    } catch (e) {\n      // Do nothing\n    }\n  }, delay);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n  isIE: /* @cc_on!@ */ false || !!document.documentMode,\n  isEdge: window.navigator.userAgent.includes('Edge'),\n  isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n  isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n  isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n  return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n\n  const source = sources.shift();\n\n  if (!is.object(source)) {\n    return target;\n  }\n\n  Object.keys(source).forEach((key) => {\n    if (is.object(source[key])) {\n      if (!Object.keys(target).includes(key)) {\n        Object.assign(target, { [key]: {} });\n      }\n\n      extend(target[key], source[key]);\n    } else {\n      Object.assign(target, { [key]: source[key] });\n    }\n  });\n\n  return extend(target, ...sources);\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport is from './is';\nimport { extend } from './objects';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n  // Convert `elements` to an array, if necessary.\n  const targets = elements.length ? elements : [elements];\n\n  // Loops backwards to prevent having to clone the wrapper on the\n  // first element (see `child` below).\n  Array.from(targets)\n    .reverse()\n    .forEach((element, index) => {\n      const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n      // Cache the current parent and sibling.\n      const parent = element.parentNode;\n      const sibling = element.nextSibling;\n\n      // Wrap the element (is automatically removed from its current\n      // parent).\n      child.appendChild(element);\n\n      // If the element had a sibling, insert the wrapper before\n      // the sibling to maintain the HTML structure; otherwise, just\n      // append it to the parent.\n      if (sibling) {\n        parent.insertBefore(child, sibling);\n      } else {\n        parent.appendChild(child);\n      }\n    });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n  if (!is.element(element) || is.empty(attributes)) {\n    return;\n  }\n\n  // Assume null and undefined attributes should be left out,\n  // Setting them would otherwise convert them to \"null\" and \"undefined\"\n  Object.entries(attributes)\n    .filter(([, value]) => !is.nullOrUndefined(value))\n    .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n  // Create a new <element>\n  const element = document.createElement(type);\n\n  // Set all passed attributes\n  if (is.object(attributes)) {\n    setAttributes(element, attributes);\n  }\n\n  // Add text node\n  if (is.string(text)) {\n    element.innerText = text;\n  }\n\n  // Return built element\n  return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n  if (!is.element(element) || !is.element(target)) {\n    return;\n  }\n\n  target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n  if (!is.element(parent)) {\n    return;\n  }\n\n  parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n  if (is.nodeList(element) || is.array(element)) {\n    Array.from(element).forEach(removeElement);\n    return;\n  }\n\n  if (!is.element(element) || !is.element(element.parentNode)) {\n    return;\n  }\n\n  element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n  if (!is.element(element)) {\n    return;\n  }\n\n  let { length } = element.childNodes;\n\n  while (length > 0) {\n    element.removeChild(element.lastChild);\n    length -= 1;\n  }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n  if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n    return null;\n  }\n\n  oldChild.parentNode.replaceChild(newChild, oldChild);\n\n  return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n  // For example:\n  // '.test' to { class: 'test' }\n  // '#test' to { id: 'test' }\n  // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n  if (!is.string(sel) || is.empty(sel)) {\n    return {};\n  }\n\n  const attributes = {};\n  const existing = extend({}, existingAttributes);\n\n  sel.split(',').forEach((s) => {\n    // Remove whitespace\n    const selector = s.trim();\n    const className = selector.replace('.', '');\n    const stripped = selector.replace(/[[\\]]/g, '');\n    // Get the parts and value\n    const parts = stripped.split('=');\n    const [key] = parts;\n    const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n    // Get the first character\n    const start = selector.charAt(0);\n\n    switch (start) {\n      case '.':\n        // Add to existing classname\n        if (is.string(existing.class)) {\n          attributes.class = `${existing.class} ${className}`;\n        } else {\n          attributes.class = className;\n        }\n        break;\n\n      case '#':\n        // ID selector\n        attributes.id = selector.replace('#', '');\n        break;\n\n      case '[':\n        // Attribute selector\n        attributes[key] = value;\n\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  return extend(existing, attributes);\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n  if (!is.element(element)) {\n    return;\n  }\n\n  let hide = hidden;\n\n  if (!is.boolean(hide)) {\n    hide = !element.hidden;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  element.hidden = hide;\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n  if (is.nodeList(element)) {\n    return Array.from(element).map((e) => toggleClass(e, className, force));\n  }\n\n  if (is.element(element)) {\n    let method = 'toggle';\n    if (typeof force !== 'undefined') {\n      method = force ? 'add' : 'remove';\n    }\n\n    element.classList[method](className);\n    return element.classList.contains(className);\n  }\n\n  return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n  return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n  const { prototype } = Element;\n\n  function match() {\n    return Array.from(document.querySelectorAll(selector)).includes(this);\n  }\n\n  const method =\n    prototype.matches ||\n    prototype.webkitMatchesSelector ||\n    prototype.mozMatchesSelector ||\n    prototype.msMatchesSelector ||\n    match;\n\n  return method.call(element, selector);\n}\n\n// Closest ancestor element matching selector (also tests element itself)\nexport function closest(element, selector) {\n  const { prototype } = Element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n  function closestElement() {\n    let el = this;\n\n    do {\n      if (matches.matches(el, selector)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  }\n\n  const method = prototype.closest || closestElement;\n\n  return method.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n  return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n  return this.elements.container.querySelector(selector);\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n  if (!is.element(element)) {\n    return;\n  }\n\n  // Set regular focus\n  element.focus({ preventScroll: true });\n\n  // If we want to mimic keyboard focus via tab\n  if (tabFocus) {\n    toggleClass(element, this.config.classNames.tabFocus);\n  }\n}\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n  'audio/ogg': 'vorbis',\n  'audio/wav': '1',\n  'video/webm': 'vp8, vorbis',\n  'video/mp4': 'avc1.42E01E, mp4a.40.2',\n  'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n  // Basic support\n  audio: 'canPlayType' in document.createElement('audio'),\n  video: 'canPlayType' in document.createElement('video'),\n\n  // Check for support\n  // Basic functionality vs full UI\n  check(type, provider, playsinline) {\n    const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n    const api = support[type] || provider !== 'html5';\n    const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n    return {\n      api,\n      ui,\n    };\n  },\n\n  // Picture-in-picture support\n  // Safari & Chrome only currently\n  pip: true,\n\n  // Airplay support\n  // Safari only currently\n  airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n  // Inline playback support\n  // https://webkit.org/blog/6784/new-video-policies-for-ios/\n  playsinline: 'playsInline' in document.createElement('video'),\n\n  // Check for mime type support against a player instance\n  // Credits: http://diveintohtml5.info/everything.html\n  // Related: http://www.leanbackplayer.com/test/h5mt.html\n  mime(input) {\n    if (is.empty(input)) {\n      return false;\n    }\n\n    const [mediaType] = input.split('/');\n    let type = input;\n\n    // Verify we're using HTML5 and there's no media type mismatch\n    if (!this.isHTML5 || mediaType !== this.type) {\n      return false;\n    }\n\n    // Add codec if required\n    if (Object.keys(defaultCodecs).includes(type)) {\n      type += `; codecs=\"${defaultCodecs[input]}\"`;\n    }\n\n    try {\n      return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n    } catch (e) {\n      return false;\n    }\n  },\n\n  // Check for textTracks support\n  textTracks: 'textTracks' in document.createElement('video'),\n\n  // <input type=\"range\"> Sliders\n  rangeInput: (() => {\n    const range = document.createElement('input');\n    range.type = 'range';\n    return range.type === 'range';\n  })(),\n\n  // Touch\n  // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n  touch: 'ontouchstart' in document.documentElement,\n\n  // Detect transitions support\n  transitions: transitionEndEvent !== false,\n\n  // Reduced motion iOS & MacOS setting\n  // https://webkit.org/blog/7551/responsive-design-for-motion/\n  reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n  // Test via a getter in the options object to see if the passive property is accessed\n  let supported = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get() {\n        supported = true;\n        return null;\n      },\n    });\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // Do nothing\n  }\n\n  return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n  // Bail if no element, event, or callback\n  if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n    return;\n  }\n\n  // Allow multiple events\n  const events = event.split(' ');\n  // Build options\n  // Default to just the capture boolean for browsers with no passive listener support\n  let options = capture;\n\n  // If passive events listeners are supported\n  if (supportsPassiveListeners) {\n    options = {\n      // Whether the listener can be passive (i.e. default never prevented)\n      passive,\n      // Whether the listener is a capturing listener or not\n      capture,\n    };\n  }\n\n  // If a single node is passed, bind the event listener\n  events.forEach((type) => {\n    if (this && this.eventListeners && toggle) {\n      // Cache event listener\n      this.eventListeners.push({ element, type, callback, options });\n    }\n\n    element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n  });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n  toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n  toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n  const onceCallback = (...args) => {\n    off(element, events, onceCallback, passive, capture);\n    callback.apply(this, args);\n  };\n\n  toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n  // Bail if no element\n  if (!is.element(element) || is.empty(type)) {\n    return;\n  }\n\n  // Create and dispatch the event\n  const event = new CustomEvent(type, {\n    bubbles,\n    detail: { ...detail, plyr: this },\n  });\n\n  // Dispatch the event\n  element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n  if (this && this.eventListeners) {\n    this.eventListeners.forEach((item) => {\n      const { element, type, callback, options } = item;\n      element.removeEventListener(type, callback, options);\n    });\n\n    this.eventListeners = [];\n  }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n  return new Promise((resolve) =>\n    this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve),\n  ).then(() => {});\n}\n","import is from './is';\n/**\n * Silence a Promise-like object.\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n * @param  {Object} value An object that may or may not be `Promise`-like.\n */\nexport function silencePromise(value) {\n  if (is.promise(value)) {\n    value.then(null, () => {});\n  }\n}\n\nexport default { silencePromise };\n","// ==========================================================================\n// Style utils\n// ==========================================================================\n\nimport is from './is';\n\nexport function validateRatio(input) {\n  if (!is.array(input) && (!is.string(input) || !input.includes(':'))) {\n    return false;\n  }\n\n  const ratio = is.array(input) ? input : input.split(':');\n\n  return ratio.map(Number).every(is.number);\n}\n\nexport function reduceAspectRatio(ratio) {\n  if (!is.array(ratio) || !ratio.every(is.number)) {\n    return null;\n  }\n\n  const [width, height] = ratio;\n  const getDivider = (w, h) => (h === 0 ? w : getDivider(h, w % h));\n  const divider = getDivider(width, height);\n\n  return [width / divider, height / divider];\n}\n\nexport function getAspectRatio(input) {\n  const parse = (ratio) => (validateRatio(ratio) ? ratio.split(':').map(Number) : null);\n  // Try provided ratio\n  let ratio = parse(input);\n\n  // Get from config\n  if (ratio === null) {\n    ratio = parse(this.config.ratio);\n  }\n\n  // Get from embed\n  if (ratio === null && !is.empty(this.embed) && is.array(this.embed.ratio)) {\n    ({ ratio } = this.embed);\n  }\n\n  // Get from HTML5 video\n  if (ratio === null && this.isHTML5) {\n    const { videoWidth, videoHeight } = this.media;\n    ratio = reduceAspectRatio([videoWidth, videoHeight]);\n  }\n\n  return ratio;\n}\n\n// Set aspect ratio for responsive container\nexport function setAspectRatio(input) {\n  if (!this.isVideo) {\n    return {};\n  }\n\n  const { wrapper } = this.elements;\n  const ratio = getAspectRatio.call(this, input);\n  const [w, h] = is.array(ratio) ? ratio : [0, 0];\n  const padding = (100 / w) * h;\n\n  wrapper.style.paddingBottom = `${padding}%`;\n\n  // For Vimeo we have an extra <div> to hide the standard controls and UI\n  if (this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {\n    const height = (100 / this.media.offsetWidth) * parseInt(window.getComputedStyle(this.media).paddingBottom, 10);\n    const offset = (height - padding) / (height / 50);\n\n    if (this.fullscreen.active) {\n      wrapper.style.paddingBottom = null;\n    } else {\n      this.media.style.transform = `translateY(-${offset}%)`;\n    }\n  } else if (this.isHTML5) {\n    wrapper.classList.toggle(this.config.classNames.videoFixedRatio, ratio !== null);\n  }\n\n  return { padding, ratio };\n}\n\nexport default { setAspectRatio };\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport { silencePromise } from './utils/promise';\nimport { setAspectRatio } from './utils/style';\n\nconst html5 = {\n  getSources() {\n    if (!this.isHTML5) {\n      return [];\n    }\n\n    const sources = Array.from(this.media.querySelectorAll('source'));\n\n    // Filter out unsupported sources (if type is specified)\n    return sources.filter((source) => {\n      const type = source.getAttribute('type');\n\n      if (is.empty(type)) {\n        return true;\n      }\n\n      return support.mime.call(this, type);\n    });\n  },\n\n  // Get quality levels\n  getQualityOptions() {\n    // Whether we're forcing all options (e.g. for streaming)\n    if (this.config.quality.forced) {\n      return this.config.quality.options;\n    }\n\n    // Get sizes from <source> elements\n    return html5.getSources\n      .call(this)\n      .map((source) => Number(source.getAttribute('size')))\n      .filter(Boolean);\n  },\n\n  setup() {\n    if (!this.isHTML5) {\n      return;\n    }\n\n    const player = this;\n\n    // Set speed options from config\n    player.options.speed = player.config.speed.options;\n\n    // Set aspect ratio if fixed\n    if (!is.empty(this.config.ratio)) {\n      setAspectRatio.call(player);\n    }\n\n    // Quality\n    Object.defineProperty(player.media, 'quality', {\n      get() {\n        // Get sources\n        const sources = html5.getSources.call(player);\n        const source = sources.find((s) => s.getAttribute('src') === player.source);\n\n        // Return size, if match is found\n        return source && Number(source.getAttribute('size'));\n      },\n      set(input) {\n        if (player.quality === input) {\n          return;\n        }\n\n        // If we're using an an external handler...\n        if (player.config.quality.forced && is.function(player.config.quality.onChange)) {\n          player.config.quality.onChange(input);\n        } else {\n          // Get sources\n          const sources = html5.getSources.call(player);\n          // Get first match for requested size\n          const source = sources.find((s) => Number(s.getAttribute('size')) === input);\n\n          // No matching source found\n          if (!source) {\n            return;\n          }\n\n          // Get current state\n          const { currentTime, paused, preload, readyState, playbackRate } = player.media;\n\n          // Set new source\n          player.media.src = source.getAttribute('src');\n\n          // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n          if (preload !== 'none' || readyState) {\n            // Restore time\n            player.once('loadedmetadata', () => {\n              player.speed = playbackRate;\n              player.currentTime = currentTime;\n\n              // Resume playing\n              if (!paused) {\n                silencePromise(player.play());\n              }\n            });\n\n            // Load new source\n            player.media.load();\n          }\n        }\n\n        // Trigger change event\n        triggerEvent.call(player, player.media, 'qualitychange', false, {\n          quality: input,\n        });\n      },\n    });\n  },\n\n  // Cancel current network requests\n  // See https://github.com/sampotts/plyr/issues/174\n  cancelRequests() {\n    if (!this.isHTML5) {\n      return;\n    }\n\n    // Remove child sources\n    removeElement(html5.getSources.call(this));\n\n    // Set blank video src attribute\n    // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n    // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n    this.media.setAttribute('src', this.config.blankVideo);\n\n    // Load the new empty source\n    // This will cancel existing requests\n    // See https://github.com/sampotts/plyr/issues/174\n    this.media.load();\n\n    // Debugging\n    this.debug.log('Cancelled network requests');\n  },\n};\n\nexport default html5;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n  if (!is.array(array)) {\n    return array;\n  }\n\n  return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n  if (!is.array(array) || !array.length) {\n    return null;\n  }\n\n  return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n  return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n  if (is.empty(input)) {\n    return input;\n  }\n\n  return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n  if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n    return 0;\n  }\n\n  return ((current / max) * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport const replaceAll = (input = '', find = '', replace = '') =>\n  input.replace(new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'), replace.toString());\n\n// Convert to title case\nexport const toTitleCase = (input = '') =>\n  input.toString().replace(/\\w\\S*/g, (text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n  let string = input.toString();\n\n  // Convert kebab case\n  string = replaceAll(string, '-', ' ');\n\n  // Convert snake case\n  string = replaceAll(string, '_', ' ');\n\n  // Convert to title case\n  string = toTitleCase(string);\n\n  // Convert to pascal case\n  return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n  let string = input.toString();\n\n  // Convert to pascal case\n  string = toPascalCase(string);\n\n  // Convert first character to lowercase\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n  const fragment = document.createDocumentFragment();\n  const element = document.createElement('div');\n  fragment.appendChild(element);\n  element.innerHTML = source;\n  return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n  const wrapper = document.createElement('div');\n  wrapper.appendChild(element);\n  return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './is';\nimport { getDeep } from './objects';\nimport { replaceAll } from './strings';\n\n// Skip i18n for abbreviations and brand names\nconst resources = {\n  pip: 'PIP',\n  airplay: 'AirPlay',\n  html5: 'HTML5',\n  vimeo: 'Vimeo',\n  youtube: 'YouTube',\n};\n\nconst i18n = {\n  get(key = '', config = {}) {\n    if (is.empty(key) || is.empty(config)) {\n      return '';\n    }\n\n    let string = getDeep(config.i18n, key);\n\n    if (is.empty(string)) {\n      if (Object.keys(resources).includes(key)) {\n        return resources[key];\n      }\n\n      return '';\n    }\n\n    const replace = {\n      '{seektime}': config.seekTime,\n      '{title}': config.title,\n    };\n\n    Object.entries(replace).forEach(([k, v]) => {\n      string = replaceAll(string, k, v);\n    });\n\n    return string;\n  },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n  constructor(player) {\n    this.enabled = player.config.storage.enabled;\n    this.key = player.config.storage.key;\n  }\n\n  // Check for actual support (see if we can use it)\n  static get supported() {\n    try {\n      if (!('localStorage' in window)) {\n        return false;\n      }\n\n      const test = '___test';\n\n      // Try to use it (it might be disabled, e.g. user is in private mode)\n      // see: https://github.com/sampotts/plyr/issues/131\n      window.localStorage.setItem(test, test);\n      window.localStorage.removeItem(test);\n\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  get = (key) => {\n    if (!Storage.supported || !this.enabled) {\n      return null;\n    }\n\n    const store = window.localStorage.getItem(this.key);\n\n    if (is.empty(store)) {\n      return null;\n    }\n\n    const json = JSON.parse(store);\n\n    return is.string(key) && key.length ? json[key] : json;\n  };\n\n  set = (object) => {\n    // Bail if we don't have localStorage support or it's disabled\n    if (!Storage.supported || !this.enabled) {\n      return;\n    }\n\n    // Can only store objectst\n    if (!is.object(object)) {\n      return;\n    }\n\n    // Get current storage\n    let storage = this.get();\n\n    // Default to empty object\n    if (is.empty(storage)) {\n      storage = {};\n    }\n\n    // Update the working copy of the values\n    extend(storage, object);\n\n    // Update storage\n    window.localStorage.setItem(this.key, JSON.stringify(storage));\n  };\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n  return new Promise((resolve, reject) => {\n    try {\n      const request = new XMLHttpRequest();\n\n      // Check for CORS support\n      if (!('withCredentials' in request)) {\n        return;\n      }\n\n      request.addEventListener('load', () => {\n        if (responseType === 'text') {\n          try {\n            resolve(JSON.parse(request.responseText));\n          } catch (e) {\n            resolve(request.responseText);\n          }\n        } else {\n          resolve(request.response);\n        }\n      });\n\n      request.addEventListener('error', () => {\n        throw new Error(request.status);\n      });\n\n      request.open('GET', url, true);\n\n      // Set the required response type\n      request.responseType = responseType;\n\n      request.send();\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n  if (!is.string(url)) {\n    return;\n  }\n\n  const prefix = 'cache';\n  const hasId = is.string(id);\n  let isCached = false;\n  const exists = () => document.getElementById(id) !== null;\n\n  const update = (container, data) => {\n    // eslint-disable-next-line no-param-reassign\n    container.innerHTML = data;\n\n    // Check again incase of race condition\n    if (hasId && exists()) {\n      return;\n    }\n\n    // Inject the SVG to the body\n    document.body.insertAdjacentElement('afterbegin', container);\n  };\n\n  // Only load once if ID set\n  if (!hasId || !exists()) {\n    const useStorage = Storage.supported;\n    // Create container\n    const container = document.createElement('div');\n    container.setAttribute('hidden', '');\n\n    if (hasId) {\n      container.setAttribute('id', id);\n    }\n\n    // Check in cache\n    if (useStorage) {\n      const cached = window.localStorage.getItem(`${prefix}-${id}`);\n      isCached = cached !== null;\n\n      if (isCached) {\n        const data = JSON.parse(cached);\n        update(container, data.content);\n      }\n    }\n\n    // Get the sprite\n    fetch(url)\n      .then((result) => {\n        if (is.empty(result)) {\n          return;\n        }\n\n        if (useStorage) {\n          window.localStorage.setItem(\n            `${prefix}-${id}`,\n            JSON.stringify({\n              content: result,\n            }),\n          );\n        }\n\n        update(container, result);\n      })\n      .catch(() => {});\n  }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = (value) => Math.trunc((value / 60 / 60) % 60, 10);\nexport const getMinutes = (value) => Math.trunc((value / 60) % 60, 10);\nexport const getSeconds = (value) => Math.trunc(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n  // Bail if the value isn't a number\n  if (!is.number(time)) {\n    return formatTime(undefined, displayHours, inverted);\n  }\n\n  // Format time component to add leading zero\n  const format = (value) => `0${value}`.slice(-2);\n  // Breakdown to hours, mins, secs\n  let hours = getHours(time);\n  const mins = getMinutes(time);\n  const secs = getSeconds(time);\n\n  // Do we need to display hours?\n  if (displayHours || hours > 0) {\n    hours = `${hours}:`;\n  } else {\n    hours = '';\n  }\n\n  // Render\n  return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport RangeTouch from 'rangetouch';\n\nimport captions from './captions';\nimport html5 from './html5';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n  createElement,\n  emptyElement,\n  getAttributesFromSelector,\n  getElement,\n  getElements,\n  hasClass,\n  matches,\n  removeElement,\n  setAttributes,\n  setFocus,\n  toggleClass,\n  toggleHidden,\n} from './utils/elements';\nimport { off, on } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadSprite from './utils/load-sprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n  // Get icon URL\n  getIconUrl() {\n    const url = new URL(this.config.iconUrl, window.location);\n    const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n    return {\n      url: this.config.iconUrl,\n      cors,\n    };\n  },\n\n  // Find the UI controls\n  findElements() {\n    try {\n      this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n      // Buttons\n      this.elements.buttons = {\n        play: getElements.call(this, this.config.selectors.buttons.play),\n        pause: getElement.call(this, this.config.selectors.buttons.pause),\n        restart: getElement.call(this, this.config.selectors.buttons.restart),\n        rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n        fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n        mute: getElement.call(this, this.config.selectors.buttons.mute),\n        pip: getElement.call(this, this.config.selectors.buttons.pip),\n        airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n        settings: getElement.call(this, this.config.selectors.buttons.settings),\n        captions: getElement.call(this, this.config.selectors.buttons.captions),\n        fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n      };\n\n      // Progress\n      this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n      // Inputs\n      this.elements.inputs = {\n        seek: getElement.call(this, this.config.selectors.inputs.seek),\n        volume: getElement.call(this, this.config.selectors.inputs.volume),\n      };\n\n      // Display\n      this.elements.display = {\n        buffer: getElement.call(this, this.config.selectors.display.buffer),\n        currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n        duration: getElement.call(this, this.config.selectors.display.duration),\n      };\n\n      // Seek tooltip\n      if (is.element(this.elements.progress)) {\n        this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`);\n      }\n\n      return true;\n    } catch (error) {\n      // Log it\n      this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n      // Restore native video controls\n      this.toggleNativeControls(true);\n\n      return false;\n    }\n  },\n\n  // Create <svg> icon\n  createIcon(type, attributes) {\n    const namespace = 'http://www.w3.org/2000/svg';\n    const iconUrl = controls.getIconUrl.call(this);\n    const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n    // Create <svg>\n    const icon = document.createElementNS(namespace, 'svg');\n    setAttributes(\n      icon,\n      extend(attributes, {\n        'aria-hidden': 'true',\n        focusable: 'false',\n      }),\n    );\n\n    // Create the <use> to reference sprite\n    const use = document.createElementNS(namespace, 'use');\n    const path = `${iconPath}-${type}`;\n\n    // Set `href` attributes\n    // https://github.com/sampotts/plyr/issues/460\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n    if ('href' in use) {\n      use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n    }\n\n    // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n    use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n\n    // Add <use> to <svg>\n    icon.appendChild(use);\n\n    return icon;\n  },\n\n  // Create hidden text label\n  createLabel(key, attr = {}) {\n    const text = i18n.get(key, this.config);\n    const attributes = { ...attr, class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' ') };\n\n    return createElement('span', attributes, text);\n  },\n\n  // Create a badge\n  createBadge(text) {\n    if (is.empty(text)) {\n      return null;\n    }\n\n    const badge = createElement('span', {\n      class: this.config.classNames.menu.value,\n    });\n\n    badge.appendChild(\n      createElement(\n        'span',\n        {\n          class: this.config.classNames.menu.badge,\n        },\n        text,\n      ),\n    );\n\n    return badge;\n  },\n\n  // Create a <button>\n  createButton(buttonType, attr) {\n    const attributes = extend({}, attr);\n    let type = toCamelCase(buttonType);\n\n    const props = {\n      element: 'button',\n      toggle: false,\n      label: null,\n      icon: null,\n      labelPressed: null,\n      iconPressed: null,\n    };\n\n    ['element', 'icon', 'label'].forEach((key) => {\n      if (Object.keys(attributes).includes(key)) {\n        props[key] = attributes[key];\n        delete attributes[key];\n      }\n    });\n\n    // Default to 'button' type to prevent form submission\n    if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n      attributes.type = 'button';\n    }\n\n    // Set class name\n    if (Object.keys(attributes).includes('class')) {\n      if (!attributes.class.split(' ').some((c) => c === this.config.classNames.control)) {\n        extend(attributes, {\n          class: `${attributes.class} ${this.config.classNames.control}`,\n        });\n      }\n    } else {\n      attributes.class = this.config.classNames.control;\n    }\n\n    // Large play button\n    switch (buttonType) {\n      case 'play':\n        props.toggle = true;\n        props.label = 'play';\n        props.labelPressed = 'pause';\n        props.icon = 'play';\n        props.iconPressed = 'pause';\n        break;\n\n      case 'mute':\n        props.toggle = true;\n        props.label = 'mute';\n        props.labelPressed = 'unmute';\n        props.icon = 'volume';\n        props.iconPressed = 'muted';\n        break;\n\n      case 'captions':\n        props.toggle = true;\n        props.label = 'enableCaptions';\n        props.labelPressed = 'disableCaptions';\n        props.icon = 'captions-off';\n        props.iconPressed = 'captions-on';\n        break;\n\n      case 'fullscreen':\n        props.toggle = true;\n        props.label = 'enterFullscreen';\n        props.labelPressed = 'exitFullscreen';\n        props.icon = 'enter-fullscreen';\n        props.iconPressed = 'exit-fullscreen';\n        break;\n\n      case 'play-large':\n        attributes.class += ` ${this.config.classNames.control}--overlaid`;\n        type = 'play';\n        props.label = 'play';\n        props.icon = 'play';\n        break;\n\n      default:\n        if (is.empty(props.label)) {\n          props.label = type;\n        }\n        if (is.empty(props.icon)) {\n          props.icon = buttonType;\n        }\n    }\n\n    const button = createElement(props.element);\n\n    // Setup toggle icon and labels\n    if (props.toggle) {\n      // Icon\n      button.appendChild(\n        controls.createIcon.call(this, props.iconPressed, {\n          class: 'icon--pressed',\n        }),\n      );\n      button.appendChild(\n        controls.createIcon.call(this, props.icon, {\n          class: 'icon--not-pressed',\n        }),\n      );\n\n      // Label/Tooltip\n      button.appendChild(\n        controls.createLabel.call(this, props.labelPressed, {\n          class: 'label--pressed',\n        }),\n      );\n      button.appendChild(\n        controls.createLabel.call(this, props.label, {\n          class: 'label--not-pressed',\n        }),\n      );\n    } else {\n      button.appendChild(controls.createIcon.call(this, props.icon));\n      button.appendChild(controls.createLabel.call(this, props.label));\n    }\n\n    // Merge and set attributes\n    extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n    setAttributes(button, attributes);\n\n    // We have multiple play buttons\n    if (type === 'play') {\n      if (!is.array(this.elements.buttons[type])) {\n        this.elements.buttons[type] = [];\n      }\n\n      this.elements.buttons[type].push(button);\n    } else {\n      this.elements.buttons[type] = button;\n    }\n\n    return button;\n  },\n\n  // Create an <input type='range'>\n  createRange(type, attributes) {\n    // Seek input\n    const input = createElement(\n      'input',\n      extend(\n        getAttributesFromSelector(this.config.selectors.inputs[type]),\n        {\n          type: 'range',\n          min: 0,\n          max: 100,\n          step: 0.01,\n          value: 0,\n          autocomplete: 'off',\n          // A11y fixes for https://github.com/sampotts/plyr/issues/905\n          role: 'slider',\n          'aria-label': i18n.get(type, this.config),\n          'aria-valuemin': 0,\n          'aria-valuemax': 100,\n          'aria-valuenow': 0,\n        },\n        attributes,\n      ),\n    );\n\n    this.elements.inputs[type] = input;\n\n    // Set the fill for webkit now\n    controls.updateRangeFill.call(this, input);\n\n    // Improve support on touch devices\n    RangeTouch.setup(input);\n\n    return input;\n  },\n\n  // Create a <progress>\n  createProgress(type, attributes) {\n    const progress = createElement(\n      'progress',\n      extend(\n        getAttributesFromSelector(this.config.selectors.display[type]),\n        {\n          min: 0,\n          max: 100,\n          value: 0,\n          role: 'progressbar',\n          'aria-hidden': true,\n        },\n        attributes,\n      ),\n    );\n\n    // Create the label inside\n    if (type !== 'volume') {\n      progress.appendChild(createElement('span', null, '0'));\n\n      const suffixKey = {\n        played: 'played',\n        buffer: 'buffered',\n      }[type];\n      const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n      progress.innerText = `% ${suffix.toLowerCase()}`;\n    }\n\n    this.elements.display[type] = progress;\n\n    return progress;\n  },\n\n  // Create time display\n  createTime(type, attrs) {\n    const attributes = getAttributesFromSelector(this.config.selectors.display[type], attrs);\n\n    const container = createElement(\n      'div',\n      extend(attributes, {\n        class: `${attributes.class ? attributes.class : ''} ${this.config.classNames.display.time} `.trim(),\n        'aria-label': i18n.get(type, this.config),\n      }),\n      '00:00',\n    );\n\n    // Reference for updates\n    this.elements.display[type] = container;\n\n    return container;\n  },\n\n  // Bind keyboard shortcuts for a menu item\n  // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n  bindMenuItemShortcuts(menuItem, type) {\n    // Navigate through menus via arrow keys and space\n    on.call(\n      this,\n      menuItem,\n      'keydown keyup',\n      (event) => {\n        // We only care about space and ⬆️ ⬇️️ ➡️\n        if (![32, 38, 39, 40].includes(event.which)) {\n          return;\n        }\n\n        // Prevent play / seek\n        event.preventDefault();\n        event.stopPropagation();\n\n        // We're just here to prevent the keydown bubbling\n        if (event.type === 'keydown') {\n          return;\n        }\n\n        const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n        // Show the respective menu\n        if (!isRadioButton && [32, 39].includes(event.which)) {\n          controls.showMenuPanel.call(this, type, true);\n        } else {\n          let target;\n\n          if (event.which !== 32) {\n            if (event.which === 40 || (isRadioButton && event.which === 39)) {\n              target = menuItem.nextElementSibling;\n\n              if (!is.element(target)) {\n                target = menuItem.parentNode.firstElementChild;\n              }\n            } else {\n              target = menuItem.previousElementSibling;\n\n              if (!is.element(target)) {\n                target = menuItem.parentNode.lastElementChild;\n              }\n            }\n\n            setFocus.call(this, target, true);\n          }\n        }\n      },\n      false,\n    );\n\n    // Enter will fire a `click` event but we still need to manage focus\n    // So we bind to keyup which fires after and set focus here\n    on.call(this, menuItem, 'keyup', (event) => {\n      if (event.which !== 13) {\n        return;\n      }\n\n      controls.focusFirstMenuItem.call(this, null, true);\n    });\n  },\n\n  // Create a settings menu item\n  createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n    const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n    const menuItem = createElement(\n      'button',\n      extend(attributes, {\n        type: 'button',\n        role: 'menuitemradio',\n        class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n        'aria-checked': checked,\n        value,\n      }),\n    );\n\n    const flex = createElement('span');\n\n    // We have to set as HTML incase of special characters\n    flex.innerHTML = title;\n\n    if (is.element(badge)) {\n      flex.appendChild(badge);\n    }\n\n    menuItem.appendChild(flex);\n\n    // Replicate radio button behaviour\n    Object.defineProperty(menuItem, 'checked', {\n      enumerable: true,\n      get() {\n        return menuItem.getAttribute('aria-checked') === 'true';\n      },\n      set(check) {\n        // Ensure exclusivity\n        if (check) {\n          Array.from(menuItem.parentNode.children)\n            .filter((node) => matches(node, '[role=\"menuitemradio\"]'))\n            .forEach((node) => node.setAttribute('aria-checked', 'false'));\n        }\n\n        menuItem.setAttribute('aria-checked', check ? 'true' : 'false');\n      },\n    });\n\n    this.listeners.bind(\n      menuItem,\n      'click keyup',\n      (event) => {\n        if (is.keyboardEvent(event) && event.which !== 32) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        menuItem.checked = true;\n\n        switch (type) {\n          case 'language':\n            this.currentTrack = Number(value);\n            break;\n\n          case 'quality':\n            this.quality = value;\n            break;\n\n          case 'speed':\n            this.speed = parseFloat(value);\n            break;\n\n          default:\n            break;\n        }\n\n        controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n      },\n      type,\n      false,\n    );\n\n    controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n    list.appendChild(menuItem);\n  },\n\n  // Format a time for display\n  formatTime(time = 0, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n      return time;\n    }\n\n    // Always display hours if duration is over an hour\n    const forceHours = getHours(this.duration) > 0;\n\n    return formatTime(time, forceHours, inverted);\n  },\n\n  // Update the displayed time\n  updateTimeDisplay(target = null, time = 0, inverted = false) {\n    // Bail if there's no element to display or the value isn't a number\n    if (!is.element(target) || !is.number(time)) {\n      return;\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    target.innerText = controls.formatTime(time, inverted);\n  },\n\n  // Update volume UI and storage\n  updateVolume() {\n    if (!this.supported.ui) {\n      return;\n    }\n\n    // Update range\n    if (is.element(this.elements.inputs.volume)) {\n      controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n    }\n\n    // Update mute state\n    if (is.element(this.elements.buttons.mute)) {\n      this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n    }\n  },\n\n  // Update seek value and lower fill\n  setRange(target, value = 0) {\n    if (!is.element(target)) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    target.value = value;\n\n    // Webkit range fill\n    controls.updateRangeFill.call(this, target);\n  },\n\n  // Update <progress> elements\n  updateProgress(event) {\n    if (!this.supported.ui || !is.event(event)) {\n      return;\n    }\n\n    let value = 0;\n\n    const setProgress = (target, input) => {\n      const val = is.number(input) ? input : 0;\n      const progress = is.element(target) ? target : this.elements.display.buffer;\n\n      // Update value and label\n      if (is.element(progress)) {\n        progress.value = val;\n\n        // Update text label inside\n        const label = progress.getElementsByTagName('span')[0];\n        if (is.element(label)) {\n          label.childNodes[0].nodeValue = val;\n        }\n      }\n    };\n\n    if (event) {\n      switch (event.type) {\n        // Video playing\n        case 'timeupdate':\n        case 'seeking':\n        case 'seeked':\n          value = getPercentage(this.currentTime, this.duration);\n\n          // Set seek range value only if it's a 'natural' time event\n          if (event.type === 'timeupdate') {\n            controls.setRange.call(this, this.elements.inputs.seek, value);\n          }\n\n          break;\n\n        // Check buffer status\n        case 'playing':\n        case 'progress':\n          setProgress(this.elements.display.buffer, this.buffered * 100);\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  },\n\n  // Webkit polyfill for lower fill range\n  updateRangeFill(target) {\n    // Get range from event if event passed\n    const range = is.event(target) ? target.target : target;\n\n    // Needs to be a valid <input type='range'>\n    if (!is.element(range) || range.getAttribute('type') !== 'range') {\n      return;\n    }\n\n    // Set aria values for https://github.com/sampotts/plyr/issues/905\n    if (matches(range, this.config.selectors.inputs.seek)) {\n      range.setAttribute('aria-valuenow', this.currentTime);\n      const currentTime = controls.formatTime(this.currentTime);\n      const duration = controls.formatTime(this.duration);\n      const format = i18n.get('seekLabel', this.config);\n      range.setAttribute(\n        'aria-valuetext',\n        format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n      );\n    } else if (matches(range, this.config.selectors.inputs.volume)) {\n      const percent = range.value * 100;\n      range.setAttribute('aria-valuenow', percent);\n      range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n    } else {\n      range.setAttribute('aria-valuenow', range.value);\n    }\n\n    // WebKit only\n    if (!browser.isWebkit) {\n      return;\n    }\n\n    // Set CSS custom property\n    range.style.setProperty('--value', `${(range.value / range.max) * 100}%`);\n  },\n\n  // Update hover tooltip for seeking\n  updateSeekTooltip(event) {\n    // Bail if setting not true\n    if (\n      !this.config.tooltips.seek ||\n      !is.element(this.elements.inputs.seek) ||\n      !is.element(this.elements.display.seekTooltip) ||\n      this.duration === 0\n    ) {\n      return;\n    }\n\n    const visible = `${this.config.classNames.tooltip}--visible`;\n    const toggle = (show) => toggleClass(this.elements.display.seekTooltip, visible, show);\n\n    // Hide on touch\n    if (this.touch) {\n      toggle(false);\n      return;\n    }\n\n    // Determine percentage, if already visible\n    let percent = 0;\n    const clientRect = this.elements.progress.getBoundingClientRect();\n\n    if (is.event(event)) {\n      percent = (100 / clientRect.width) * (event.pageX - clientRect.left);\n    } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n      percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n    } else {\n      return;\n    }\n\n    // Set bounds\n    if (percent < 0) {\n      percent = 0;\n    } else if (percent > 100) {\n      percent = 100;\n    }\n\n    // Display the time a click would seek to\n    controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, (this.duration / 100) * percent);\n\n    // Set position\n    this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n    // Show/hide the tooltip\n    // If the event is a moues in/out and percentage is inside bounds\n    if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n      toggle(event.type === 'mouseenter');\n    }\n  },\n\n  // Handle time change event\n  timeUpdate(event) {\n    // Only invert if only one time element is displayed and used for both duration and currentTime\n    const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n    // Duration\n    controls.updateTimeDisplay.call(\n      this,\n      this.elements.display.currentTime,\n      invert ? this.duration - this.currentTime : this.currentTime,\n      invert,\n    );\n\n    // Ignore updates while seeking\n    if (event && event.type === 'timeupdate' && this.media.seeking) {\n      return;\n    }\n\n    // Playing progress\n    controls.updateProgress.call(this, event);\n  },\n\n  // Show the duration on metadataloaded or durationchange events\n  durationUpdate() {\n    // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n    if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n      return;\n    }\n\n    // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n    // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n    // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n    // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n    if (this.duration >= 2 ** 32) {\n      toggleHidden(this.elements.display.currentTime, true);\n      toggleHidden(this.elements.progress, true);\n      return;\n    }\n\n    // Update ARIA values\n    if (is.element(this.elements.inputs.seek)) {\n      this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n    }\n\n    // If there's a spot to display duration\n    const hasDuration = is.element(this.elements.display.duration);\n\n    // If there's only one time display, display duration there\n    if (!hasDuration && this.config.displayDuration && this.paused) {\n      controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n    }\n\n    // If there's a duration element, update content\n    if (hasDuration) {\n      controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n    }\n\n    // Update the tooltip (if visible)\n    controls.updateSeekTooltip.call(this);\n  },\n\n  // Hide/show a tab\n  toggleMenuButton(setting, toggle) {\n    toggleHidden(this.elements.settings.buttons[setting], !toggle);\n  },\n\n  // Update the selected setting\n  updateSetting(setting, container, input) {\n    const pane = this.elements.settings.panels[setting];\n    let value = null;\n    let list = container;\n\n    if (setting === 'captions') {\n      value = this.currentTrack;\n    } else {\n      value = !is.empty(input) ? input : this[setting];\n\n      // Get default\n      if (is.empty(value)) {\n        value = this.config[setting].default;\n      }\n\n      // Unsupported value\n      if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n        this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n        return;\n      }\n\n      // Disabled value\n      if (!this.config[setting].options.includes(value)) {\n        this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n        return;\n      }\n    }\n\n    // Get the list if we need to\n    if (!is.element(list)) {\n      list = pane && pane.querySelector('[role=\"menu\"]');\n    }\n\n    // If there's no list it means it's not been rendered...\n    if (!is.element(list)) {\n      return;\n    }\n\n    // Update the label\n    const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n    label.innerHTML = controls.getLabel.call(this, setting, value);\n\n    // Find the radio option and check it\n    const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n    if (is.element(target)) {\n      target.checked = true;\n    }\n  },\n\n  // Translate a value into a nice label\n  getLabel(setting, value) {\n    switch (setting) {\n      case 'speed':\n        return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n      case 'quality':\n        if (is.number(value)) {\n          const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n          if (!label.length) {\n            return `${value}p`;\n          }\n\n          return label;\n        }\n\n        return toTitleCase(value);\n\n      case 'captions':\n        return captions.getLabel.call(this);\n\n      default:\n        return null;\n    }\n  },\n\n  // Set the quality menu\n  setQualityMenu(options) {\n    // Menu required\n    if (!is.element(this.elements.settings.panels.quality)) {\n      return;\n    }\n\n    const type = 'quality';\n    const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n    // Set options if passed and filter based on uniqueness and config\n    if (is.array(options)) {\n      this.options.quality = dedupe(options).filter((quality) => this.config.quality.options.includes(quality));\n    }\n\n    // Toggle the pane and tab\n    const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n    controls.toggleMenuButton.call(this, type, toggle);\n\n    // Empty the menu\n    emptyElement(list);\n\n    // Check if we need to toggle the parent\n    controls.checkMenu.call(this);\n\n    // If we're hiding, nothing more to do\n    if (!toggle) {\n      return;\n    }\n\n    // Get the badge HTML for HD, 4K etc\n    const getBadge = (quality) => {\n      const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n      if (!label.length) {\n        return null;\n      }\n\n      return controls.createBadge.call(this, label);\n    };\n\n    // Sort options by the config and then render options\n    this.options.quality\n      .sort((a, b) => {\n        const sorting = this.config.quality.options;\n        return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n      })\n      .forEach((quality) => {\n        controls.createMenuItem.call(this, {\n          value: quality,\n          list,\n          type,\n          title: controls.getLabel.call(this, 'quality', quality),\n          badge: getBadge(quality),\n        });\n      });\n\n    controls.updateSetting.call(this, type, list);\n  },\n\n  // Set the looping options\n  /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n  // Get current selected caption language\n  // TODO: rework this to user the getter in the API?\n\n  // Set a list of available captions languages\n  setCaptionsMenu() {\n    // Menu required\n    if (!is.element(this.elements.settings.panels.captions)) {\n      return;\n    }\n\n    // TODO: Captions or language? Currently it's mixed\n    const type = 'captions';\n    const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n    const tracks = captions.getTracks.call(this);\n    const toggle = Boolean(tracks.length);\n\n    // Toggle the pane and tab\n    controls.toggleMenuButton.call(this, type, toggle);\n\n    // Empty the menu\n    emptyElement(list);\n\n    // Check if we need to toggle the parent\n    controls.checkMenu.call(this);\n\n    // If there's no captions, bail\n    if (!toggle) {\n      return;\n    }\n\n    // Generate options data\n    const options = tracks.map((track, value) => ({\n      value,\n      checked: this.captions.toggled && this.currentTrack === value,\n      title: captions.getLabel.call(this, track),\n      badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n      list,\n      type: 'language',\n    }));\n\n    // Add the \"Disabled\" option to turn off captions\n    options.unshift({\n      value: -1,\n      checked: !this.captions.toggled,\n      title: i18n.get('disabled', this.config),\n      list,\n      type: 'language',\n    });\n\n    // Generate options\n    options.forEach(controls.createMenuItem.bind(this));\n\n    controls.updateSetting.call(this, type, list);\n  },\n\n  // Set a list of available captions languages\n  setSpeedMenu() {\n    // Menu required\n    if (!is.element(this.elements.settings.panels.speed)) {\n      return;\n    }\n\n    const type = 'speed';\n    const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n    // Filter out invalid speeds\n    this.options.speed = this.options.speed.filter((o) => o >= this.minimumSpeed && o <= this.maximumSpeed);\n\n    // Toggle the pane and tab\n    const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n    controls.toggleMenuButton.call(this, type, toggle);\n\n    // Empty the menu\n    emptyElement(list);\n\n    // Check if we need to toggle the parent\n    controls.checkMenu.call(this);\n\n    // If we're hiding, nothing more to do\n    if (!toggle) {\n      return;\n    }\n\n    // Create items\n    this.options.speed.forEach((speed) => {\n      controls.createMenuItem.call(this, {\n        value: speed,\n        list,\n        type,\n        title: controls.getLabel.call(this, 'speed', speed),\n      });\n    });\n\n    controls.updateSetting.call(this, type, list);\n  },\n\n  // Check if we need to hide/show the settings menu\n  checkMenu() {\n    const { buttons } = this.elements.settings;\n    const visible = !is.empty(buttons) && Object.values(buttons).some((button) => !button.hidden);\n\n    toggleHidden(this.elements.settings.menu, !visible);\n  },\n\n  // Focus the first menu item in a given (or visible) menu\n  focusFirstMenuItem(pane, tabFocus = false) {\n    if (this.elements.settings.popup.hidden) {\n      return;\n    }\n\n    let target = pane;\n\n    if (!is.element(target)) {\n      target = Object.values(this.elements.settings.panels).find((p) => !p.hidden);\n    }\n\n    const firstItem = target.querySelector('[role^=\"menuitem\"]');\n\n    setFocus.call(this, firstItem, tabFocus);\n  },\n\n  // Show/hide menu\n  toggleMenu(input) {\n    const { popup } = this.elements.settings;\n    const button = this.elements.buttons.settings;\n\n    // Menu and button are required\n    if (!is.element(popup) || !is.element(button)) {\n      return;\n    }\n\n    // True toggle by default\n    const { hidden } = popup;\n    let show = hidden;\n\n    if (is.boolean(input)) {\n      show = input;\n    } else if (is.keyboardEvent(input) && input.which === 27) {\n      show = false;\n    } else if (is.event(input)) {\n      // If Plyr is in a shadowDOM, the event target is set to the component, instead of the\n      // Element in the shadowDOM. The path, if available, is complete.\n      const target = is.function(input.composedPath) ? input.composedPath()[0] : input.target;\n      const isMenuItem = popup.contains(target);\n\n      // If the click was inside the menu or if the click\n      // wasn't the button or menu item and we're trying to\n      // show the menu (a doc click shouldn't show the menu)\n      if (isMenuItem || (!isMenuItem && input.target !== button && show)) {\n        return;\n      }\n    }\n\n    // Set button attributes\n    button.setAttribute('aria-expanded', show);\n\n    // Show the actual popup\n    toggleHidden(popup, !show);\n\n    // Add class hook\n    toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n    // Focus the first item if key interaction\n    if (show && is.keyboardEvent(input)) {\n      controls.focusFirstMenuItem.call(this, null, true);\n    } else if (!show && !hidden) {\n      // If closing, re-focus the button\n      setFocus.call(this, button, is.keyboardEvent(input));\n    }\n  },\n\n  // Get the natural size of a menu panel\n  getMenuSize(tab) {\n    const clone = tab.cloneNode(true);\n    clone.style.position = 'absolute';\n    clone.style.opacity = 0;\n    clone.removeAttribute('hidden');\n\n    // Append to parent so we get the \"real\" size\n    tab.parentNode.appendChild(clone);\n\n    // Get the sizes before we remove\n    const width = clone.scrollWidth;\n    const height = clone.scrollHeight;\n\n    // Remove from the DOM\n    removeElement(clone);\n\n    return {\n      width,\n      height,\n    };\n  },\n\n  // Show a panel in the menu\n  showMenuPanel(type = '', tabFocus = false) {\n    const target = this.elements.container.querySelector(`#plyr-settings-${this.id}-${type}`);\n\n    // Nothing to show, bail\n    if (!is.element(target)) {\n      return;\n    }\n\n    // Hide all other panels\n    const container = target.parentNode;\n    const current = Array.from(container.children).find((node) => !node.hidden);\n\n    // If we can do fancy animations, we'll animate the height/width\n    if (support.transitions && !support.reducedMotion) {\n      // Set the current width as a base\n      container.style.width = `${current.scrollWidth}px`;\n      container.style.height = `${current.scrollHeight}px`;\n\n      // Get potential sizes\n      const size = controls.getMenuSize.call(this, target);\n\n      // Restore auto height/width\n      const restore = (event) => {\n        // We're only bothered about height and width on the container\n        if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n          return;\n        }\n\n        // Revert back to auto\n        container.style.width = '';\n        container.style.height = '';\n\n        // Only listen once\n        off.call(this, container, transitionEndEvent, restore);\n      };\n\n      // Listen for the transition finishing and restore auto height/width\n      on.call(this, container, transitionEndEvent, restore);\n\n      // Set dimensions to target\n      container.style.width = `${size.width}px`;\n      container.style.height = `${size.height}px`;\n    }\n\n    // Set attributes on current tab\n    toggleHidden(current, true);\n\n    // Set attributes on target\n    toggleHidden(target, false);\n\n    // Focus the first item\n    controls.focusFirstMenuItem.call(this, target, tabFocus);\n  },\n\n  // Set the download URL\n  setDownloadUrl() {\n    const button = this.elements.buttons.download;\n\n    // Bail if no button\n    if (!is.element(button)) {\n      return;\n    }\n\n    // Set attribute\n    button.setAttribute('href', this.download);\n  },\n\n  // Build the default HTML\n  create(data) {\n    const {\n      bindMenuItemShortcuts,\n      createButton,\n      createProgress,\n      createRange,\n      createTime,\n      setQualityMenu,\n      setSpeedMenu,\n      showMenuPanel,\n    } = controls;\n    this.elements.controls = null;\n\n    // Larger overlaid play button\n    if (is.array(this.config.controls) && this.config.controls.includes('play-large')) {\n      this.elements.container.appendChild(createButton.call(this, 'play-large'));\n    }\n\n    // Create the container\n    const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n    this.elements.controls = container;\n\n    // Default item attributes\n    const defaultAttributes = { class: 'plyr__controls__item' };\n\n    // Loop through controls in order\n    dedupe(is.array(this.config.controls) ? this.config.controls : []).forEach((control) => {\n      // Restart button\n      if (control === 'restart') {\n        container.appendChild(createButton.call(this, 'restart', defaultAttributes));\n      }\n\n      // Rewind button\n      if (control === 'rewind') {\n        container.appendChild(createButton.call(this, 'rewind', defaultAttributes));\n      }\n\n      // Play/Pause button\n      if (control === 'play') {\n        container.appendChild(createButton.call(this, 'play', defaultAttributes));\n      }\n\n      // Fast forward button\n      if (control === 'fast-forward') {\n        container.appendChild(createButton.call(this, 'fast-forward', defaultAttributes));\n      }\n\n      // Progress\n      if (control === 'progress') {\n        const progressContainer = createElement('div', {\n          class: `${defaultAttributes.class} plyr__progress__container`,\n        });\n\n        const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n        // Seek range slider\n        progress.appendChild(\n          createRange.call(this, 'seek', {\n            id: `plyr-seek-${data.id}`,\n          }),\n        );\n\n        // Buffer progress\n        progress.appendChild(createProgress.call(this, 'buffer'));\n\n        // TODO: Add loop display indicator\n\n        // Seek tooltip\n        if (this.config.tooltips.seek) {\n          const tooltip = createElement(\n            'span',\n            {\n              class: this.config.classNames.tooltip,\n            },\n            '00:00',\n          );\n\n          progress.appendChild(tooltip);\n          this.elements.display.seekTooltip = tooltip;\n        }\n\n        this.elements.progress = progress;\n        progressContainer.appendChild(this.elements.progress);\n        container.appendChild(progressContainer);\n      }\n\n      // Media current time display\n      if (control === 'current-time') {\n        container.appendChild(createTime.call(this, 'currentTime', defaultAttributes));\n      }\n\n      // Media duration display\n      if (control === 'duration') {\n        container.appendChild(createTime.call(this, 'duration', defaultAttributes));\n      }\n\n      // Volume controls\n      if (control === 'mute' || control === 'volume') {\n        let { volume } = this.elements;\n\n        // Create the volume container if needed\n        if (!is.element(volume) || !container.contains(volume)) {\n          volume = createElement(\n            'div',\n            extend({}, defaultAttributes, {\n              class: `${defaultAttributes.class} plyr__volume`.trim(),\n            }),\n          );\n\n          this.elements.volume = volume;\n\n          container.appendChild(volume);\n        }\n\n        // Toggle mute button\n        if (control === 'mute') {\n          volume.appendChild(createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        // Ignored on iOS as it's handled globally\n        // https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html\n        if (control === 'volume' && !browser.isIos) {\n          // Set the attributes\n          const attributes = {\n            max: 1,\n            step: 0.05,\n            value: this.config.volume,\n          };\n\n          // Create the volume range slider\n          volume.appendChild(\n            createRange.call(\n              this,\n              'volume',\n              extend(attributes, {\n                id: `plyr-volume-${data.id}`,\n              }),\n            ),\n          );\n        }\n      }\n\n      // Toggle captions button\n      if (control === 'captions') {\n        container.appendChild(createButton.call(this, 'captions', defaultAttributes));\n      }\n\n      // Settings button / menu\n      if (control === 'settings' && !is.empty(this.config.settings)) {\n        const wrapper = createElement(\n          'div',\n          extend({}, defaultAttributes, {\n            class: `${defaultAttributes.class} plyr__menu`.trim(),\n            hidden: '',\n          }),\n        );\n\n        wrapper.appendChild(\n          createButton.call(this, 'settings', {\n            'aria-haspopup': true,\n            'aria-controls': `plyr-settings-${data.id}`,\n            'aria-expanded': false,\n          }),\n        );\n\n        const popup = createElement('div', {\n          class: 'plyr__menu__container',\n          id: `plyr-settings-${data.id}`,\n          hidden: '',\n        });\n\n        const inner = createElement('div');\n\n        const home = createElement('div', {\n          id: `plyr-settings-${data.id}-home`,\n        });\n\n        // Create the menu\n        const menu = createElement('div', {\n          role: 'menu',\n        });\n\n        home.appendChild(menu);\n        inner.appendChild(home);\n        this.elements.settings.panels.home = home;\n\n        // Build the menu items\n        this.config.settings.forEach((type) => {\n          // TODO: bundle this with the createMenuItem helper and bindings\n          const menuItem = createElement(\n            'button',\n            extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n              type: 'button',\n              class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n              role: 'menuitem',\n              'aria-haspopup': true,\n              hidden: '',\n            }),\n          );\n\n          // Bind menu shortcuts for keyboard users\n          bindMenuItemShortcuts.call(this, menuItem, type);\n\n          // Show menu on click\n          on.call(this, menuItem, 'click', () => {\n            showMenuPanel.call(this, type, false);\n          });\n\n          const flex = createElement('span', null, i18n.get(type, this.config));\n\n          const value = createElement('span', {\n            class: this.config.classNames.menu.value,\n          });\n\n          // Speed contains HTML entities\n          value.innerHTML = data[type];\n\n          flex.appendChild(value);\n          menuItem.appendChild(flex);\n          menu.appendChild(menuItem);\n\n          // Build the panes\n          const pane = createElement('div', {\n            id: `plyr-settings-${data.id}-${type}`,\n            hidden: '',\n          });\n\n          // Back button\n          const backButton = createElement('button', {\n            type: 'button',\n            class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n          });\n\n          // Visible label\n          backButton.appendChild(\n            createElement(\n              'span',\n              {\n                'aria-hidden': true,\n              },\n              i18n.get(type, this.config),\n            ),\n          );\n\n          // Screen reader label\n          backButton.appendChild(\n            createElement(\n              'span',\n              {\n                class: this.config.classNames.hidden,\n              },\n              i18n.get('menuBack', this.config),\n            ),\n          );\n\n          // Go back via keyboard\n          on.call(\n            this,\n            pane,\n            'keydown',\n            (event) => {\n              // We only care about <-\n              if (event.which !== 37) {\n                return;\n              }\n\n              // Prevent seek\n              event.preventDefault();\n              event.stopPropagation();\n\n              // Show the respective menu\n              showMenuPanel.call(this, 'home', true);\n            },\n            false,\n          );\n\n          // Go back via button click\n          on.call(this, backButton, 'click', () => {\n            showMenuPanel.call(this, 'home', false);\n          });\n\n          // Add to pane\n          pane.appendChild(backButton);\n\n          // Menu\n          pane.appendChild(\n            createElement('div', {\n              role: 'menu',\n            }),\n          );\n\n          inner.appendChild(pane);\n\n          this.elements.settings.buttons[type] = menuItem;\n          this.elements.settings.panels[type] = pane;\n        });\n\n        popup.appendChild(inner);\n        wrapper.appendChild(popup);\n        container.appendChild(wrapper);\n\n        this.elements.settings.popup = popup;\n        this.elements.settings.menu = wrapper;\n      }\n\n      // Picture in picture button\n      if (control === 'pip' && support.pip) {\n        container.appendChild(createButton.call(this, 'pip', defaultAttributes));\n      }\n\n      // Airplay button\n      if (control === 'airplay' && support.airplay) {\n        container.appendChild(createButton.call(this, 'airplay', defaultAttributes));\n      }\n\n      // Download button\n      if (control === 'download') {\n        const attributes = extend({}, defaultAttributes, {\n          element: 'a',\n          href: this.download,\n          target: '_blank',\n        });\n\n        // Set download attribute for HTML5 only\n        if (this.isHTML5) {\n          attributes.download = '';\n        }\n\n        const { download } = this.config.urls;\n\n        if (!is.url(download) && this.isEmbed) {\n          extend(attributes, {\n            icon: `logo-${this.provider}`,\n            label: this.provider,\n          });\n        }\n\n        container.appendChild(createButton.call(this, 'download', attributes));\n      }\n\n      // Toggle fullscreen button\n      if (control === 'fullscreen') {\n        container.appendChild(createButton.call(this, 'fullscreen', defaultAttributes));\n      }\n    });\n\n    // Set available quality levels\n    if (this.isHTML5) {\n      setQualityMenu.call(this, html5.getQualityOptions.call(this));\n    }\n\n    setSpeedMenu.call(this);\n\n    return container;\n  },\n\n  // Insert controls\n  inject() {\n    // Sprite\n    if (this.config.loadSprite) {\n      const icon = controls.getIconUrl.call(this);\n\n      // Only load external sprite using AJAX\n      if (icon.cors) {\n        loadSprite(icon.url, 'sprite-plyr');\n      }\n    }\n\n    // Create a unique ID\n    this.id = Math.floor(Math.random() * 10000);\n\n    // Null by default\n    let container = null;\n    this.elements.controls = null;\n\n    // Set template properties\n    const props = {\n      id: this.id,\n      seektime: this.config.seekTime,\n      title: this.config.title,\n    };\n    let update = true;\n\n    // If function, run it and use output\n    if (is.function(this.config.controls)) {\n      this.config.controls = this.config.controls.call(this, props);\n    }\n\n    // Convert falsy controls to empty array (primarily for empty strings)\n    if (!this.config.controls) {\n      this.config.controls = [];\n    }\n\n    if (is.element(this.config.controls) || is.string(this.config.controls)) {\n      // HTMLElement or Non-empty string passed as the option\n      container = this.config.controls;\n    } else {\n      // Create controls\n      container = controls.create.call(this, {\n        id: this.id,\n        seektime: this.config.seekTime,\n        speed: this.speed,\n        quality: this.quality,\n        captions: captions.getLabel.call(this),\n        // TODO: Looping\n        // loop: 'None',\n      });\n      update = false;\n    }\n\n    // Replace props with their value\n    const replace = (input) => {\n      let result = input;\n\n      Object.entries(props).forEach(([key, value]) => {\n        result = replaceAll(result, `{${key}}`, value);\n      });\n\n      return result;\n    };\n\n    // Update markup\n    if (update) {\n      if (is.string(this.config.controls)) {\n        container = replace(container);\n      }\n    }\n\n    // Controls container\n    let target;\n\n    // Inject to custom location\n    if (is.string(this.config.selectors.controls.container)) {\n      target = document.querySelector(this.config.selectors.controls.container);\n    }\n\n    // Inject into the container by default\n    if (!is.element(target)) {\n      target = this.elements.container;\n    }\n\n    // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n    const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n    target[insertMethod]('afterbegin', container);\n\n    // Find the elements if need be\n    if (!is.element(this.elements.controls)) {\n      controls.findElements.call(this);\n    }\n\n    // Add pressed property to buttons\n    if (!is.empty(this.elements.buttons)) {\n      const addProperty = (button) => {\n        const className = this.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n          enumerable: true,\n          get() {\n            return hasClass(button, className);\n          },\n          set(pressed = false) {\n            toggleClass(button, className, pressed);\n          },\n        });\n      };\n\n      // Toggle classname when pressed property is set\n      Object.values(this.elements.buttons)\n        .filter(Boolean)\n        .forEach((button) => {\n          if (is.array(button) || is.nodeList(button)) {\n            Array.from(button).filter(Boolean).forEach(addProperty);\n          } else {\n            addProperty(button);\n          }\n        });\n    }\n\n    // Edge sometimes doesn't finish the paint so force a repaint\n    if (browser.isEdge) {\n      repaint(target);\n    }\n\n    // Setup tooltips\n    if (this.config.tooltips.controls) {\n      const { classNames, selectors } = this.config;\n      const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n      const labels = getElements.call(this, selector);\n\n      Array.from(labels).forEach((label) => {\n        toggleClass(label, this.config.classNames.hidden, false);\n        toggleClass(label, this.config.classNames.tooltip, true);\n      });\n    }\n  },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {String} input - the URL to be parsed\n * @param {Boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n  let url = input;\n\n  if (safe) {\n    const parser = document.createElement('a');\n    parser.href = url;\n    url = parser.href;\n  }\n\n  try {\n    return new URL(url);\n  } catch (e) {\n    return null;\n  }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n  const params = new URLSearchParams();\n\n  if (is.object(input)) {\n    Object.entries(input).forEach(([key, value]) => {\n      params.set(key, value);\n    });\n  }\n\n  return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n  createElement,\n  emptyElement,\n  getAttributesFromSelector,\n  insertAfter,\n  removeElement,\n  toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n  // Setup captions\n  setup() {\n    // Requires UI support\n    if (!this.supported.ui) {\n      return;\n    }\n\n    // Only Vimeo and HTML5 video supported at this point\n    if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n      // Clear menu and hide\n      if (\n        is.array(this.config.controls) &&\n        this.config.controls.includes('settings') &&\n        this.config.settings.includes('captions')\n      ) {\n        controls.setCaptionsMenu.call(this);\n      }\n\n      return;\n    }\n\n    // Inject the container\n    if (!is.element(this.elements.captions)) {\n      this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n      insertAfter(this.elements.captions, this.elements.wrapper);\n    }\n\n    // Fix IE captions if CORS is used\n    // Fetch captions and inject as blobs instead (data URIs not supported!)\n    if (browser.isIE && window.URL) {\n      const elements = this.media.querySelectorAll('track');\n\n      Array.from(elements).forEach((track) => {\n        const src = track.getAttribute('src');\n        const url = parseUrl(src);\n\n        if (\n          url !== null &&\n          url.hostname !== window.location.href.hostname &&\n          ['http:', 'https:'].includes(url.protocol)\n        ) {\n          fetch(src, 'blob')\n            .then((blob) => {\n              track.setAttribute('src', window.URL.createObjectURL(blob));\n            })\n            .catch(() => {\n              removeElement(track);\n            });\n        }\n      });\n    }\n\n    // Get and set initial data\n    // The \"preferred\" options are not realized unless / until the wanted language has a match\n    // * languages: Array of user's browser languages.\n    // * language:  The language preferred by user settings or config\n    // * active:    The state preferred by user settings or config\n    // * toggled:   The real captions state\n\n    const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n    const languages = dedupe(browserLanguages.map((language) => language.split('-')[0]));\n    let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n    // Use first browser language when language is 'auto'\n    if (language === 'auto') {\n      [language] = languages;\n    }\n\n    let active = this.storage.get('captions');\n    if (!is.boolean(active)) {\n      ({ active } = this.config.captions);\n    }\n\n    Object.assign(this.captions, {\n      toggled: false,\n      active,\n      language,\n      languages,\n    });\n\n    // Watch changes to textTracks and update captions menu\n    if (this.isHTML5) {\n      const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n      on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n    }\n\n    // Update available languages in list next tick (the event must not be triggered before the listeners)\n    setTimeout(captions.update.bind(this), 0);\n  },\n\n  // Update available language options in settings based on tracks\n  update() {\n    const tracks = captions.getTracks.call(this, true);\n    // Get the wanted language\n    const { active, language, meta, currentTrackNode } = this.captions;\n    const languageExists = Boolean(tracks.find((track) => track.language === language));\n\n    // Handle tracks (add event listener and \"pseudo\"-default)\n    if (this.isHTML5 && this.isVideo) {\n      tracks\n        .filter((track) => !meta.get(track))\n        .forEach((track) => {\n          this.debug.log('Track added', track);\n\n          // Attempt to store if the original dom element was \"default\"\n          meta.set(track, {\n            default: track.mode === 'showing',\n          });\n\n          // Turn off native caption rendering to avoid double captions\n          // Note: mode='hidden' forces a track to download. To ensure every track\n          // isn't downloaded at once, only 'showing' tracks should be reassigned\n          // eslint-disable-next-line no-param-reassign\n          if (track.mode === 'showing') {\n            // eslint-disable-next-line no-param-reassign\n            track.mode = 'hidden';\n          }\n\n          // Add event listener for cue changes\n          on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n        });\n    }\n\n    // Update language first time it matches, or if the previous matching track was removed\n    if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n      captions.setLanguage.call(this, language);\n      captions.toggle.call(this, active && languageExists);\n    }\n\n    // Enable or disable captions based on track length\n    toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n    // Update available languages in list\n    if (\n      is.array(this.config.controls) &&\n      this.config.controls.includes('settings') &&\n      this.config.settings.includes('captions')\n    ) {\n      controls.setCaptionsMenu.call(this);\n    }\n  },\n\n  // Toggle captions display\n  // Used internally for the toggleCaptions method, with the passive option forced to false\n  toggle(input, passive = true) {\n    // If there's no full support\n    if (!this.supported.ui) {\n      return;\n    }\n\n    const { toggled } = this.captions; // Current state\n    const activeClass = this.config.classNames.captions.active;\n    // Get the next state\n    // If the method is called without parameter, toggle based on current value\n    const active = is.nullOrUndefined(input) ? !toggled : input;\n\n    // Update state and trigger event\n    if (active !== toggled) {\n      // When passive, don't override user preferences\n      if (!passive) {\n        this.captions.active = active;\n        this.storage.set({ captions: active });\n      }\n\n      // Force language if the call isn't passive and there is no matching language to toggle to\n      if (!this.language && active && !passive) {\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n        // Override user preferences to avoid switching languages if a matching track is added\n        this.captions.language = track.language;\n\n        // Set caption, but don't store in localStorage as user preference\n        captions.set.call(this, tracks.indexOf(track));\n        return;\n      }\n\n      // Toggle button if it's enabled\n      if (this.elements.buttons.captions) {\n        this.elements.buttons.captions.pressed = active;\n      }\n\n      // Add class hook\n      toggleClass(this.elements.container, activeClass, active);\n\n      this.captions.toggled = active;\n\n      // Update settings menu\n      controls.updateSetting.call(this, 'captions');\n\n      // Trigger event (not used internally)\n      triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n    }\n\n    // Wait for the call stack to clear before setting mode='hidden'\n    // on the active track - forcing the browser to download it\n    setTimeout(() => {\n      if (active && this.captions.toggled) {\n        this.captions.currentTrackNode.mode = 'hidden';\n      }\n    });\n  },\n\n  // Set captions by track index\n  // Used internally for the currentTrack setter with the passive option forced to false\n  set(index, passive = true) {\n    const tracks = captions.getTracks.call(this);\n\n    // Disable captions if setting to -1\n    if (index === -1) {\n      captions.toggle.call(this, false, passive);\n      return;\n    }\n\n    if (!is.number(index)) {\n      this.debug.warn('Invalid caption argument', index);\n      return;\n    }\n\n    if (!(index in tracks)) {\n      this.debug.warn('Track not found', index);\n      return;\n    }\n\n    if (this.captions.currentTrack !== index) {\n      this.captions.currentTrack = index;\n      const track = tracks[index];\n      const { language } = track || {};\n\n      // Store reference to node for invalidation on remove\n      this.captions.currentTrackNode = track;\n\n      // Update settings menu\n      controls.updateSetting.call(this, 'captions');\n\n      // When passive, don't override user preferences\n      if (!passive) {\n        this.captions.language = language;\n        this.storage.set({ language });\n      }\n\n      // Handle Vimeo captions\n      if (this.isVimeo) {\n        this.embed.enableTextTrack(language);\n      }\n\n      // Trigger event\n      triggerEvent.call(this, this.media, 'languagechange');\n    }\n\n    // Show captions\n    captions.toggle.call(this, true, passive);\n\n    if (this.isHTML5 && this.isVideo) {\n      // If we change the active track while a cue is already displayed we need to update it\n      captions.updateCues.call(this);\n    }\n  },\n\n  // Set captions by language\n  // Used internally for the language setter with the passive option forced to false\n  setLanguage(input, passive = true) {\n    if (!is.string(input)) {\n      this.debug.warn('Invalid language argument', input);\n      return;\n    }\n    // Normalize\n    const language = input.toLowerCase();\n    this.captions.language = language;\n\n    // Set currentTrack\n    const tracks = captions.getTracks.call(this);\n    const track = captions.findTrack.call(this, [language]);\n    captions.set.call(this, tracks.indexOf(track), passive);\n  },\n\n  // Get current valid caption tracks\n  // If update is false it will also ignore tracks without metadata\n  // This is used to \"freeze\" the language options when captions.update is false\n  getTracks(update = false) {\n    // Handle media or textTracks missing or null\n    const tracks = Array.from((this.media || {}).textTracks || []);\n    // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n    // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n    return tracks\n      .filter((track) => !this.isHTML5 || update || this.captions.meta.has(track))\n      .filter((track) => ['captions', 'subtitles'].includes(track.kind));\n  },\n\n  // Match tracks based on languages and get the first\n  findTrack(languages, force = false) {\n    const tracks = captions.getTracks.call(this);\n    const sortIsDefault = (track) => Number((this.captions.meta.get(track) || {}).default);\n    const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n    let track;\n\n    languages.every((language) => {\n      track = sorted.find((t) => t.language === language);\n      return !track; // Break iteration if there is a match\n    });\n\n    // If no match is found but is required, get first\n    return track || (force ? sorted[0] : undefined);\n  },\n\n  // Get the current track\n  getCurrentTrack() {\n    return captions.getTracks.call(this)[this.currentTrack];\n  },\n\n  // Get UI label for track\n  getLabel(track) {\n    let currentTrack = track;\n\n    if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n      currentTrack = captions.getCurrentTrack.call(this);\n    }\n\n    if (is.track(currentTrack)) {\n      if (!is.empty(currentTrack.label)) {\n        return currentTrack.label;\n      }\n\n      if (!is.empty(currentTrack.language)) {\n        return track.language.toUpperCase();\n      }\n\n      return i18n.get('enabled', this.config);\n    }\n\n    return i18n.get('disabled', this.config);\n  },\n\n  // Update captions using current track's active cues\n  // Also optional array argument in case there isn't any track (ex: vimeo)\n  updateCues(input) {\n    // Requires UI\n    if (!this.supported.ui) {\n      return;\n    }\n\n    if (!is.element(this.elements.captions)) {\n      this.debug.warn('No captions element to render to');\n      return;\n    }\n\n    // Only accept array or empty input\n    if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n      this.debug.warn('updateCues: Invalid input', input);\n      return;\n    }\n\n    let cues = input;\n\n    // Get cues from track\n    if (!cues) {\n      const track = captions.getCurrentTrack.call(this);\n\n      cues = Array.from((track || {}).activeCues || [])\n        .map((cue) => cue.getCueAsHTML())\n        .map(getHTML);\n    }\n\n    // Set new caption text\n    const content = cues.map((cueText) => cueText.trim()).join('\\n');\n    const changed = content !== this.elements.captions.innerHTML;\n\n    if (changed) {\n      // Empty the container and create a new child element\n      emptyElement(this.elements.captions);\n      const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n      caption.innerHTML = content;\n      this.elements.captions.appendChild(caption);\n\n      // Trigger event\n      triggerEvent.call(this, this.media, 'cuechange');\n    }\n  },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n  // Disable\n  enabled: true,\n\n  // Custom media title\n  title: '',\n\n  // Logging to console\n  debug: false,\n\n  // Auto play (if supported)\n  autoplay: false,\n\n  // Only allow one media playing at once (vimeo only)\n  autopause: true,\n\n  // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n  // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n  playsinline: true,\n\n  // Default time to skip when rewind/fast forward\n  seekTime: 10,\n\n  // Default volume\n  volume: 1,\n  muted: false,\n\n  // Pass a custom duration\n  duration: null,\n\n  // Display the media duration on load in the current time position\n  // If you have opted to display both duration and currentTime, this is ignored\n  displayDuration: true,\n\n  // Invert the current time to be a countdown\n  invertTime: true,\n\n  // Clicking the currentTime inverts it's value to show time left rather than elapsed\n  toggleInvert: true,\n\n  // Force an aspect ratio\n  // The format must be `'w:h'` (e.g. `'16:9'`)\n  ratio: null,\n\n  // Click video container to play/pause\n  clickToPlay: true,\n\n  // Auto hide the controls\n  hideControls: true,\n\n  // Reset to start when playback ended\n  resetOnEnd: false,\n\n  // Disable the standard context menu\n  disableContextMenu: true,\n\n  // Sprite (for icons)\n  loadSprite: true,\n  iconPrefix: 'plyr',\n  iconUrl: 'https://cdn.plyr.io/3.6.3/plyr.svg',\n\n  // Blank video (used to prevent errors on source change)\n  blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n  // Quality default\n  quality: {\n    default: 576,\n    // The options to display in the UI, if available for the source media\n    options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n    forced: false,\n    onChange: null,\n  },\n\n  // Set loops\n  loop: {\n    active: false,\n    // start: null,\n    // end: null,\n  },\n\n  // Speed default and options to display\n  speed: {\n    selected: 1,\n    // The options to display in the UI, if available for the source media (e.g. Vimeo and YouTube only support 0.5x-4x)\n    options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 4],\n  },\n\n  // Keyboard shortcut settings\n  keyboard: {\n    focused: true,\n    global: false,\n  },\n\n  // Display tooltips\n  tooltips: {\n    controls: false,\n    seek: true,\n  },\n\n  // Captions settings\n  captions: {\n    active: false,\n    language: 'auto',\n    // Listen to new tracks added after Plyr is initialized.\n    // This is needed for streaming captions, but may result in unselectable options\n    update: false,\n  },\n\n  // Fullscreen settings\n  fullscreen: {\n    enabled: true, // Allow fullscreen?\n    fallback: true, // Fallback using full viewport/window\n    iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    // Selector for the fullscreen container so contextual / non-player content can remain visible in fullscreen mode\n    // Non-ancestors of the player element will be ignored\n    // container: null, // defaults to the player element\n  },\n\n  // Local storage\n  storage: {\n    enabled: true,\n    key: 'plyr',\n  },\n\n  // Default controls\n  controls: [\n    'play-large',\n    // 'restart',\n    // 'rewind',\n    'play',\n    // 'fast-forward',\n    'progress',\n    'current-time',\n    // 'duration',\n    'mute',\n    'volume',\n    'captions',\n    'settings',\n    'pip',\n    'airplay',\n    // 'download',\n    'fullscreen',\n  ],\n  settings: ['captions', 'quality', 'speed'],\n\n  // Localisation\n  i18n: {\n    restart: 'Restart',\n    rewind: 'Rewind {seektime}s',\n    play: 'Play',\n    pause: 'Pause',\n    fastForward: 'Forward {seektime}s',\n    seek: 'Seek',\n    seekLabel: '{currentTime} of {duration}',\n    played: 'Played',\n    buffered: 'Buffered',\n    currentTime: 'Current time',\n    duration: 'Duration',\n    volume: 'Volume',\n    mute: 'Mute',\n    unmute: 'Unmute',\n    enableCaptions: 'Enable captions',\n    disableCaptions: 'Disable captions',\n    download: 'Download',\n    enterFullscreen: 'Enter fullscreen',\n    exitFullscreen: 'Exit fullscreen',\n    frameTitle: 'Player for {title}',\n    captions: 'Captions',\n    settings: 'Settings',\n    pip: 'PIP',\n    menuBack: 'Go back to previous menu',\n    speed: 'Speed',\n    normal: 'Normal',\n    quality: 'Quality',\n    loop: 'Loop',\n    start: 'Start',\n    end: 'End',\n    all: 'All',\n    reset: 'Reset',\n    disabled: 'Disabled',\n    enabled: 'Enabled',\n    advertisement: 'Ad',\n    qualityBadge: {\n      2160: '4K',\n      1440: 'HD',\n      1080: 'HD',\n      720: 'HD',\n      576: 'SD',\n      480: 'SD',\n    },\n  },\n\n  // URLs\n  urls: {\n    download: null,\n    vimeo: {\n      sdk: 'https://player.vimeo.com/api/player.js',\n      iframe: 'https://player.vimeo.com/video/{0}?{1}',\n      api: 'https://vimeo.com/api/oembed.json?url={0}',\n    },\n    youtube: {\n      sdk: 'https://www.youtube.com/iframe_api',\n      api: 'https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}',\n    },\n    googleIMA: {\n      sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n    },\n  },\n\n  // Custom control listeners\n  listeners: {\n    seek: null,\n    play: null,\n    pause: null,\n    restart: null,\n    rewind: null,\n    fastForward: null,\n    mute: null,\n    volume: null,\n    captions: null,\n    download: null,\n    fullscreen: null,\n    pip: null,\n    airplay: null,\n    speed: null,\n    quality: null,\n    loop: null,\n    language: null,\n  },\n\n  // Events to watch and bubble\n  events: [\n    // Events to watch on HTML5 media elements and bubble\n    // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n    'ended',\n    'progress',\n    'stalled',\n    'playing',\n    'waiting',\n    'canplay',\n    'canplaythrough',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'timeupdate',\n    'volumechange',\n    'play',\n    'pause',\n    'error',\n    'seeking',\n    'seeked',\n    'emptied',\n    'ratechange',\n    'cuechange',\n\n    // Custom events\n    'download',\n    'enterfullscreen',\n    'exitfullscreen',\n    'captionsenabled',\n    'captionsdisabled',\n    'languagechange',\n    'controlshidden',\n    'controlsshown',\n    'ready',\n\n    // YouTube\n    'statechange',\n\n    // Quality\n    'qualitychange',\n\n    // Ads\n    'adsloaded',\n    'adscontentpause',\n    'adscontentresume',\n    'adstarted',\n    'adsmidpoint',\n    'adscomplete',\n    'adsallcomplete',\n    'adsimpression',\n    'adsclick',\n  ],\n\n  // Selectors\n  // Change these to match your template if using custom HTML\n  selectors: {\n    editable: 'input, textarea, select, [contenteditable]',\n    container: '.plyr',\n    controls: {\n      container: null,\n      wrapper: '.plyr__controls',\n    },\n    labels: '[data-plyr]',\n    buttons: {\n      play: '[data-plyr=\"play\"]',\n      pause: '[data-plyr=\"pause\"]',\n      restart: '[data-plyr=\"restart\"]',\n      rewind: '[data-plyr=\"rewind\"]',\n      fastForward: '[data-plyr=\"fast-forward\"]',\n      mute: '[data-plyr=\"mute\"]',\n      captions: '[data-plyr=\"captions\"]',\n      download: '[data-plyr=\"download\"]',\n      fullscreen: '[data-plyr=\"fullscreen\"]',\n      pip: '[data-plyr=\"pip\"]',\n      airplay: '[data-plyr=\"airplay\"]',\n      settings: '[data-plyr=\"settings\"]',\n      loop: '[data-plyr=\"loop\"]',\n    },\n    inputs: {\n      seek: '[data-plyr=\"seek\"]',\n      volume: '[data-plyr=\"volume\"]',\n      speed: '[data-plyr=\"speed\"]',\n      language: '[data-plyr=\"language\"]',\n      quality: '[data-plyr=\"quality\"]',\n    },\n    display: {\n      currentTime: '.plyr__time--current',\n      duration: '.plyr__time--duration',\n      buffer: '.plyr__progress__buffer',\n      loop: '.plyr__progress__loop', // Used later\n      volume: '.plyr__volume--display',\n    },\n    progress: '.plyr__progress',\n    captions: '.plyr__captions',\n    caption: '.plyr__caption',\n  },\n\n  // Class hooks added to the player in different states\n  classNames: {\n    type: 'plyr--{0}',\n    provider: 'plyr--{0}',\n    video: 'plyr__video-wrapper',\n    embed: 'plyr__video-embed',\n    videoFixedRatio: 'plyr__video-wrapper--fixed-ratio',\n    embedContainer: 'plyr__video-embed__container',\n    poster: 'plyr__poster',\n    posterEnabled: 'plyr__poster-enabled',\n    ads: 'plyr__ads',\n    control: 'plyr__control',\n    controlPressed: 'plyr__control--pressed',\n    playing: 'plyr--playing',\n    paused: 'plyr--paused',\n    stopped: 'plyr--stopped',\n    loading: 'plyr--loading',\n    hover: 'plyr--hover',\n    tooltip: 'plyr__tooltip',\n    cues: 'plyr__cues',\n    hidden: 'plyr__sr-only',\n    hideControls: 'plyr--hide-controls',\n    isIos: 'plyr--is-ios',\n    isTouch: 'plyr--is-touch',\n    uiSupported: 'plyr--full-ui',\n    noTransition: 'plyr--no-transition',\n    display: {\n      time: 'plyr__time',\n    },\n    menu: {\n      value: 'plyr__menu__value',\n      badge: 'plyr__badge',\n      open: 'plyr--menu-open',\n    },\n    captions: {\n      enabled: 'plyr--captions-enabled',\n      active: 'plyr--captions-active',\n    },\n    fullscreen: {\n      enabled: 'plyr--fullscreen-enabled',\n      fallback: 'plyr--fullscreen-fallback',\n    },\n    pip: {\n      supported: 'plyr--pip-supported',\n      active: 'plyr--pip-active',\n    },\n    airplay: {\n      supported: 'plyr--airplay-supported',\n      active: 'plyr--airplay-active',\n    },\n    tabFocus: 'plyr__tab-focus',\n    previewThumbnails: {\n      // Tooltip thumbs\n      thumbContainer: 'plyr__preview-thumb',\n      thumbContainerShown: 'plyr__preview-thumb--is-shown',\n      imageContainer: 'plyr__preview-thumb__image-container',\n      timeContainer: 'plyr__preview-thumb__time-container',\n      // Scrubbing\n      scrubbingContainer: 'plyr__preview-scrubbing',\n      scrubbingContainerShown: 'plyr__preview-scrubbing--is-shown',\n    },\n  },\n\n  // Embed attributes\n  attributes: {\n    embed: {\n      provider: 'data-plyr-provider',\n      id: 'data-plyr-embed-id',\n    },\n  },\n\n  // Advertisements plugin\n  // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n  ads: {\n    enabled: false,\n    publisherId: '',\n    tagUrl: '',\n  },\n\n  // Preview Thumbnails plugin\n  previewThumbnails: {\n    enabled: false,\n    src: '',\n  },\n\n  // Vimeo plugin\n  vimeo: {\n    byline: false,\n    portrait: false,\n    title: false,\n    speed: true,\n    transparent: false,\n    // Custom settings from Plyr\n    customControls: true,\n    referrerPolicy: null, // https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy\n    // Whether the owner of the video has a Pro or Business account\n    // (which allows us to properly hide controls without CSS hacks, etc)\n    premium: false,\n  },\n\n  // YouTube plugin\n  youtube: {\n    rel: 0, // No related vids\n    showinfo: 0, // Hide info\n    iv_load_policy: 3, // Hide annotations\n    modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n    // Custom settings from Plyr\n    customControls: true,\n    noCookie: false, // Whether to use an alternative version of YouTube without cookies\n  },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr states\n// ==========================================================================\n\nexport const pip = {\n  active: 'picture-in-picture',\n  inactive: 'inline',\n};\n\nexport default { pip };\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n  html5: 'html5',\n  youtube: 'youtube',\n  vimeo: 'vimeo',\n};\n\nexport const types = {\n  audio: 'audio',\n  video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {String} url\n */\nexport function getProviderByUrl(url) {\n  // YouTube\n  if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtube-nocookie\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n    return providers.youtube;\n  }\n\n  // Vimeo\n  if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n    return providers.vimeo;\n  }\n\n  return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n  constructor(enabled = false) {\n    this.enabled = window.console && enabled;\n\n    if (this.enabled) {\n      this.log('Debugging enabled');\n    }\n  }\n\n  get log() {\n    // eslint-disable-next-line no-console\n    return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n  }\n\n  get warn() {\n    // eslint-disable-next-line no-console\n    return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n  }\n\n  get error() {\n    // eslint-disable-next-line no-console\n    return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n  }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// https://webkit.org/blog/7929/designing-websites-for-iphone-x/\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { closest, getElements, hasClass, toggleClass } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport { silencePromise } from './utils/promise';\n\nclass Fullscreen {\n  constructor(player) {\n    // Keep reference to parent\n    this.player = player;\n\n    // Get prefix\n    this.prefix = Fullscreen.prefix;\n    this.property = Fullscreen.property;\n\n    // Scroll position\n    this.scrollPosition = { x: 0, y: 0 };\n\n    // Force the use of 'full window/browser' rather than fullscreen\n    this.forceFallback = player.config.fullscreen.fallback === 'force';\n\n    // Get the fullscreen element\n    // Checks container is an ancestor, defaults to null\n    this.player.elements.fullscreen =\n      player.config.fullscreen.container && closest(this.player.elements.container, player.config.fullscreen.container);\n\n    // Register event listeners\n    // Handle event (incase user presses escape etc)\n    on.call(\n      this.player,\n      document,\n      this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n      () => {\n        // TODO: Filter for target??\n        this.onChange();\n      },\n    );\n\n    // Fullscreen toggle on double click\n    on.call(this.player, this.player.elements.container, 'dblclick', (event) => {\n      // Ignore double click in controls\n      if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n        return;\n      }\n\n      this.player.listeners.proxy(event, this.toggle, 'fullscreen');\n    });\n\n    // Tap focus when in fullscreen\n    on.call(this, this.player.elements.container, 'keydown', (event) => this.trapFocus(event));\n\n    // Update the UI\n    this.update();\n\n    // this.toggle = this.toggle.bind(this);\n  }\n\n  // Determine if native supported\n  static get native() {\n    return !!(\n      document.fullscreenEnabled ||\n      document.webkitFullscreenEnabled ||\n      document.mozFullScreenEnabled ||\n      document.msFullscreenEnabled\n    );\n  }\n\n  // If we're actually using native\n  get usingNative() {\n    return Fullscreen.native && !this.forceFallback;\n  }\n\n  // Get the prefix for handlers\n  static get prefix() {\n    // No prefix\n    if (is.function(document.exitFullscreen)) {\n      return '';\n    }\n\n    // Check for fullscreen support by vendor prefix\n    let value = '';\n    const prefixes = ['webkit', 'moz', 'ms'];\n\n    prefixes.some((pre) => {\n      if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n        value = pre;\n        return true;\n      }\n\n      return false;\n    });\n\n    return value;\n  }\n\n  static get property() {\n    return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n  }\n\n  // Determine if fullscreen is enabled\n  get enabled() {\n    return (\n      (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n      this.player.config.fullscreen.enabled &&\n      this.player.supported.ui &&\n      this.player.isVideo\n    );\n  }\n\n  // Get active state\n  get active() {\n    if (!this.enabled) {\n      return false;\n    }\n\n    // Fallback using classname\n    if (!Fullscreen.native || this.forceFallback) {\n      return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n    }\n\n    const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n    return element && element.shadowRoot ? element === this.target.getRootNode().host : element === this.target;\n  }\n\n  // Get target element\n  get target() {\n    return browser.isIos && this.player.config.fullscreen.iosNative\n      ? this.player.media\n      : this.player.elements.fullscreen || this.player.elements.container;\n  }\n\n  onChange = () => {\n    if (!this.enabled) {\n      return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n      button.pressed = this.active;\n    }\n\n    // Always trigger events on the plyr / media element (not a fullscreen container) and let them bubble up\n    const target = this.target === this.player.media ? this.target : this.player.elements.container;\n    // Trigger an event\n    triggerEvent.call(this.player, target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n  };\n\n  toggleFallback = (toggle = false) => {\n    // Store or restore scroll position\n    if (toggle) {\n      this.scrollPosition = {\n        x: window.scrollX || 0,\n        y: window.scrollY || 0,\n      };\n    } else {\n      window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Force full viewport on iPhone X+\n    if (browser.isIos) {\n      let viewport = document.head.querySelector('meta[name=\"viewport\"]');\n      const property = 'viewport-fit=cover';\n\n      // Inject the viewport meta if required\n      if (!viewport) {\n        viewport = document.createElement('meta');\n        viewport.setAttribute('name', 'viewport');\n      }\n\n      // Check if the property already exists\n      const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\n\n      if (toggle) {\n        this.cleanupViewport = !hasProperty;\n\n        if (!hasProperty) {\n          viewport.content += `,${property}`;\n        }\n      } else if (this.cleanupViewport) {\n        viewport.content = viewport.content\n          .split(',')\n          .filter((part) => part.trim() !== property)\n          .join(',');\n      }\n    }\n\n    // Toggle button and fire events\n    this.onChange();\n  };\n\n  // Trap focus inside container\n  trapFocus = (event) => {\n    // Bail if iOS, not active, not the tab key\n    if (browser.isIos || !this.active || event.key !== 'Tab' || event.keyCode !== 9) {\n      return;\n    }\n\n    // Get the current focused element\n    const focused = document.activeElement;\n    const focusable = getElements.call(this.player, 'a[href], button:not(:disabled), input:not(:disabled), [tabindex]');\n    const [first] = focusable;\n    const last = focusable[focusable.length - 1];\n\n    if (focused === last && !event.shiftKey) {\n      // Move focus to first element that can be tabbed if Shift isn't used\n      first.focus();\n      event.preventDefault();\n    } else if (focused === first && event.shiftKey) {\n      // Move focus to last element that can be tabbed if Shift is used\n      last.focus();\n      event.preventDefault();\n    }\n  };\n\n  // Update UI\n  update = () => {\n    if (this.enabled) {\n      let mode;\n\n      if (this.forceFallback) {\n        mode = 'Fallback (forced)';\n      } else if (Fullscreen.native) {\n        mode = 'Native';\n      } else {\n        mode = 'Fallback';\n      }\n\n      this.player.debug.log(`${mode} fullscreen enabled`);\n    } else {\n      this.player.debug.log('Fullscreen not supported and fallback disabled');\n    }\n\n    // Add styling hook to show button\n    toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n  };\n\n  // Make an element fullscreen\n  enter = () => {\n    if (!this.enabled) {\n      return;\n    }\n\n    // iOS native fullscreen doesn't need the request step\n    if (browser.isIos && this.player.config.fullscreen.iosNative) {\n      this.target.webkitEnterFullscreen();\n    } else if (!Fullscreen.native || this.forceFallback) {\n      this.toggleFallback(true);\n    } else if (!this.prefix) {\n      this.target.requestFullscreen({ navigationUI: 'hide' });\n    } else if (!is.empty(this.prefix)) {\n      this.target[`${this.prefix}Request${this.property}`]();\n    }\n  };\n\n  // Bail from fullscreen\n  exit = () => {\n    if (!this.enabled) {\n      return;\n    }\n\n    // iOS native fullscreen\n    if (browser.isIos && this.player.config.fullscreen.iosNative) {\n      this.target.webkitExitFullscreen();\n      silencePromise(this.player.play());\n    } else if (!Fullscreen.native || this.forceFallback) {\n      this.toggleFallback(false);\n    } else if (!this.prefix) {\n      (document.cancelFullScreen || document.exitFullscreen).call(document);\n    } else if (!is.empty(this.prefix)) {\n      const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n      document[`${this.prefix}${action}${this.property}`]();\n    }\n  };\n\n  // Toggle state\n  toggle = () => {\n    if (!this.active) {\n      this.enter();\n    } else {\n      this.exit();\n    }\n  };\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n\n    const handler = () => {\n      delete image.onload;\n      delete image.onerror;\n      (image.naturalWidth >= minWidth ? resolve : reject)(image);\n    };\n\n    Object.assign(image, { onload: handler, onerror: handler, src });\n  });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadImage from './utils/load-image';\n\nconst ui = {\n  addStyleHook() {\n    toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n    toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n  },\n\n  // Toggle native HTML5 media controls\n  toggleNativeControls(toggle = false) {\n    if (toggle && this.isHTML5) {\n      this.media.setAttribute('controls', '');\n    } else {\n      this.media.removeAttribute('controls');\n    }\n  },\n\n  // Setup the UI\n  build() {\n    // Re-attach media element listeners\n    // TODO: Use event bubbling?\n    this.listeners.media();\n\n    // Don't setup interface if no support\n    if (!this.supported.ui) {\n      this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n      // Restore native controls\n      ui.toggleNativeControls.call(this, true);\n\n      // Bail\n      return;\n    }\n\n    // Inject custom controls if not present\n    if (!is.element(this.elements.controls)) {\n      // Inject custom controls\n      controls.inject.call(this);\n\n      // Re-attach control listeners\n      this.listeners.controls();\n    }\n\n    // Remove native controls\n    ui.toggleNativeControls.call(this);\n\n    // Setup captions for HTML5\n    if (this.isHTML5) {\n      captions.setup.call(this);\n    }\n\n    // Reset volume\n    this.volume = null;\n\n    // Reset mute state\n    this.muted = null;\n\n    // Reset loop state\n    this.loop = null;\n\n    // Reset quality setting\n    this.quality = null;\n\n    // Reset speed\n    this.speed = null;\n\n    // Reset volume display\n    controls.updateVolume.call(this);\n\n    // Reset time display\n    controls.timeUpdate.call(this);\n\n    // Update the UI\n    ui.checkPlaying.call(this);\n\n    // Check for picture-in-picture support\n    toggleClass(\n      this.elements.container,\n      this.config.classNames.pip.supported,\n      support.pip && this.isHTML5 && this.isVideo,\n    );\n\n    // Check for airplay support\n    toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n    // Add iOS class\n    toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n    // Add touch class\n    toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n    // Ready for API calls\n    this.ready = true;\n\n    // Ready event at end of execution stack\n    setTimeout(() => {\n      triggerEvent.call(this, this.media, 'ready');\n    }, 0);\n\n    // Set the title\n    ui.setTitle.call(this);\n\n    // Assure the poster image is set, if the property was added before the element was created\n    if (this.poster) {\n      ui.setPoster.call(this, this.poster, false).catch(() => {});\n    }\n\n    // Manually set the duration if user has overridden it.\n    // The event listeners for it doesn't get called if preload is disabled (#701)\n    if (this.config.duration) {\n      controls.durationUpdate.call(this);\n    }\n  },\n\n  // Setup aria attribute for play and iframe title\n  setTitle() {\n    // Find the current text\n    let label = i18n.get('play', this.config);\n\n    // If there's a media title set, use that for the label\n    if (is.string(this.config.title) && !is.empty(this.config.title)) {\n      label += `, ${this.config.title}`;\n    }\n\n    // If there's a play button, set label\n    Array.from(this.elements.buttons.play || []).forEach((button) => {\n      button.setAttribute('aria-label', label);\n    });\n\n    // Set iframe title\n    // https://github.com/sampotts/plyr/issues/124\n    if (this.isEmbed) {\n      const iframe = getElement.call(this, 'iframe');\n\n      if (!is.element(iframe)) {\n        return;\n      }\n\n      // Default to media type\n      const title = !is.empty(this.config.title) ? this.config.title : 'video';\n      const format = i18n.get('frameTitle', this.config);\n\n      iframe.setAttribute('title', format.replace('{title}', title));\n    }\n  },\n\n  // Toggle poster\n  togglePoster(enable) {\n    toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n  },\n\n  // Set the poster image (async)\n  // Used internally for the poster setter, with the passive option forced to false\n  setPoster(poster, passive = true) {\n    // Don't override if call is passive\n    if (passive && this.poster) {\n      return Promise.reject(new Error('Poster already set'));\n    }\n\n    // Set property synchronously to respect the call order\n    this.media.setAttribute('data-poster', poster);\n\n    // Show the poster\n    this.elements.poster.removeAttribute('hidden');\n\n    // Wait until ui is ready\n    return (\n      ready\n        .call(this)\n        // Load image\n        .then(() => loadImage(poster))\n        .catch((err) => {\n          // Hide poster on error unless it's been set by another call\n          if (poster === this.poster) {\n            ui.togglePoster.call(this, false);\n          }\n          // Rethrow\n          throw err;\n        })\n        .then(() => {\n          // Prevent race conditions\n          if (poster !== this.poster) {\n            throw new Error('setPoster cancelled by later call to setPoster');\n          }\n        })\n        .then(() => {\n          Object.assign(this.elements.poster.style, {\n            backgroundImage: `url('${poster}')`,\n            // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n            backgroundSize: '',\n          });\n\n          ui.togglePoster.call(this, true);\n\n          return poster;\n        })\n    );\n  },\n\n  // Check playing state\n  checkPlaying(event) {\n    // Class hooks\n    toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n    toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n    toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n    // Set state\n    Array.from(this.elements.buttons.play || []).forEach((target) => {\n      Object.assign(target, { pressed: this.playing });\n      target.setAttribute('aria-label', i18n.get(this.playing ? 'pause' : 'play', this.config));\n    });\n\n    // Only update controls on non timeupdate events\n    if (is.event(event) && event.type === 'timeupdate') {\n      return;\n    }\n\n    // Toggle controls\n    ui.toggleControls.call(this);\n  },\n\n  // Check if media is loading\n  checkLoading(event) {\n    this.loading = ['stalled', 'waiting'].includes(event.type);\n\n    // Clear timer\n    clearTimeout(this.timers.loading);\n\n    // Timer to prevent flicker when seeking\n    this.timers.loading = setTimeout(\n      () => {\n        // Update progress bar loading class state\n        toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n        // Update controls visibility\n        ui.toggleControls.call(this);\n      },\n      this.loading ? 250 : 0,\n    );\n  },\n\n  // Toggle controls based on state and `force` argument\n  toggleControls(force) {\n    const { controls: controlsElement } = this.elements;\n\n    if (controlsElement && this.config.hideControls) {\n      // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n      const recentTouchSeek = this.touch && this.lastSeekTime + 2000 > Date.now();\n\n      // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n      this.toggleControls(\n        Boolean(\n          force || this.loading || this.paused || controlsElement.pressed || controlsElement.hover || recentTouchSeek,\n        ),\n      );\n    }\n  },\n\n  // Migrate any custom properties from the media to the parent\n  migrateStyles() {\n    // Loop through values (as they are the keys when the object is spread 🤔)\n    Object.values({ ...this.media.style })\n      // We're only fussed about Plyr specific properties\n      .filter((key) => !is.empty(key) && is.string(key) && key.startsWith('--plyr'))\n      .forEach((key) => {\n        // Set on the container\n        this.elements.container.style.setProperty(key, this.media.style.getPropertyValue(key));\n\n        // Clean up from media element\n        this.media.style.removeProperty(key);\n      });\n\n    // Remove attribute if empty\n    if (is.empty(this.media.style)) {\n      this.media.removeAttribute('style');\n    }\n  },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { getElement, getElements, matches, toggleClass } from './utils/elements';\nimport { off, on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport { silencePromise } from './utils/promise';\nimport { getAspectRatio, setAspectRatio } from './utils/style';\n\nclass Listeners {\n  constructor(player) {\n    this.player = player;\n    this.lastKey = null;\n    this.focusTimer = null;\n    this.lastKeyDown = null;\n\n    this.handleKey = this.handleKey.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.setTabFocus = this.setTabFocus.bind(this);\n    this.firstTouch = this.firstTouch.bind(this);\n  }\n\n  // Handle key presses\n  handleKey(event) {\n    const { player } = this;\n    const { elements } = player;\n    const code = event.keyCode ? event.keyCode : event.which;\n    const pressed = event.type === 'keydown';\n    const repeat = pressed && code === this.lastKey;\n\n    // Bail if a modifier key is set\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    // If the event is bubbled from the media element\n    // Firefox doesn't get the keycode for whatever reason\n    if (!is.number(code)) {\n      return;\n    }\n\n    // Seek by the number keys\n    const seekByKey = () => {\n      // Divide the max duration into 10th's and times by the number value\n      player.currentTime = (player.duration / 10) * (code - 48);\n    };\n\n    // Handle the key on keydown\n    // Reset on keyup\n    if (pressed) {\n      // Check focused element\n      // and if the focused element is not editable (e.g. text input)\n      // and any that accept key input http://webaim.org/techniques/keyboard/\n      const focused = document.activeElement;\n      if (is.element(focused)) {\n        const { editable } = player.config.selectors;\n        const { seek } = elements.inputs;\n\n        if (focused !== seek && matches(focused, editable)) {\n          return;\n        }\n\n        if (event.which === 32 && matches(focused, 'button, [role^=\"menuitem\"]')) {\n          return;\n        }\n      }\n\n      // Which keycodes should we prevent default\n      const preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n      // If the code is found prevent default (e.g. prevent scrolling for arrows)\n      if (preventDefault.includes(code)) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      switch (code) {\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n          // 0-9\n          if (!repeat) {\n            seekByKey();\n          }\n          break;\n\n        case 32:\n        case 75:\n          // Space and K key\n          if (!repeat) {\n            silencePromise(player.togglePlay());\n          }\n          break;\n\n        case 38:\n          // Arrow up\n          player.increaseVolume(0.1);\n          break;\n\n        case 40:\n          // Arrow down\n          player.decreaseVolume(0.1);\n          break;\n\n        case 77:\n          // M key\n          if (!repeat) {\n            player.muted = !player.muted;\n          }\n          break;\n\n        case 39:\n          // Arrow forward\n          player.forward();\n          break;\n\n        case 37:\n          // Arrow back\n          player.rewind();\n          break;\n\n        case 70:\n          // F key\n          player.fullscreen.toggle();\n          break;\n\n        case 67:\n          // C key\n          if (!repeat) {\n            player.toggleCaptions();\n          }\n          break;\n\n        case 76:\n          // L key\n          player.loop = !player.loop;\n          break;\n\n        /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n        default:\n          break;\n      }\n\n      // Escape is handle natively when in full screen\n      // So we only need to worry about non native\n      if (code === 27 && !player.fullscreen.usingNative && player.fullscreen.active) {\n        player.fullscreen.toggle();\n      }\n\n      // Store last code for next cycle\n      this.lastKey = code;\n    } else {\n      this.lastKey = null;\n    }\n  }\n\n  // Toggle menu\n  toggleMenu(event) {\n    controls.toggleMenu.call(this.player, event);\n  }\n\n  // Device is touch enabled\n  firstTouch = () => {\n    const { player } = this;\n    const { elements } = player;\n\n    player.touch = true;\n\n    // Add touch class\n    toggleClass(elements.container, player.config.classNames.isTouch, true);\n  };\n\n  setTabFocus = (event) => {\n    const { player } = this;\n    const { elements } = player;\n\n    clearTimeout(this.focusTimer);\n\n    // Ignore any key other than tab\n    if (event.type === 'keydown' && event.which !== 9) {\n      return;\n    }\n\n    // Store reference to event timeStamp\n    if (event.type === 'keydown') {\n      this.lastKeyDown = event.timeStamp;\n    }\n\n    // Remove current classes\n    const removeCurrent = () => {\n      const className = player.config.classNames.tabFocus;\n      const current = getElements.call(player, `.${className}`);\n      toggleClass(current, className, false);\n    };\n\n    // Determine if a key was pressed to trigger this event\n    const wasKeyDown = event.timeStamp - this.lastKeyDown <= 20;\n\n    // Ignore focus events if a key was pressed prior\n    if (event.type === 'focus' && !wasKeyDown) {\n      return;\n    }\n\n    // Remove all current\n    removeCurrent();\n\n    // Delay the adding of classname until the focus has changed\n    // This event fires before the focusin event\n    if (event.type !== 'focusout') {\n      this.focusTimer = setTimeout(() => {\n        const focused = document.activeElement;\n\n        // Ignore if current focus element isn't inside the player\n        if (!elements.container.contains(focused)) {\n          return;\n        }\n\n        toggleClass(document.activeElement, player.config.classNames.tabFocus, true);\n      }, 10);\n    }\n  };\n\n  // Global window & document listeners\n  global = (toggle = true) => {\n    const { player } = this;\n\n    // Keyboard shortcuts\n    if (player.config.keyboard.global) {\n      toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n    }\n\n    // Click anywhere closes menu\n    toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n    // Detect touch by events\n    once.call(player, document.body, 'touchstart', this.firstTouch);\n\n    // Tab focus detection\n    toggleListener.call(player, document.body, 'keydown focus blur focusout', this.setTabFocus, toggle, false, true);\n  };\n\n  // Container listeners\n  container = () => {\n    const { player } = this;\n    const { config, elements, timers } = player;\n\n    // Keyboard shortcuts\n    if (!config.keyboard.global && config.keyboard.focused) {\n      on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n    }\n\n    // Toggle controls on mouse events and entering fullscreen\n    on.call(\n      player,\n      elements.container,\n      'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n      (event) => {\n        const { controls: controlsElement } = elements;\n\n        // Remove button states for fullscreen\n        if (controlsElement && event.type === 'enterfullscreen') {\n          controlsElement.pressed = false;\n          controlsElement.hover = false;\n        }\n\n        // Show, then hide after a timeout unless another control event occurs\n        const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n        let delay = 0;\n\n        if (show) {\n          ui.toggleControls.call(player, true);\n          // Use longer timeout for touch devices\n          delay = player.touch ? 3000 : 2000;\n        }\n\n        // Clear timer\n        clearTimeout(timers.controls);\n\n        // Set new timer to prevent flicker when seeking\n        timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n      },\n    );\n\n    // Set a gutter for Vimeo\n    const setGutter = (ratio, padding, toggle) => {\n      if (!player.isVimeo || player.config.vimeo.premium) {\n        return;\n      }\n\n      const target = player.elements.wrapper.firstChild;\n      const [, y] = ratio;\n      const [videoX, videoY] = getAspectRatio.call(player);\n\n      target.style.maxWidth = toggle ? `${(y / videoY) * videoX}px` : null;\n      target.style.margin = toggle ? '0 auto' : null;\n    };\n\n    // Resize on fullscreen change\n    const setPlayerSize = (measure) => {\n      // If we don't need to measure the viewport\n      if (!measure) {\n        return setAspectRatio.call(player);\n      }\n\n      const rect = elements.container.getBoundingClientRect();\n      const { width, height } = rect;\n\n      return setAspectRatio.call(player, `${width}:${height}`);\n    };\n\n    const resized = () => {\n      clearTimeout(timers.resized);\n      timers.resized = setTimeout(setPlayerSize, 50);\n    };\n\n    on.call(player, elements.container, 'enterfullscreen exitfullscreen', (event) => {\n      const { target, usingNative } = player.fullscreen;\n\n      // Ignore events not from target\n      if (target !== elements.container) {\n        return;\n      }\n\n      // If it's not an embed and no ratio specified\n      if (!player.isEmbed && is.empty(player.config.ratio)) {\n        return;\n      }\n\n      const isEnter = event.type === 'enterfullscreen';\n      // Set the player size when entering fullscreen to viewport size\n      const { padding, ratio } = setPlayerSize(isEnter);\n\n      // Set Vimeo gutter\n      setGutter(ratio, padding, isEnter);\n\n      // Horrible hack for Safari 14 not repainting properly on entering fullscreen\n      if (isEnter) {\n        setTimeout(() => repaint(elements.container), 100);\n      }\n\n      // If not using native browser fullscreen API, we need to check for resizes of viewport\n      if (!usingNative) {\n        if (isEnter) {\n          on.call(player, window, 'resize', resized);\n        } else {\n          off.call(player, window, 'resize', resized);\n        }\n      }\n    });\n  };\n\n  // Listen for media events\n  media = () => {\n    const { player } = this;\n    const { elements } = player;\n\n    // Time change on media\n    on.call(player, player.media, 'timeupdate seeking seeked', (event) => controls.timeUpdate.call(player, event));\n\n    // Display duration\n    on.call(player, player.media, 'durationchange loadeddata loadedmetadata', (event) =>\n      controls.durationUpdate.call(player, event),\n    );\n\n    // Handle the media finishing\n    on.call(player, player.media, 'ended', () => {\n      // Show poster on end\n      if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n        // Restart\n        player.restart();\n\n        // Call pause otherwise IE11 will start playing the video again\n        player.pause();\n      }\n    });\n\n    // Check for buffer progress\n    on.call(player, player.media, 'progress playing seeking seeked', (event) =>\n      controls.updateProgress.call(player, event),\n    );\n\n    // Handle volume changes\n    on.call(player, player.media, 'volumechange', (event) => controls.updateVolume.call(player, event));\n\n    // Handle play/pause\n    on.call(player, player.media, 'playing play pause ended emptied timeupdate', (event) =>\n      ui.checkPlaying.call(player, event),\n    );\n\n    // Loading state\n    on.call(player, player.media, 'waiting canplay seeked playing', (event) => ui.checkLoading.call(player, event));\n\n    // Click video\n    if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n      // Re-fetch the wrapper\n      const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n      // Bail if there's no wrapper (this should never happen)\n      if (!is.element(wrapper)) {\n        return;\n      }\n\n      // On click play, pause or restart\n      on.call(player, elements.container, 'click', (event) => {\n        const targets = [elements.container, wrapper];\n\n        // Ignore if click if not container or in video wrapper\n        if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n          return;\n        }\n\n        // Touch devices will just show controls (if hidden)\n        if (player.touch && player.config.hideControls) {\n          return;\n        }\n\n        if (player.ended) {\n          this.proxy(event, player.restart, 'restart');\n          this.proxy(\n            event,\n            () => {\n              silencePromise(player.play());\n            },\n            'play',\n          );\n        } else {\n          this.proxy(\n            event,\n            () => {\n              silencePromise(player.togglePlay());\n            },\n            'play',\n          );\n        }\n      });\n    }\n\n    // Disable right click\n    if (player.supported.ui && player.config.disableContextMenu) {\n      on.call(\n        player,\n        elements.wrapper,\n        'contextmenu',\n        (event) => {\n          event.preventDefault();\n        },\n        false,\n      );\n    }\n\n    // Volume change\n    on.call(player, player.media, 'volumechange', () => {\n      // Save to storage\n      player.storage.set({\n        volume: player.volume,\n        muted: player.muted,\n      });\n    });\n\n    // Speed change\n    on.call(player, player.media, 'ratechange', () => {\n      // Update UI\n      controls.updateSetting.call(player, 'speed');\n\n      // Save to storage\n      player.storage.set({ speed: player.speed });\n    });\n\n    // Quality change\n    on.call(player, player.media, 'qualitychange', (event) => {\n      // Update UI\n      controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n    });\n\n    // Update download link when ready and if quality changes\n    on.call(player, player.media, 'ready qualitychange', () => {\n      controls.setDownloadUrl.call(player);\n    });\n\n    // Proxy events to container\n    // Bubble up key events for Edge\n    const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n\n    on.call(player, player.media, proxyEvents, (event) => {\n      let { detail = {} } = event;\n\n      // Get error details from media\n      if (event.type === 'error') {\n        detail = player.media.error;\n      }\n\n      triggerEvent.call(player, elements.container, event.type, true, detail);\n    });\n  };\n\n  // Run default and custom handlers\n  proxy = (event, defaultHandler, customHandlerKey) => {\n    const { player } = this;\n    const customHandler = player.config.listeners[customHandlerKey];\n    const hasCustomHandler = is.function(customHandler);\n    let returned = true;\n\n    // Execute custom handler\n    if (hasCustomHandler) {\n      returned = customHandler.call(player, event);\n    }\n\n    // Only call default handler if not prevented in custom handler\n    if (returned !== false && is.function(defaultHandler)) {\n      defaultHandler.call(player, event);\n    }\n  };\n\n  // Trigger custom and default handlers\n  bind = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n    const { player } = this;\n    const customHandler = player.config.listeners[customHandlerKey];\n    const hasCustomHandler = is.function(customHandler);\n\n    on.call(\n      player,\n      element,\n      type,\n      (event) => this.proxy(event, defaultHandler, customHandlerKey),\n      passive && !hasCustomHandler,\n    );\n  };\n\n  // Listen for control events\n  controls = () => {\n    const { player } = this;\n    const { elements } = player;\n    // IE doesn't support input event, so we fallback to change\n    const inputEvent = browser.isIE ? 'change' : 'input';\n\n    // Play/pause toggle\n    if (elements.buttons.play) {\n      Array.from(elements.buttons.play).forEach((button) => {\n        this.bind(\n          button,\n          'click',\n          () => {\n            silencePromise(player.togglePlay());\n          },\n          'play',\n        );\n      });\n    }\n\n    // Pause\n    this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n    // Rewind\n    this.bind(\n      elements.buttons.rewind,\n      'click',\n      () => {\n        // Record seek time so we can prevent hiding controls for a few seconds after rewind\n        player.lastSeekTime = Date.now();\n        player.rewind();\n      },\n      'rewind',\n    );\n\n    // Rewind\n    this.bind(\n      elements.buttons.fastForward,\n      'click',\n      () => {\n        // Record seek time so we can prevent hiding controls for a few seconds after fast forward\n        player.lastSeekTime = Date.now();\n        player.forward();\n      },\n      'fastForward',\n    );\n\n    // Mute toggle\n    this.bind(\n      elements.buttons.mute,\n      'click',\n      () => {\n        player.muted = !player.muted;\n      },\n      'mute',\n    );\n\n    // Captions toggle\n    this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n    // Download\n    this.bind(\n      elements.buttons.download,\n      'click',\n      () => {\n        triggerEvent.call(player, player.media, 'download');\n      },\n      'download',\n    );\n\n    // Fullscreen toggle\n    this.bind(\n      elements.buttons.fullscreen,\n      'click',\n      () => {\n        player.fullscreen.toggle();\n      },\n      'fullscreen',\n    );\n\n    // Picture-in-Picture\n    this.bind(\n      elements.buttons.pip,\n      'click',\n      () => {\n        player.pip = 'toggle';\n      },\n      'pip',\n    );\n\n    // Airplay\n    this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n    // Settings menu - click toggle\n    this.bind(\n      elements.buttons.settings,\n      'click',\n      (event) => {\n        // Prevent the document click listener closing the menu\n        event.stopPropagation();\n        event.preventDefault();\n\n        controls.toggleMenu.call(player, event);\n      },\n      null,\n      false,\n    ); // Can't be passive as we're preventing default\n\n    // Settings menu - keyboard toggle\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    this.bind(\n      elements.buttons.settings,\n      'keyup',\n      (event) => {\n        const code = event.which;\n\n        // We only care about space and return\n        if (![13, 32].includes(code)) {\n          return;\n        }\n\n        // Because return triggers a click anyway, all we need to do is set focus\n        if (code === 13) {\n          controls.focusFirstMenuItem.call(player, null, true);\n          return;\n        }\n\n        // Prevent scroll\n        event.preventDefault();\n\n        // Prevent playing video (Firefox)\n        event.stopPropagation();\n\n        // Toggle menu\n        controls.toggleMenu.call(player, event);\n      },\n      null,\n      false, // Can't be passive as we're preventing default\n    );\n\n    // Escape closes menu\n    this.bind(elements.settings.menu, 'keydown', (event) => {\n      if (event.which === 27) {\n        controls.toggleMenu.call(player, event);\n      }\n    });\n\n    // Set range input alternative \"value\", which matches the tooltip time (#954)\n    this.bind(elements.inputs.seek, 'mousedown mousemove', (event) => {\n      const rect = elements.progress.getBoundingClientRect();\n      const percent = (100 / rect.width) * (event.pageX - rect.left);\n      event.currentTarget.setAttribute('seek-value', percent);\n    });\n\n    // Pause while seeking\n    this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', (event) => {\n      const seek = event.currentTarget;\n      const code = event.keyCode ? event.keyCode : event.which;\n      const attribute = 'play-on-seeked';\n\n      if (is.keyboardEvent(event) && code !== 39 && code !== 37) {\n        return;\n      }\n\n      // Record seek time so we can prevent hiding controls for a few seconds after seek\n      player.lastSeekTime = Date.now();\n\n      // Was playing before?\n      const play = seek.hasAttribute(attribute);\n      // Done seeking\n      const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n      // If we're done seeking and it was playing, resume playback\n      if (play && done) {\n        seek.removeAttribute(attribute);\n        silencePromise(player.play());\n      } else if (!done && player.playing) {\n        seek.setAttribute(attribute, '');\n        player.pause();\n      }\n    });\n\n    // Fix range inputs on iOS\n    // Super weird iOS bug where after you interact with an <input type=\"range\">,\n    // it takes over further interactions on the page. This is a hack\n    if (browser.isIos) {\n      const inputs = getElements.call(player, 'input[type=\"range\"]');\n      Array.from(inputs).forEach((input) => this.bind(input, inputEvent, (event) => repaint(event.target)));\n    }\n\n    // Seek\n    this.bind(\n      elements.inputs.seek,\n      inputEvent,\n      (event) => {\n        const seek = event.currentTarget;\n        // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n        let seekTo = seek.getAttribute('seek-value');\n\n        if (is.empty(seekTo)) {\n          seekTo = seek.value;\n        }\n\n        seek.removeAttribute('seek-value');\n\n        player.currentTime = (seekTo / seek.max) * player.duration;\n      },\n      'seek',\n    );\n\n    // Seek tooltip\n    this.bind(elements.progress, 'mouseenter mouseleave mousemove', (event) =>\n      controls.updateSeekTooltip.call(player, event),\n    );\n\n    // Preview thumbnails plugin\n    // TODO: Really need to work on some sort of plug-in wide event bus or pub-sub for this\n    this.bind(elements.progress, 'mousemove touchmove', (event) => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.startMove(event);\n      }\n    });\n\n    // Hide thumbnail preview - on mouse click, mouse leave, and video play/seek. All four are required, e.g., for buffering\n    this.bind(elements.progress, 'mouseleave touchend click', () => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.endMove(false, true);\n      }\n    });\n\n    // Show scrubbing preview\n    this.bind(elements.progress, 'mousedown touchstart', (event) => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.startScrubbing(event);\n      }\n    });\n\n    this.bind(elements.progress, 'mouseup touchend', (event) => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.endScrubbing(event);\n      }\n    });\n\n    // Polyfill for lower fill in <input type=\"range\"> for webkit\n    if (browser.isWebkit) {\n      Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach((element) => {\n        this.bind(element, 'input', (event) => controls.updateRangeFill.call(player, event.target));\n      });\n    }\n\n    // Current time invert\n    // Only if one time element is used for both currentTime and duration\n    if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n      this.bind(elements.display.currentTime, 'click', () => {\n        // Do nothing if we're at the start\n        if (player.currentTime === 0) {\n          return;\n        }\n\n        player.config.invertTime = !player.config.invertTime;\n\n        controls.timeUpdate.call(player);\n      });\n    }\n\n    // Volume\n    this.bind(\n      elements.inputs.volume,\n      inputEvent,\n      (event) => {\n        player.volume = event.target.value;\n      },\n      'volume',\n    );\n\n    // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n    this.bind(elements.controls, 'mouseenter mouseleave', (event) => {\n      elements.controls.hover = !player.touch && event.type === 'mouseenter';\n    });\n\n    // Also update controls.hover state for any non-player children of fullscreen element (as above)\n    if (elements.fullscreen) {\n      Array.from(elements.fullscreen.children)\n        .filter((c) => !c.contains(elements.container))\n        .forEach((child) => {\n          this.bind(child, 'mouseenter mouseleave', (event) => {\n            elements.controls.hover = !player.touch && event.type === 'mouseenter';\n          });\n        });\n    }\n\n    // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n    this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', (event) => {\n      elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n    });\n\n    // Show controls when they receive focus (e.g., when using keyboard tab key)\n    this.bind(elements.controls, 'focusin', () => {\n      const { config, timers } = player;\n\n      // Skip transition to prevent focus from scrolling the parent element\n      toggleClass(elements.controls, config.classNames.noTransition, true);\n\n      // Toggle\n      ui.toggleControls.call(player, true);\n\n      // Restore transition\n      setTimeout(() => {\n        toggleClass(elements.controls, config.classNames.noTransition, false);\n      }, 0);\n\n      // Delay a little more for mouse users\n      const delay = this.touch ? 3000 : 4000;\n\n      // Clear timer\n      clearTimeout(timers.controls);\n\n      // Hide again after delay\n      timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n    });\n\n    // Mouse wheel for volume\n    this.bind(\n      elements.inputs.volume,\n      'wheel',\n      (event) => {\n        // Detect \"natural\" scroll - suppored on OS X Safari only\n        // Other browsers on OS X will be inverted until support improves\n        const inverted = event.webkitDirectionInvertedFromDevice;\n        // Get delta from event. Invert if `inverted` is true\n        const [x, y] = [event.deltaX, -event.deltaY].map((value) => (inverted ? -value : value));\n        // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n        const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n        // Change the volume by 2%\n        player.increaseVolume(direction / 50);\n\n        // Don't break page scrolling at max and min\n        const { volume } = player.media;\n        if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n          event.preventDefault();\n        }\n      },\n      'volume',\n      false,\n    );\n  };\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathname = path.replace(/[\\?|#].*$/, ''),\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isLegacyIECss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(pathname)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n *   callback or (3) object literal with success/error arguments, numRetries,\n *   etc.\n * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n *   literal with success/error arguments, numRetries, etc.\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n  return new Promise((resolve, reject) => {\n    loadjs(url, {\n      success: resolve,\n      error: reject,\n    });\n  });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/load-script';\nimport { format, stripHTML } from '../utils/strings';\nimport { setAspectRatio } from '../utils/style';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n  if (is.empty(url)) {\n    return null;\n  }\n\n  if (is.number(Number(url))) {\n    return url;\n  }\n\n  const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n  return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n  if (play && !this.embed.hasPlayed) {\n    this.embed.hasPlayed = true;\n  }\n  if (this.media.paused === play) {\n    this.media.paused = !play;\n    triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n  }\n}\n\nconst vimeo = {\n  setup() {\n    const player = this;\n\n    // Add embed class for responsive\n    toggleClass(player.elements.wrapper, player.config.classNames.embed, true);\n\n    // Set speed options from config\n    player.options.speed = player.config.speed.options;\n\n    // Set intial ratio\n    setAspectRatio.call(player);\n\n    // Load the SDK if not already\n    if (!is.object(window.Vimeo)) {\n      loadScript(player.config.urls.vimeo.sdk)\n        .then(() => {\n          vimeo.ready.call(player);\n        })\n        .catch((error) => {\n          player.debug.warn('Vimeo SDK (player.js) failed to load', error);\n        });\n    } else {\n      vimeo.ready.call(player);\n    }\n  },\n\n  // API Ready\n  ready() {\n    const player = this;\n    const config = player.config.vimeo;\n    const { premium, referrerPolicy, ...frameParams } = config;\n\n    // If the owner has a pro or premium account then we can hide controls etc\n    if (premium) {\n      Object.assign(frameParams, {\n        controls: false,\n        sidedock: false,\n      });\n    }\n\n    // Get Vimeo params for the iframe\n    const params = buildUrlParams({\n      loop: player.config.loop.active,\n      autoplay: player.autoplay,\n      muted: player.muted,\n      gesture: 'media',\n      playsinline: !this.config.fullscreen.iosNative,\n      ...frameParams,\n    });\n\n    // Get the source URL or ID\n    let source = player.media.getAttribute('src');\n\n    // Get from <div> if needed\n    if (is.empty(source)) {\n      source = player.media.getAttribute(player.config.attributes.embed.id);\n    }\n\n    const id = parseId(source);\n    // Build an iframe\n    const iframe = createElement('iframe');\n    const src = format(player.config.urls.vimeo.iframe, id, params);\n    iframe.setAttribute('src', src);\n    iframe.setAttribute('allowfullscreen', '');\n    iframe.setAttribute('allow', 'autoplay,fullscreen,picture-in-picture');\n\n    // Set the referrer policy if required\n    if (!is.empty(referrerPolicy)) {\n      iframe.setAttribute('referrerPolicy', referrerPolicy);\n    }\n\n    // Inject the package\n    if (premium || !config.customControls) {\n      iframe.setAttribute('data-poster', player.poster);\n      player.media = replaceElement(iframe, player.media);\n    } else {\n      const wrapper = createElement('div', {\n        class: player.config.classNames.embedContainer,\n        'data-poster': player.poster,\n      });\n      wrapper.appendChild(iframe);\n      player.media = replaceElement(wrapper, player.media);\n    }\n\n    // Get poster image\n    if (!config.customControls) {\n      fetch(format(player.config.urls.vimeo.api, src)).then((response) => {\n        if (is.empty(response) || !response.thumbnail_url) {\n          return;\n        }\n\n        // Set and show poster\n        ui.setPoster.call(player, response.thumbnail_url).catch(() => {});\n      });\n    }\n\n    // Setup instance\n    // https://github.com/vimeo/player.js\n    player.embed = new window.Vimeo.Player(iframe, {\n      autopause: player.config.autopause,\n      muted: player.muted,\n    });\n\n    player.media.paused = true;\n    player.media.currentTime = 0;\n\n    // Disable native text track rendering\n    if (player.supported.ui) {\n      player.embed.disableTextTrack();\n    }\n\n    // Create a faux HTML5 API using the Vimeo API\n    player.media.play = () => {\n      assurePlaybackState.call(player, true);\n      return player.embed.play();\n    };\n\n    player.media.pause = () => {\n      assurePlaybackState.call(player, false);\n      return player.embed.pause();\n    };\n\n    player.media.stop = () => {\n      player.pause();\n      player.currentTime = 0;\n    };\n\n    // Seeking\n    let { currentTime } = player.media;\n    Object.defineProperty(player.media, 'currentTime', {\n      get() {\n        return currentTime;\n      },\n      set(time) {\n        // Vimeo will automatically play on seek if the video hasn't been played before\n\n        // Get current paused state and volume etc\n        const { embed, media, paused, volume } = player;\n        const restorePause = paused && !embed.hasPlayed;\n\n        // Set seeking state and trigger event\n        media.seeking = true;\n        triggerEvent.call(player, media, 'seeking');\n\n        // If paused, mute until seek is complete\n        Promise.resolve(restorePause && embed.setVolume(0))\n          // Seek\n          .then(() => embed.setCurrentTime(time))\n          // Restore paused\n          .then(() => restorePause && embed.pause())\n          // Restore volume\n          .then(() => restorePause && embed.setVolume(volume))\n          .catch(() => {\n            // Do nothing\n          });\n      },\n    });\n\n    // Playback speed\n    let speed = player.config.speed.selected;\n    Object.defineProperty(player.media, 'playbackRate', {\n      get() {\n        return speed;\n      },\n      set(input) {\n        player.embed\n          .setPlaybackRate(input)\n          .then(() => {\n            speed = input;\n            triggerEvent.call(player, player.media, 'ratechange');\n          })\n          .catch(() => {\n            // Cannot set Playback Rate, Video is probably not on Pro account\n            player.options.speed = [1];\n          });\n      },\n    });\n\n    // Volume\n    let { volume } = player.config;\n    Object.defineProperty(player.media, 'volume', {\n      get() {\n        return volume;\n      },\n      set(input) {\n        player.embed.setVolume(input).then(() => {\n          volume = input;\n          triggerEvent.call(player, player.media, 'volumechange');\n        });\n      },\n    });\n\n    // Muted\n    let { muted } = player.config;\n    Object.defineProperty(player.media, 'muted', {\n      get() {\n        return muted;\n      },\n      set(input) {\n        const toggle = is.boolean(input) ? input : false;\n\n        player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n          muted = toggle;\n          triggerEvent.call(player, player.media, 'volumechange');\n        });\n      },\n    });\n\n    // Loop\n    let { loop } = player.config;\n    Object.defineProperty(player.media, 'loop', {\n      get() {\n        return loop;\n      },\n      set(input) {\n        const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n        player.embed.setLoop(toggle).then(() => {\n          loop = toggle;\n        });\n      },\n    });\n\n    // Source\n    let currentSrc;\n    player.embed\n      .getVideoUrl()\n      .then((value) => {\n        currentSrc = value;\n        controls.setDownloadUrl.call(player);\n      })\n      .catch((error) => {\n        this.debug.warn(error);\n      });\n\n    Object.defineProperty(player.media, 'currentSrc', {\n      get() {\n        return currentSrc;\n      },\n    });\n\n    // Ended\n    Object.defineProperty(player.media, 'ended', {\n      get() {\n        return player.currentTime === player.duration;\n      },\n    });\n\n    // Set aspect ratio based on video size\n    Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then((dimensions) => {\n      const [width, height] = dimensions;\n      player.embed.ratio = [width, height];\n      setAspectRatio.call(this);\n    });\n\n    // Set autopause\n    player.embed.setAutopause(player.config.autopause).then((state) => {\n      player.config.autopause = state;\n    });\n\n    // Get title\n    player.embed.getVideoTitle().then((title) => {\n      player.config.title = title;\n      ui.setTitle.call(this);\n    });\n\n    // Get current time\n    player.embed.getCurrentTime().then((value) => {\n      currentTime = value;\n      triggerEvent.call(player, player.media, 'timeupdate');\n    });\n\n    // Get duration\n    player.embed.getDuration().then((value) => {\n      player.media.duration = value;\n      triggerEvent.call(player, player.media, 'durationchange');\n    });\n\n    // Get captions\n    player.embed.getTextTracks().then((tracks) => {\n      player.media.textTracks = tracks;\n      captions.setup.call(player);\n    });\n\n    player.embed.on('cuechange', ({ cues = [] }) => {\n      const strippedCues = cues.map((cue) => stripHTML(cue.text));\n      captions.updateCues.call(player, strippedCues);\n    });\n\n    player.embed.on('loaded', () => {\n      // Assure state and events are updated on autoplay\n      player.embed.getPaused().then((paused) => {\n        assurePlaybackState.call(player, !paused);\n        if (!paused) {\n          triggerEvent.call(player, player.media, 'playing');\n        }\n      });\n\n      if (is.element(player.embed.element) && player.supported.ui) {\n        const frame = player.embed.element;\n\n        // Fix keyboard focus issues\n        // https://github.com/sampotts/plyr/issues/317\n        frame.setAttribute('tabindex', -1);\n      }\n    });\n\n    player.embed.on('bufferstart', () => {\n      triggerEvent.call(player, player.media, 'waiting');\n    });\n\n    player.embed.on('bufferend', () => {\n      triggerEvent.call(player, player.media, 'playing');\n    });\n\n    player.embed.on('play', () => {\n      assurePlaybackState.call(player, true);\n      triggerEvent.call(player, player.media, 'playing');\n    });\n\n    player.embed.on('pause', () => {\n      assurePlaybackState.call(player, false);\n    });\n\n    player.embed.on('timeupdate', (data) => {\n      player.media.seeking = false;\n      currentTime = data.seconds;\n      triggerEvent.call(player, player.media, 'timeupdate');\n    });\n\n    player.embed.on('progress', (data) => {\n      player.media.buffered = data.percent;\n      triggerEvent.call(player, player.media, 'progress');\n\n      // Check all loaded\n      if (parseInt(data.percent, 10) === 1) {\n        triggerEvent.call(player, player.media, 'canplaythrough');\n      }\n\n      // Get duration as if we do it before load, it gives an incorrect value\n      // https://github.com/sampotts/plyr/issues/891\n      player.embed.getDuration().then((value) => {\n        if (value !== player.media.duration) {\n          player.media.duration = value;\n          triggerEvent.call(player, player.media, 'durationchange');\n        }\n      });\n    });\n\n    player.embed.on('seeked', () => {\n      player.media.seeking = false;\n      triggerEvent.call(player, player.media, 'seeked');\n    });\n\n    player.embed.on('ended', () => {\n      player.media.paused = true;\n      triggerEvent.call(player, player.media, 'ended');\n    });\n\n    player.embed.on('error', (detail) => {\n      player.media.error = detail;\n      triggerEvent.call(player, player.media, 'error');\n    });\n\n    // Rebuild UI\n    if (config.customControls) {\n      setTimeout(() => ui.build.call(player), 0);\n    }\n  },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/load-image';\nimport loadScript from '../utils/load-script';\nimport { extend } from '../utils/objects';\nimport { format, generateId } from '../utils/strings';\nimport { setAspectRatio } from '../utils/style';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n  if (is.empty(url)) {\n    return null;\n  }\n\n  const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n  if (play && !this.embed.hasPlayed) {\n    this.embed.hasPlayed = true;\n  }\n  if (this.media.paused === play) {\n    this.media.paused = !play;\n    triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n  }\n}\n\nfunction getHost(config) {\n  if (config.noCookie) {\n    return 'https://www.youtube-nocookie.com';\n  }\n\n  if (window.location.protocol === 'http:') {\n    return 'http://www.youtube.com';\n  }\n\n  // Use YouTube's default\n  return undefined;\n}\n\nconst youtube = {\n  setup() {\n    // Add embed class for responsive\n    toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n    // Setup API\n    if (is.object(window.YT) && is.function(window.YT.Player)) {\n      youtube.ready.call(this);\n    } else {\n      // Reference current global callback\n      const callback = window.onYouTubeIframeAPIReady;\n\n      // Set callback to process queue\n      window.onYouTubeIframeAPIReady = () => {\n        // Call global callback if set\n        if (is.function(callback)) {\n          callback();\n        }\n\n        youtube.ready.call(this);\n      };\n\n      // Load the SDK\n      loadScript(this.config.urls.youtube.sdk).catch((error) => {\n        this.debug.warn('YouTube API failed to load', error);\n      });\n    }\n  },\n\n  // Get the media title\n  getTitle(videoId) {\n    const url = format(this.config.urls.youtube.api, videoId);\n\n    fetch(url)\n      .then((data) => {\n        if (is.object(data)) {\n          const { title, height, width } = data;\n\n          // Set title\n          this.config.title = title;\n          ui.setTitle.call(this);\n\n          // Set aspect ratio\n          this.embed.ratio = [width, height];\n        }\n\n        setAspectRatio.call(this);\n      })\n      .catch(() => {\n        // Set aspect ratio\n        setAspectRatio.call(this);\n      });\n  },\n\n  // API ready\n  ready() {\n    const player = this;\n    const config = player.config.youtube;\n    // Ignore already setup (race condition)\n    const currentId = player.media && player.media.getAttribute('id');\n    if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n      return;\n    }\n\n    // Get the source URL or ID\n    let source = player.media.getAttribute('src');\n\n    // Get from <div> if needed\n    if (is.empty(source)) {\n      source = player.media.getAttribute(this.config.attributes.embed.id);\n    }\n\n    // Replace the <iframe> with a <div> due to YouTube API issues\n    const videoId = parseId(source);\n    const id = generateId(player.provider);\n    // Replace media element\n    const container = createElement('div', { id, 'data-poster': config.customControls ? player.poster : undefined });\n    player.media = replaceElement(container, player.media);\n\n    // Only load the poster when using custom controls\n    if (config.customControls) {\n      const posterSrc = (s) => `https://i.ytimg.com/vi/${videoId}/${s}default.jpg`;\n\n      // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n      loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n        .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n        .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n        .then((image) => ui.setPoster.call(player, image.src))\n        .then((src) => {\n          // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n          if (!src.includes('maxres')) {\n            player.elements.poster.style.backgroundSize = 'cover';\n          }\n        })\n        .catch(() => {});\n    }\n\n    // Setup instance\n    // https://developers.google.com/youtube/iframe_api_reference\n    player.embed = new window.YT.Player(player.media, {\n      videoId,\n      host: getHost(config),\n      playerVars: extend(\n        {},\n        {\n          // Autoplay\n          autoplay: player.config.autoplay ? 1 : 0,\n          // iframe interface language\n          hl: player.config.hl,\n          // Only show controls if not fully supported or opted out\n          controls: player.supported.ui && config.customControls ? 0 : 1,\n          // Disable keyboard as we handle it\n          disablekb: 1,\n          // Allow iOS inline playback\n          playsinline: !player.config.fullscreen.iosNative ? 1 : 0,\n          // Captions are flaky on YouTube\n          cc_load_policy: player.captions.active ? 1 : 0,\n          cc_lang_pref: player.config.captions.language,\n          // Tracking for stats\n          widget_referrer: window ? window.location.href : null,\n        },\n        config,\n      ),\n      events: {\n        onError(event) {\n          // YouTube may fire onError twice, so only handle it once\n          if (!player.media.error) {\n            const code = event.data;\n            // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n            const message =\n              {\n                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n              }[code] || 'An unknown error occured';\n\n            player.media.error = { code, message };\n\n            triggerEvent.call(player, player.media, 'error');\n          }\n        },\n        onPlaybackRateChange(event) {\n          // Get the instance\n          const instance = event.target;\n\n          // Get current speed\n          player.media.playbackRate = instance.getPlaybackRate();\n\n          triggerEvent.call(player, player.media, 'ratechange');\n        },\n        onReady(event) {\n          // Bail if onReady has already been called. See issue #1108\n          if (is.function(player.media.play)) {\n            return;\n          }\n          // Get the instance\n          const instance = event.target;\n\n          // Get the title\n          youtube.getTitle.call(player, videoId);\n\n          // Create a faux HTML5 API using the YouTube API\n          player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            instance.playVideo();\n          };\n\n          player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            instance.pauseVideo();\n          };\n\n          player.media.stop = () => {\n            instance.stopVideo();\n          };\n\n          player.media.duration = instance.getDuration();\n          player.media.paused = true;\n\n          // Seeking\n          player.media.currentTime = 0;\n          Object.defineProperty(player.media, 'currentTime', {\n            get() {\n              return Number(instance.getCurrentTime());\n            },\n            set(time) {\n              // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n              if (player.paused && !player.embed.hasPlayed) {\n                player.embed.mute();\n              }\n\n              // Set seeking state and trigger event\n              player.media.seeking = true;\n              triggerEvent.call(player, player.media, 'seeking');\n\n              // Seek after events sent\n              instance.seekTo(time);\n            },\n          });\n\n          // Playback speed\n          Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n              return instance.getPlaybackRate();\n            },\n            set(input) {\n              instance.setPlaybackRate(input);\n            },\n          });\n\n          // Volume\n          let { volume } = player.config;\n          Object.defineProperty(player.media, 'volume', {\n            get() {\n              return volume;\n            },\n            set(input) {\n              volume = input;\n              instance.setVolume(volume * 100);\n              triggerEvent.call(player, player.media, 'volumechange');\n            },\n          });\n\n          // Muted\n          let { muted } = player.config;\n          Object.defineProperty(player.media, 'muted', {\n            get() {\n              return muted;\n            },\n            set(input) {\n              const toggle = is.boolean(input) ? input : muted;\n              muted = toggle;\n              instance[toggle ? 'mute' : 'unMute']();\n              instance.setVolume(volume * 100);\n              triggerEvent.call(player, player.media, 'volumechange');\n            },\n          });\n\n          // Source\n          Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n              return instance.getVideoUrl();\n            },\n          });\n\n          // Ended\n          Object.defineProperty(player.media, 'ended', {\n            get() {\n              return player.currentTime === player.duration;\n            },\n          });\n\n          // Get available speeds\n          const speeds = instance.getAvailablePlaybackRates();\n          // Filter based on config\n          player.options.speed = speeds.filter((s) => player.config.speed.options.includes(s));\n\n          // Set the tabindex to avoid focus entering iframe\n          if (player.supported.ui && config.customControls) {\n            player.media.setAttribute('tabindex', -1);\n          }\n\n          triggerEvent.call(player, player.media, 'timeupdate');\n          triggerEvent.call(player, player.media, 'durationchange');\n\n          // Reset timer\n          clearInterval(player.timers.buffering);\n\n          // Setup buffering\n          player.timers.buffering = setInterval(() => {\n            // Get loaded % from YouTube\n            player.media.buffered = instance.getVideoLoadedFraction();\n\n            // Trigger progress only when we actually buffer something\n            if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n              triggerEvent.call(player, player.media, 'progress');\n            }\n\n            // Set last buffer point\n            player.media.lastBuffered = player.media.buffered;\n\n            // Bail if we're at 100%\n            if (player.media.buffered === 1) {\n              clearInterval(player.timers.buffering);\n\n              // Trigger event\n              triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n          }, 200);\n\n          // Rebuild UI\n          if (config.customControls) {\n            setTimeout(() => ui.build.call(player), 50);\n          }\n        },\n        onStateChange(event) {\n          // Get the instance\n          const instance = event.target;\n\n          // Reset timer\n          clearInterval(player.timers.playing);\n\n          const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n          if (seeked) {\n            // Unset seeking and fire seeked event\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n          }\n\n          // Handle events\n          // -1   Unstarted\n          // 0    Ended\n          // 1    Playing\n          // 2    Paused\n          // 3    Buffering\n          // 5    Video cued\n          switch (event.data) {\n            case -1:\n              // Update scrubber\n              triggerEvent.call(player, player.media, 'timeupdate');\n\n              // Get loaded % from YouTube\n              player.media.buffered = instance.getVideoLoadedFraction();\n              triggerEvent.call(player, player.media, 'progress');\n\n              break;\n\n            case 0:\n              assurePlaybackState.call(player, false);\n\n              // YouTube doesn't support loop for a single video, so mimick it.\n              if (player.media.loop) {\n                // YouTube needs a call to `stopVideo` before playing again\n                instance.stopVideo();\n                instance.playVideo();\n              } else {\n                triggerEvent.call(player, player.media, 'ended');\n              }\n\n              break;\n\n            case 1:\n              // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n              if (config.customControls && !player.config.autoplay && player.media.paused && !player.embed.hasPlayed) {\n                player.media.pause();\n              } else {\n                assurePlaybackState.call(player, true);\n\n                triggerEvent.call(player, player.media, 'playing');\n\n                // Poll to get playback progress\n                player.timers.playing = setInterval(() => {\n                  triggerEvent.call(player, player.media, 'timeupdate');\n                }, 50);\n\n                // Check duration again due to YouTube bug\n                // https://github.com/sampotts/plyr/issues/374\n                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                if (player.media.duration !== instance.getDuration()) {\n                  player.media.duration = instance.getDuration();\n                  triggerEvent.call(player, player.media, 'durationchange');\n                }\n              }\n\n              break;\n\n            case 2:\n              // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n              if (!player.muted) {\n                player.embed.unMute();\n              }\n              assurePlaybackState.call(player, false);\n\n              break;\n\n            case 3:\n              // Trigger waiting event to add loading classes to container as the video buffers.\n              triggerEvent.call(player, player.media, 'waiting');\n\n              break;\n\n            default:\n              break;\n          }\n\n          triggerEvent.call(player, player.elements.container, 'statechange', false, {\n            code: event.data,\n          });\n        },\n      },\n    });\n  },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n  // Setup media\n  setup() {\n    // If there's no media, bail\n    if (!this.media) {\n      this.debug.warn('No media element found!');\n      return;\n    }\n\n    // Add type class\n    toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n    // Add provider class\n    toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n    // Add video class for embeds\n    // This will require changes if audio embeds are added\n    if (this.isEmbed) {\n      toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n    }\n\n    // Inject the player wrapper\n    if (this.isVideo) {\n      // Create the wrapper div\n      this.elements.wrapper = createElement('div', {\n        class: this.config.classNames.video,\n      });\n\n      // Wrap the video in a container\n      wrap(this.media, this.elements.wrapper);\n\n      // Poster image container\n      this.elements.poster = createElement('div', {\n        class: this.config.classNames.poster,\n        hidden: '',\n      });\n\n      this.elements.wrapper.appendChild(this.elements.poster);\n    }\n\n    if (this.isHTML5) {\n      html5.setup.call(this);\n    } else if (this.isYouTube) {\n      youtube.setup.call(this);\n    } else if (this.isVimeo) {\n      vimeo.setup.call(this);\n    }\n  },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport i18n from '../utils/i18n';\nimport is from '../utils/is';\nimport loadScript from '../utils/load-script';\nimport { silencePromise } from '../utils/promise';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nconst destroy = (instance) => {\n  // Destroy our adsManager\n  if (instance.manager) {\n    instance.manager.destroy();\n  }\n\n  // Destroy our adsManager\n  if (instance.elements.displayContainer) {\n    instance.elements.displayContainer.destroy();\n  }\n\n  instance.elements.container.remove();\n};\n\nclass Ads {\n  /**\n   * Ads constructor.\n   * @param {Object} player\n   * @return {Ads}\n   */\n  constructor(player) {\n    this.player = player;\n    this.config = player.config.ads;\n    this.playing = false;\n    this.initialized = false;\n    this.elements = {\n      container: null,\n      displayContainer: null,\n    };\n    this.manager = null;\n    this.loader = null;\n    this.cuePoints = null;\n    this.events = {};\n    this.safetyTimer = null;\n    this.countdownTimer = null;\n\n    // Setup a promise to resolve when the IMA manager is ready\n    this.managerPromise = new Promise((resolve, reject) => {\n      // The ad is loaded and ready\n      this.on('loaded', resolve);\n\n      // Ads failed\n      this.on('error', reject);\n    });\n\n    this.load();\n  }\n\n  get enabled() {\n    const { config } = this;\n\n    return (\n      this.player.isHTML5 &&\n      this.player.isVideo &&\n      config.enabled &&\n      (!is.empty(config.publisherId) || is.url(config.tagUrl))\n    );\n  }\n\n  /**\n   * Load the IMA SDK\n   */\n  load = () => {\n    if (!this.enabled) {\n      return;\n    }\n\n    // Check if the Google IMA3 SDK is loaded or load it ourselves\n    if (!is.object(window.google) || !is.object(window.google.ima)) {\n      loadScript(this.player.config.urls.googleIMA.sdk)\n        .then(() => {\n          this.ready();\n        })\n        .catch(() => {\n          // Script failed to load or is blocked\n          this.trigger('error', new Error('Google IMA SDK failed to load'));\n        });\n    } else {\n      this.ready();\n    }\n  };\n\n  /**\n   * Get the ads instance ready\n   */\n  ready = () => {\n    // Double check we're enabled\n    if (!this.enabled) {\n      destroy(this);\n    }\n\n    // Start ticking our safety timer. If the whole advertisement\n    // thing doesn't resolve within our set time; we bail\n    this.startSafetyTimer(12000, 'ready()');\n\n    // Clear the safety timer\n    this.managerPromise.then(() => {\n      this.clearSafetyTimer('onAdsManagerLoaded()');\n    });\n\n    // Set listeners on the Plyr instance\n    this.listeners();\n\n    // Setup the IMA SDK\n    this.setupIMA();\n  };\n\n  // Build the tag URL\n  get tagUrl() {\n    const { config } = this;\n\n    if (is.url(config.tagUrl)) {\n      return config.tagUrl;\n    }\n\n    const params = {\n      AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n      AV_CHANNELID: '5a0458dc28a06145e4519d21',\n      AV_URL: window.location.hostname,\n      cb: Date.now(),\n      AV_WIDTH: 640,\n      AV_HEIGHT: 480,\n      AV_CDIM2: config.publisherId,\n    };\n\n    const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n    return `${base}?${buildUrlParams(params)}`;\n  }\n\n  /**\n   * In order for the SDK to display ads for our video, we need to tell it where to put them,\n   * so here we define our ad container. This div is set up to render on top of the video player.\n   * Using the code below, we tell the SDK to render ads within that div. We also provide a\n   * handle to the content video player - the SDK will poll the current time of our player to\n   * properly place mid-rolls. After we create the ad display container, we initialize it. On\n   * mobile devices, this initialization is done as the result of a user action.\n   */\n  setupIMA = () => {\n    // Create the container for our advertisements\n    this.elements.container = createElement('div', {\n      class: this.player.config.classNames.ads,\n    });\n\n    this.player.elements.container.appendChild(this.elements.container);\n\n    // So we can run VPAID2\n    google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n    // Set language\n    google.ima.settings.setLocale(this.player.config.ads.language);\n\n    // Set playback for iOS10+\n    google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline);\n\n    // We assume the adContainer is the video container of the plyr element that will house the ads\n    this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container, this.player.media);\n\n    // Create ads loader\n    this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n    // Listen and respond to ads loaded and error events\n    this.loader.addEventListener(\n      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n      (event) => this.onAdsManagerLoaded(event),\n      false,\n    );\n    this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (error) => this.onAdError(error), false);\n\n    // Request video ads to be pre-loaded\n    this.requestAds();\n  };\n\n  /**\n   * Request advertisements\n   */\n  requestAds = () => {\n    const { container } = this.player.elements;\n\n    try {\n      // Request video ads\n      const request = new google.ima.AdsRequest();\n      request.adTagUrl = this.tagUrl;\n\n      // Specify the linear and nonlinear slot sizes. This helps the SDK\n      // to select the correct creative if multiple are returned\n      request.linearAdSlotWidth = container.offsetWidth;\n      request.linearAdSlotHeight = container.offsetHeight;\n      request.nonLinearAdSlotWidth = container.offsetWidth;\n      request.nonLinearAdSlotHeight = container.offsetHeight;\n\n      // We only overlay ads as we only support video.\n      request.forceNonLinearFullSlot = false;\n\n      // Mute based on current state\n      request.setAdWillPlayMuted(!this.player.muted);\n\n      this.loader.requestAds(request);\n    } catch (e) {\n      this.onAdError(e);\n    }\n  };\n\n  /**\n   * Update the ad countdown\n   * @param {Boolean} start\n   */\n  pollCountdown = (start = false) => {\n    if (!start) {\n      clearInterval(this.countdownTimer);\n      this.elements.container.removeAttribute('data-badge-text');\n      return;\n    }\n\n    const update = () => {\n      const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n      const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n      this.elements.container.setAttribute('data-badge-text', label);\n    };\n\n    this.countdownTimer = setInterval(update, 100);\n  };\n\n  /**\n   * This method is called whenever the ads are ready inside the AdDisplayContainer\n   * @param {Event} adsManagerLoadedEvent\n   */\n  onAdsManagerLoaded = (event) => {\n    // Load could occur after a source change (race condition)\n    if (!this.enabled) {\n      return;\n    }\n\n    // Get the ads manager\n    const settings = new google.ima.AdsRenderingSettings();\n\n    // Tell the SDK to save and restore content video state on our behalf\n    settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n    settings.enablePreloading = true;\n\n    // The SDK is polling currentTime on the contentPlayback. And needs a duration\n    // so it can determine when to start the mid- and post-roll\n    this.manager = event.getAdsManager(this.player, settings);\n\n    // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n    this.cuePoints = this.manager.getCuePoints();\n\n    // Add listeners to the required events\n    // Advertisement error events\n    this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (error) => this.onAdError(error));\n\n    // Advertisement regular events\n    Object.keys(google.ima.AdEvent.Type).forEach((type) => {\n      this.manager.addEventListener(google.ima.AdEvent.Type[type], (e) => this.onAdEvent(e));\n    });\n\n    // Resolve our adsManager\n    this.trigger('loaded');\n  };\n\n  addCuePoints = () => {\n    // Add advertisement cue's within the time line if available\n    if (!is.empty(this.cuePoints)) {\n      this.cuePoints.forEach((cuePoint) => {\n        if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n          const seekElement = this.player.elements.progress;\n\n          if (is.element(seekElement)) {\n            const cuePercentage = (100 / this.player.duration) * cuePoint;\n            const cue = createElement('span', {\n              class: this.player.config.classNames.cues,\n            });\n\n            cue.style.left = `${cuePercentage.toString()}%`;\n            seekElement.appendChild(cue);\n          }\n        }\n      });\n    }\n  };\n\n  /**\n   * This is where all the event handling takes place. Retrieve the ad from the event. Some\n   * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n   * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n   * @param {Event} event\n   */\n  onAdEvent = (event) => {\n    const { container } = this.player.elements;\n    // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n    // don't have ad object associated\n    const ad = event.getAd();\n    const adData = event.getAdData();\n\n    // Proxy event\n    const dispatchEvent = (type) => {\n      triggerEvent.call(this.player, this.player.media, `ads${type.replace(/_/g, '').toLowerCase()}`);\n    };\n\n    // Bubble the event\n    dispatchEvent(event.type);\n\n    switch (event.type) {\n      case google.ima.AdEvent.Type.LOADED:\n        // This is the first event sent for an ad - it is possible to determine whether the\n        // ad is a video ad or an overlay\n        this.trigger('loaded');\n\n        // Start countdown\n        this.pollCountdown(true);\n\n        if (!ad.isLinear()) {\n          // Position AdDisplayContainer correctly for overlay\n          ad.width = container.offsetWidth;\n          ad.height = container.offsetHeight;\n        }\n\n        // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n        // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n\n        break;\n\n      case google.ima.AdEvent.Type.STARTED:\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        break;\n\n      case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n        // All ads for the current videos are done. We can now request new advertisements\n        // in case the video is re-played\n\n        // TODO: Example for what happens when a next video in a playlist would be loaded.\n        // So here we load a new video when all ads are done.\n        // Then we load new ads within a new adsManager. When the video\n        // Is started - after - the ads are loaded, then we get ads.\n        // You can also easily test cancelling and reloading by running\n        // player.ads.cancel() and player.ads.play from the console I guess.\n        // this.player.source = {\n        //     type: 'video',\n        //     title: 'View From A Blue Moon',\n        //     sources: [{\n        //         src:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n        // 'video/mp4', }], poster:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n        // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n        // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n        // };\n\n        // TODO: So there is still this thing where a video should only be allowed to start\n        // playing when the IMA SDK is ready or has failed\n\n        if (this.player.ended) {\n          this.loadAds();\n        } else {\n          // The SDK won't allow new ads to be called without receiving a contentComplete()\n          this.loader.contentComplete();\n        }\n\n        break;\n\n      case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n        // This event indicates the ad has started - the video player can adjust the UI,\n        // for example display a pause button and remaining time. Fired when content should\n        // be paused. This usually happens right before an ad is about to cover the content\n\n        this.pauseContent();\n\n        break;\n\n      case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n        // This event indicates the ad has finished - the video player can perform\n        // appropriate UI actions, such as removing the timer for remaining time detection.\n        // Fired when content should be resumed. This usually happens when an ad finishes\n        // or collapses\n\n        this.pollCountdown();\n\n        this.resumeContent();\n\n        break;\n\n      case google.ima.AdEvent.Type.LOG:\n        if (adData.adError) {\n          this.player.debug.warn(`Non-fatal ad error: ${adData.adError.getMessage()}`);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Any ad error handling comes through here\n   * @param {Event} event\n   */\n  onAdError = (event) => {\n    this.cancel();\n    this.player.debug.warn('Ads error', event);\n  };\n\n  /**\n   * Setup hooks for Plyr and window events. This ensures\n   * the mid- and post-roll launch at the correct time. And\n   * resize the advertisement when the player resizes\n   */\n  listeners = () => {\n    const { container } = this.player.elements;\n    let time;\n\n    this.player.on('canplay', () => {\n      this.addCuePoints();\n    });\n\n    this.player.on('ended', () => {\n      this.loader.contentComplete();\n    });\n\n    this.player.on('timeupdate', () => {\n      time = this.player.currentTime;\n    });\n\n    this.player.on('seeked', () => {\n      const seekedTime = this.player.currentTime;\n\n      if (is.empty(this.cuePoints)) {\n        return;\n      }\n\n      this.cuePoints.forEach((cuePoint, index) => {\n        if (time < cuePoint && cuePoint < seekedTime) {\n          this.manager.discardAdBreak();\n          this.cuePoints.splice(index, 1);\n        }\n      });\n    });\n\n    // Listen to the resizing of the window. And resize ad accordingly\n    // TODO: eventually implement ResizeObserver\n    window.addEventListener('resize', () => {\n      if (this.manager) {\n        this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n      }\n    });\n  };\n\n  /**\n   * Initialize the adsManager and start playing advertisements\n   */\n  play = () => {\n    const { container } = this.player.elements;\n\n    if (!this.managerPromise) {\n      this.resumeContent();\n    }\n\n    // Play the requested advertisement whenever the adsManager is ready\n    this.managerPromise\n      .then(() => {\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Initialize the container. Must be done via a user action on mobile devices\n        this.elements.displayContainer.initialize();\n\n        try {\n          if (!this.initialized) {\n            // Initialize the ads manager. Ad rules playlist will start at this time\n            this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n            // Call play to start showing the ad. Single video and overlay ads will\n            // start at this time; the call will be ignored for ad rules\n            this.manager.start();\n          }\n\n          this.initialized = true;\n        } catch (adError) {\n          // An error may be thrown if there was a problem with the\n          // VAST response\n          this.onAdError(adError);\n        }\n      })\n      .catch(() => {});\n  };\n\n  /**\n   * Resume our video\n   */\n  resumeContent = () => {\n    // Hide the advertisement container\n    this.elements.container.style.zIndex = '';\n\n    // Ad is stopped\n    this.playing = false;\n\n    // Play video\n    silencePromise(this.player.media.play());\n  };\n\n  /**\n   * Pause our video\n   */\n  pauseContent = () => {\n    // Show the advertisement container\n    this.elements.container.style.zIndex = 3;\n\n    // Ad is playing\n    this.playing = true;\n\n    // Pause our video.\n    this.player.media.pause();\n  };\n\n  /**\n   * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n   * allowed to call new ads based on google policies, as they interpret this as an accidental\n   * video requests. https://developers.google.com/interactive-\n   * media-ads/docs/sdks/android/faq#8\n   */\n  cancel = () => {\n    // Pause our video\n    if (this.initialized) {\n      this.resumeContent();\n    }\n\n    // Tell our instance that we're done for now\n    this.trigger('error');\n\n    // Re-create our adsManager\n    this.loadAds();\n  };\n\n  /**\n   * Re-create our adsManager\n   */\n  loadAds = () => {\n    // Tell our adsManager to go bye bye\n    this.managerPromise\n      .then(() => {\n        // Destroy our adsManager\n        if (this.manager) {\n          this.manager.destroy();\n        }\n\n        // Re-set our adsManager promises\n        this.managerPromise = new Promise((resolve) => {\n          this.on('loaded', resolve);\n          this.player.debug.log(this.manager);\n        });\n        // Now that the manager has been destroyed set it to also be un-initialized\n        this.initialized = false;\n\n        // Now request some new advertisements\n        this.requestAds();\n      })\n      .catch(() => {});\n  };\n\n  /**\n   * Handles callbacks after an ad event was invoked\n   * @param {String} event - Event type\n   */\n  trigger = (event, ...args) => {\n    const handlers = this.events[event];\n\n    if (is.array(handlers)) {\n      handlers.forEach((handler) => {\n        if (is.function(handler)) {\n          handler.apply(this, args);\n        }\n      });\n    }\n  };\n\n  /**\n   * Add event listeners\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   * @return {Ads}\n   */\n  on = (event, callback) => {\n    if (!is.array(this.events[event])) {\n      this.events[event] = [];\n    }\n\n    this.events[event].push(callback);\n\n    return this;\n  };\n\n  /**\n   * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n   * The advertisement has 12 seconds to get its things together. We stop this timer when the\n   * advertisement is playing, or when a user action is required to start, then we clear the\n   * timer on ad ready\n   * @param {Number} time\n   * @param {String} from\n   */\n  startSafetyTimer = (time, from) => {\n    this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n    this.safetyTimer = setTimeout(() => {\n      this.cancel();\n      this.clearSafetyTimer('startSafetyTimer()');\n    }, time);\n  };\n\n  /**\n   * Clear our safety timer(s)\n   * @param {String} from\n   */\n  clearSafetyTimer = (from) => {\n    if (!is.nullOrUndefined(this.safetyTimer)) {\n      this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n      clearTimeout(this.safetyTimer);\n      this.safetyTimer = null;\n    }\n  };\n}\n\nexport default Ads;\n","import { createElement } from '../utils/elements';\nimport { once } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport { formatTime } from '../utils/time';\n\n// Arg: vttDataString example: \"WEBVTT\\n\\n1\\n00:00:05.000 --> 00:00:10.000\\n1080p-00001.jpg\"\nconst parseVtt = (vttDataString) => {\n  const processedList = [];\n  const frames = vttDataString.split(/\\r\\n\\r\\n|\\n\\n|\\r\\r/);\n\n  frames.forEach((frame) => {\n    const result = {};\n    const lines = frame.split(/\\r\\n|\\n|\\r/);\n\n    lines.forEach((line) => {\n      if (!is.number(result.startTime)) {\n        // The line with start and end times on it is the first line of interest\n        const matchTimes = line.match(\n          /([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/,\n        ); // Note that this currently ignores caption formatting directives that are optionally on the end of this line - fine for non-captions VTT\n\n        if (matchTimes) {\n          result.startTime =\n            Number(matchTimes[1] || 0) * 60 * 60 +\n            Number(matchTimes[2]) * 60 +\n            Number(matchTimes[3]) +\n            Number(`0.${matchTimes[4]}`);\n          result.endTime =\n            Number(matchTimes[6] || 0) * 60 * 60 +\n            Number(matchTimes[7]) * 60 +\n            Number(matchTimes[8]) +\n            Number(`0.${matchTimes[9]}`);\n        }\n      } else if (!is.empty(line.trim()) && is.empty(result.text)) {\n        // If we already have the startTime, then we're definitely up to the text line(s)\n        const lineSplit = line.trim().split('#xywh=');\n        [result.text] = lineSplit;\n\n        // If there's content in lineSplit[1], then we have sprites. If not, then it's just one frame per image\n        if (lineSplit[1]) {\n          [result.x, result.y, result.w, result.h] = lineSplit[1].split(',');\n        }\n      }\n    });\n\n    if (result.text) {\n      processedList.push(result);\n    }\n  });\n\n  return processedList;\n};\n\n/**\n * Preview thumbnails for seek hover and scrubbing\n * Seeking: Hover over the seek bar (desktop only): shows a small preview container above the seek bar\n * Scrubbing: Click and drag the seek bar (desktop and mobile): shows the preview image over the entire video, as if the video is scrubbing at very high speed\n *\n * Notes:\n * - Thumbs are set via JS settings on Plyr init, not HTML5 'track' property. Using the track property would be a bit gross, because it doesn't support custom 'kinds'. kind=metadata might be used for something else, and we want to allow multiple thumbnails tracks. Tracks must have a unique combination of 'kind' and 'label'. We would have to do something like kind=metadata,label=thumbnails1 / kind=metadata,label=thumbnails2. Square peg, round hole\n * - VTT info: the image URL is relative to the VTT, not the current document. But if the url starts with a slash, it will naturally be relative to the current domain. https://support.jwplayer.com/articles/how-to-add-preview-thumbnails\n * - This implementation uses multiple separate img elements. Other implementations use background-image on one element. This would be nice and simple, but Firefox and Safari have flickering issues with replacing backgrounds of larger images. It seems that YouTube perhaps only avoids this because they don't have the option for high-res previews (even the fullscreen ones, when mousedown/seeking). Images appear over the top of each other, and previous ones are discarded once the new ones have been rendered\n */\n\nconst fitRatio = (ratio, outer) => {\n  const targetRatio = outer.width / outer.height;\n  const result = {};\n  if (ratio > targetRatio) {\n    result.width = outer.width;\n    result.height = (1 / ratio) * outer.width;\n  } else {\n    result.height = outer.height;\n    result.width = ratio * outer.height;\n  }\n\n  return result;\n};\n\nclass PreviewThumbnails {\n  /**\n   * PreviewThumbnails constructor.\n   * @param {Plyr} player\n   * @return {PreviewThumbnails}\n   */\n  constructor(player) {\n    this.player = player;\n    this.thumbnails = [];\n    this.loaded = false;\n    this.lastMouseMoveTime = Date.now();\n    this.mouseDown = false;\n    this.loadedImages = [];\n\n    this.elements = {\n      thumb: {},\n      scrubbing: {},\n    };\n\n    this.load();\n  }\n\n  get enabled() {\n    return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled;\n  }\n\n  load = () => {\n    // Toggle the regular seek tooltip\n    if (this.player.elements.display.seekTooltip) {\n      this.player.elements.display.seekTooltip.hidden = this.enabled;\n    }\n\n    if (!this.enabled) {\n      return;\n    }\n\n    this.getThumbnails().then(() => {\n      if (!this.enabled) {\n        return;\n      }\n\n      // Render DOM elements\n      this.render();\n\n      // Check to see if thumb container size was specified manually in CSS\n      this.determineContainerAutoSizing();\n\n      this.loaded = true;\n    });\n  };\n\n  // Download VTT files and parse them\n  getThumbnails = () => {\n    return new Promise((resolve) => {\n      const { src } = this.player.config.previewThumbnails;\n\n      if (is.empty(src)) {\n        throw new Error('Missing previewThumbnails.src config attribute');\n      }\n\n      // Resolve promise\n      const sortAndResolve = () => {\n        // Sort smallest to biggest (e.g., [120p, 480p, 1080p])\n        this.thumbnails.sort((x, y) => x.height - y.height);\n\n        this.player.debug.log('Preview thumbnails', this.thumbnails);\n\n        resolve();\n      };\n\n      // Via callback()\n      if (is.function(src)) {\n        src((thumbnails) => {\n          this.thumbnails = thumbnails;\n          sortAndResolve();\n        });\n      }\n      // VTT urls\n      else {\n        // If string, convert into single-element list\n        const urls = is.string(src) ? [src] : src;\n        // Loop through each src URL. Download and process the VTT file, storing the resulting data in this.thumbnails\n        const promises = urls.map((u) => this.getThumbnail(u));\n        // Resolve\n        Promise.all(promises).then(sortAndResolve);\n      }\n    });\n  };\n\n  // Process individual VTT file\n  getThumbnail = (url) => {\n    return new Promise((resolve) => {\n      fetch(url).then((response) => {\n        const thumbnail = {\n          frames: parseVtt(response),\n          height: null,\n          urlPrefix: '',\n        };\n\n        // If the URLs don't start with '/', then we need to set their relative path to be the location of the VTT file\n        // If the URLs do start with '/', then they obviously don't need a prefix, so it will remain blank\n        // If the thumbnail URLs start with with none of '/', 'http://' or 'https://', then we need to set their relative path to be the location of the VTT file\n        if (\n          !thumbnail.frames[0].text.startsWith('/') &&\n          !thumbnail.frames[0].text.startsWith('http://') &&\n          !thumbnail.frames[0].text.startsWith('https://')\n        ) {\n          thumbnail.urlPrefix = url.substring(0, url.lastIndexOf('/') + 1);\n        }\n\n        // Download the first frame, so that we can determine/set the height of this thumbnailsDef\n        const tempImage = new Image();\n\n        tempImage.onload = () => {\n          thumbnail.height = tempImage.naturalHeight;\n          thumbnail.width = tempImage.naturalWidth;\n\n          this.thumbnails.push(thumbnail);\n\n          resolve();\n        };\n\n        tempImage.src = thumbnail.urlPrefix + thumbnail.frames[0].text;\n      });\n    });\n  };\n\n  startMove = (event) => {\n    if (!this.loaded) {\n      return;\n    }\n\n    if (!is.event(event) || !['touchmove', 'mousemove'].includes(event.type)) {\n      return;\n    }\n\n    // Wait until media has a duration\n    if (!this.player.media.duration) {\n      return;\n    }\n\n    if (event.type === 'touchmove') {\n      // Calculate seek hover position as approx video seconds\n      this.seekTime = this.player.media.duration * (this.player.elements.inputs.seek.value / 100);\n    } else {\n      // Calculate seek hover position as approx video seconds\n      const clientRect = this.player.elements.progress.getBoundingClientRect();\n      const percentage = (100 / clientRect.width) * (event.pageX - clientRect.left);\n      this.seekTime = this.player.media.duration * (percentage / 100);\n\n      if (this.seekTime < 0) {\n        // The mousemove fires for 10+px out to the left\n        this.seekTime = 0;\n      }\n\n      if (this.seekTime > this.player.media.duration - 1) {\n        // Took 1 second off the duration for safety, because different players can disagree on the real duration of a video\n        this.seekTime = this.player.media.duration - 1;\n      }\n\n      this.mousePosX = event.pageX;\n\n      // Set time text inside image container\n      this.elements.thumb.time.innerText = formatTime(this.seekTime);\n    }\n\n    // Download and show image\n    this.showImageAtCurrentTime();\n  };\n\n  endMove = () => {\n    this.toggleThumbContainer(false, true);\n  };\n\n  startScrubbing = (event) => {\n    // Only act on left mouse button (0), or touch device (event.button does not exist or is false)\n    if (is.nullOrUndefined(event.button) || event.button === false || event.button === 0) {\n      this.mouseDown = true;\n\n      // Wait until media has a duration\n      if (this.player.media.duration) {\n        this.toggleScrubbingContainer(true);\n        this.toggleThumbContainer(false, true);\n\n        // Download and show image\n        this.showImageAtCurrentTime();\n      }\n    }\n  };\n\n  endScrubbing = () => {\n    this.mouseDown = false;\n\n    // Hide scrubbing preview. But wait until the video has successfully seeked before hiding the scrubbing preview\n    if (Math.ceil(this.lastTime) === Math.ceil(this.player.media.currentTime)) {\n      // The video was already seeked/loaded at the chosen time - hide immediately\n      this.toggleScrubbingContainer(false);\n    } else {\n      // The video hasn't seeked yet. Wait for that\n      once.call(this.player, this.player.media, 'timeupdate', () => {\n        // Re-check mousedown - we might have already started scrubbing again\n        if (!this.mouseDown) {\n          this.toggleScrubbingContainer(false);\n        }\n      });\n    }\n  };\n\n  /**\n   * Setup hooks for Plyr and window events\n   */\n  listeners = () => {\n    // Hide thumbnail preview - on mouse click, mouse leave (in listeners.js for now), and video play/seek. All four are required, e.g., for buffering\n    this.player.on('play', () => {\n      this.toggleThumbContainer(false, true);\n    });\n\n    this.player.on('seeked', () => {\n      this.toggleThumbContainer(false);\n    });\n\n    this.player.on('timeupdate', () => {\n      this.lastTime = this.player.media.currentTime;\n    });\n  };\n\n  /**\n   * Create HTML elements for image containers\n   */\n  render = () => {\n    // Create HTML element: plyr__preview-thumbnail-container\n    this.elements.thumb.container = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.thumbContainer,\n    });\n\n    // Wrapper for the image for styling\n    this.elements.thumb.imageContainer = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.imageContainer,\n    });\n    this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);\n\n    // Create HTML element, parent+span: time text (e.g., 01:32:00)\n    const timeContainer = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.timeContainer,\n    });\n\n    this.elements.thumb.time = createElement('span', {}, '00:00');\n    timeContainer.appendChild(this.elements.thumb.time);\n\n    this.elements.thumb.container.appendChild(timeContainer);\n\n    // Inject the whole thumb\n    if (is.element(this.player.elements.progress)) {\n      this.player.elements.progress.appendChild(this.elements.thumb.container);\n    }\n\n    // Create HTML element: plyr__preview-scrubbing-container\n    this.elements.scrubbing.container = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.scrubbingContainer,\n    });\n\n    this.player.elements.wrapper.appendChild(this.elements.scrubbing.container);\n  };\n\n  destroy = () => {\n    if (this.elements.thumb.container) {\n      this.elements.thumb.container.remove();\n    }\n    if (this.elements.scrubbing.container) {\n      this.elements.scrubbing.container.remove();\n    }\n  };\n\n  showImageAtCurrentTime = () => {\n    if (this.mouseDown) {\n      this.setScrubbingContainerSize();\n    } else {\n      this.setThumbContainerSizeAndPos();\n    }\n\n    // Find the desired thumbnail index\n    // TODO: Handle a video longer than the thumbs where thumbNum is null\n    const thumbNum = this.thumbnails[0].frames.findIndex(\n      (frame) => this.seekTime >= frame.startTime && this.seekTime <= frame.endTime,\n    );\n    const hasThumb = thumbNum >= 0;\n    let qualityIndex = 0;\n\n    // Show the thumb container if we're not scrubbing\n    if (!this.mouseDown) {\n      this.toggleThumbContainer(hasThumb);\n    }\n\n    // No matching thumb found\n    if (!hasThumb) {\n      return;\n    }\n\n    // Check to see if we've already downloaded higher quality versions of this image\n    this.thumbnails.forEach((thumbnail, index) => {\n      if (this.loadedImages.includes(thumbnail.frames[thumbNum].text)) {\n        qualityIndex = index;\n      }\n    });\n\n    // Only proceed if either thumbnum or thumbfilename has changed\n    if (thumbNum !== this.showingThumb) {\n      this.showingThumb = thumbNum;\n      this.loadImage(qualityIndex);\n    }\n  };\n\n  // Show the image that's currently specified in this.showingThumb\n  loadImage = (qualityIndex = 0) => {\n    const thumbNum = this.showingThumb;\n    const thumbnail = this.thumbnails[qualityIndex];\n    const { urlPrefix } = thumbnail;\n    const frame = thumbnail.frames[thumbNum];\n    const thumbFilename = thumbnail.frames[thumbNum].text;\n    const thumbUrl = urlPrefix + thumbFilename;\n\n    if (!this.currentImageElement || this.currentImageElement.dataset.filename !== thumbFilename) {\n      // If we're already loading a previous image, remove its onload handler - we don't want it to load after this one\n      // Only do this if not using sprites. Without sprites we really want to show as many images as possible, as a best-effort\n      if (this.loadingImage && this.usingSprites) {\n        this.loadingImage.onload = null;\n      }\n\n      // We're building and adding a new image. In other implementations of similar functionality (YouTube), background image\n      // is instead used. But this causes issues with larger images in Firefox and Safari - switching between background\n      // images causes a flicker. Putting a new image over the top does not\n      const previewImage = new Image();\n      previewImage.src = thumbUrl;\n      previewImage.dataset.index = thumbNum;\n      previewImage.dataset.filename = thumbFilename;\n      this.showingThumbFilename = thumbFilename;\n\n      this.player.debug.log(`Loading image: ${thumbUrl}`);\n\n      // For some reason, passing the named function directly causes it to execute immediately. So I've wrapped it in an anonymous function...\n      previewImage.onload = () => this.showImage(previewImage, frame, qualityIndex, thumbNum, thumbFilename, true);\n      this.loadingImage = previewImage;\n      this.removeOldImages(previewImage);\n    } else {\n      // Update the existing image\n      this.showImage(this.currentImageElement, frame, qualityIndex, thumbNum, thumbFilename, false);\n      this.currentImageElement.dataset.index = thumbNum;\n      this.removeOldImages(this.currentImageElement);\n    }\n  };\n\n  showImage = (previewImage, frame, qualityIndex, thumbNum, thumbFilename, newImage = true) => {\n    this.player.debug.log(\n      `Showing thumb: ${thumbFilename}. num: ${thumbNum}. qual: ${qualityIndex}. newimg: ${newImage}`,\n    );\n    this.setImageSizeAndOffset(previewImage, frame);\n\n    if (newImage) {\n      this.currentImageContainer.appendChild(previewImage);\n      this.currentImageElement = previewImage;\n\n      if (!this.loadedImages.includes(thumbFilename)) {\n        this.loadedImages.push(thumbFilename);\n      }\n    }\n\n    // Preload images before and after the current one\n    // Show higher quality of the same frame\n    // Each step here has a short time delay, and only continues if still hovering/seeking the same spot. This is to protect slow connections from overloading\n    this.preloadNearby(thumbNum, true)\n      .then(this.preloadNearby(thumbNum, false))\n      .then(this.getHigherQuality(qualityIndex, previewImage, frame, thumbFilename));\n  };\n\n  // Remove all preview images that aren't the designated current image\n  removeOldImages = (currentImage) => {\n    // Get a list of all images, convert it from a DOM list to an array\n    Array.from(this.currentImageContainer.children).forEach((image) => {\n      if (image.tagName.toLowerCase() !== 'img') {\n        return;\n      }\n\n      const removeDelay = this.usingSprites ? 500 : 1000;\n\n      if (image.dataset.index !== currentImage.dataset.index && !image.dataset.deleting) {\n        // Wait 200ms, as the new image can take some time to show on certain browsers (even though it was downloaded before showing). This will prevent flicker, and show some generosity towards slower clients\n        // First set attribute 'deleting' to prevent multi-handling of this on repeat firing of this function\n        // eslint-disable-next-line no-param-reassign\n        image.dataset.deleting = true;\n\n        // This has to be set before the timeout - to prevent issues switching between hover and scrub\n        const { currentImageContainer } = this;\n\n        setTimeout(() => {\n          currentImageContainer.removeChild(image);\n          this.player.debug.log(`Removing thumb: ${image.dataset.filename}`);\n        }, removeDelay);\n      }\n    });\n  };\n\n  // Preload images before and after the current one. Only if the user is still hovering/seeking the same frame\n  // This will only preload the lowest quality\n  preloadNearby = (thumbNum, forward = true) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const oldThumbFilename = this.thumbnails[0].frames[thumbNum].text;\n\n        if (this.showingThumbFilename === oldThumbFilename) {\n          // Find the nearest thumbs with different filenames. Sometimes it'll be the next index, but in the case of sprites, it might be 100+ away\n          let thumbnailsClone;\n          if (forward) {\n            thumbnailsClone = this.thumbnails[0].frames.slice(thumbNum);\n          } else {\n            thumbnailsClone = this.thumbnails[0].frames.slice(0, thumbNum).reverse();\n          }\n\n          let foundOne = false;\n\n          thumbnailsClone.forEach((frame) => {\n            const newThumbFilename = frame.text;\n\n            if (newThumbFilename !== oldThumbFilename) {\n              // Found one with a different filename. Make sure it hasn't already been loaded on this page visit\n              if (!this.loadedImages.includes(newThumbFilename)) {\n                foundOne = true;\n                this.player.debug.log(`Preloading thumb filename: ${newThumbFilename}`);\n\n                const { urlPrefix } = this.thumbnails[0];\n                const thumbURL = urlPrefix + newThumbFilename;\n                const previewImage = new Image();\n                previewImage.src = thumbURL;\n                previewImage.onload = () => {\n                  this.player.debug.log(`Preloaded thumb filename: ${newThumbFilename}`);\n                  if (!this.loadedImages.includes(newThumbFilename)) this.loadedImages.push(newThumbFilename);\n\n                  // We don't resolve until the thumb is loaded\n                  resolve();\n                };\n              }\n            }\n          });\n\n          // If there are none to preload then we want to resolve immediately\n          if (!foundOne) {\n            resolve();\n          }\n        }\n      }, 300);\n    });\n  };\n\n  // If user has been hovering current image for half a second, look for a higher quality one\n  getHigherQuality = (currentQualityIndex, previewImage, frame, thumbFilename) => {\n    if (currentQualityIndex < this.thumbnails.length - 1) {\n      // Only use the higher quality version if it's going to look any better - if the current thumb is of a lower pixel density than the thumbnail container\n      let previewImageHeight = previewImage.naturalHeight;\n\n      if (this.usingSprites) {\n        previewImageHeight = frame.h;\n      }\n\n      if (previewImageHeight < this.thumbContainerHeight) {\n        // Recurse back to the loadImage function - show a higher quality one, but only if the viewer is on this frame for a while\n        setTimeout(() => {\n          // Make sure the mouse hasn't already moved on and started hovering at another image\n          if (this.showingThumbFilename === thumbFilename) {\n            this.player.debug.log(`Showing higher quality thumb for: ${thumbFilename}`);\n            this.loadImage(currentQualityIndex + 1);\n          }\n        }, 300);\n      }\n    }\n  };\n\n  get currentImageContainer() {\n    if (this.mouseDown) {\n      return this.elements.scrubbing.container;\n    }\n\n    return this.elements.thumb.imageContainer;\n  }\n\n  get usingSprites() {\n    return Object.keys(this.thumbnails[0].frames[0]).includes('w');\n  }\n\n  get thumbAspectRatio() {\n    if (this.usingSprites) {\n      return this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h;\n    }\n\n    return this.thumbnails[0].width / this.thumbnails[0].height;\n  }\n\n  get thumbContainerHeight() {\n    if (this.mouseDown) {\n      const { height } = fitRatio(this.thumbAspectRatio, {\n        width: this.player.media.clientWidth,\n        height: this.player.media.clientHeight,\n      });\n      return height;\n    }\n\n    // If css is used this needs to return the css height for sprites to work (see setImageSizeAndOffset)\n    if (this.sizeSpecifiedInCSS) {\n      return this.elements.thumb.imageContainer.clientHeight;\n    }\n\n    return Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4);\n  }\n\n  get currentImageElement() {\n    if (this.mouseDown) {\n      return this.currentScrubbingImageElement;\n    }\n\n    return this.currentThumbnailImageElement;\n  }\n\n  set currentImageElement(element) {\n    if (this.mouseDown) {\n      this.currentScrubbingImageElement = element;\n    } else {\n      this.currentThumbnailImageElement = element;\n    }\n  }\n\n  toggleThumbContainer = (toggle = false, clearShowing = false) => {\n    const className = this.player.config.classNames.previewThumbnails.thumbContainerShown;\n    this.elements.thumb.container.classList.toggle(className, toggle);\n\n    if (!toggle && clearShowing) {\n      this.showingThumb = null;\n      this.showingThumbFilename = null;\n    }\n  };\n\n  toggleScrubbingContainer = (toggle = false) => {\n    const className = this.player.config.classNames.previewThumbnails.scrubbingContainerShown;\n    this.elements.scrubbing.container.classList.toggle(className, toggle);\n\n    if (!toggle) {\n      this.showingThumb = null;\n      this.showingThumbFilename = null;\n    }\n  };\n\n  determineContainerAutoSizing = () => {\n    if (this.elements.thumb.imageContainer.clientHeight > 20 || this.elements.thumb.imageContainer.clientWidth > 20) {\n      // This will prevent auto sizing in this.setThumbContainerSizeAndPos()\n      this.sizeSpecifiedInCSS = true;\n    }\n  };\n\n  // Set the size to be about a quarter of the size of video. Unless option dynamicSize === false, in which case it needs to be set in CSS\n  setThumbContainerSizeAndPos = () => {\n    if (!this.sizeSpecifiedInCSS) {\n      const thumbWidth = Math.floor(this.thumbContainerHeight * this.thumbAspectRatio);\n      this.elements.thumb.imageContainer.style.height = `${this.thumbContainerHeight}px`;\n      this.elements.thumb.imageContainer.style.width = `${thumbWidth}px`;\n    } else if (\n      this.elements.thumb.imageContainer.clientHeight > 20 &&\n      this.elements.thumb.imageContainer.clientWidth < 20\n    ) {\n      const thumbWidth = Math.floor(this.elements.thumb.imageContainer.clientHeight * this.thumbAspectRatio);\n      this.elements.thumb.imageContainer.style.width = `${thumbWidth}px`;\n    } else if (\n      this.elements.thumb.imageContainer.clientHeight < 20 &&\n      this.elements.thumb.imageContainer.clientWidth > 20\n    ) {\n      const thumbHeight = Math.floor(this.elements.thumb.imageContainer.clientWidth / this.thumbAspectRatio);\n      this.elements.thumb.imageContainer.style.height = `${thumbHeight}px`;\n    }\n\n    this.setThumbContainerPos();\n  };\n\n  setThumbContainerPos = () => {\n    const seekbarRect = this.player.elements.progress.getBoundingClientRect();\n    const plyrRect = this.player.elements.container.getBoundingClientRect();\n    const { container } = this.elements.thumb;\n    // Find the lowest and highest desired left-position, so we don't slide out the side of the video container\n    const minVal = plyrRect.left - seekbarRect.left + 10;\n    const maxVal = plyrRect.right - seekbarRect.left - container.clientWidth - 10;\n    // Set preview container position to: mousepos, minus seekbar.left, minus half of previewContainer.clientWidth\n    let previewPos = this.mousePosX - seekbarRect.left - container.clientWidth / 2;\n\n    if (previewPos < minVal) {\n      previewPos = minVal;\n    }\n\n    if (previewPos > maxVal) {\n      previewPos = maxVal;\n    }\n\n    container.style.left = `${previewPos}px`;\n  };\n\n  // Can't use 100% width, in case the video is a different aspect ratio to the video container\n  setScrubbingContainerSize = () => {\n    const { width, height } = fitRatio(this.thumbAspectRatio, {\n      width: this.player.media.clientWidth,\n      height: this.player.media.clientHeight,\n    });\n    this.elements.scrubbing.container.style.width = `${width}px`;\n    this.elements.scrubbing.container.style.height = `${height}px`;\n  };\n\n  // Sprites need to be offset to the correct location\n  setImageSizeAndOffset = (previewImage, frame) => {\n    if (!this.usingSprites) {\n      return;\n    }\n\n    // Find difference between height and preview container height\n    const multiplier = this.thumbContainerHeight / frame.h;\n\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.height = `${previewImage.naturalHeight * multiplier}px`;\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.width = `${previewImage.naturalWidth * multiplier}px`;\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.left = `-${frame.x * multiplier}px`;\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.top = `-${frame.y * multiplier}px`;\n  };\n}\n\nexport default PreviewThumbnails;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport PreviewThumbnails from './plugins/preview-thumbnails';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n  // Add elements to HTML5 media (source, tracks, etc)\n  insertElements(type, attributes) {\n    if (is.string(attributes)) {\n      insertElement(type, this.media, {\n        src: attributes,\n      });\n    } else if (is.array(attributes)) {\n      attributes.forEach((attribute) => {\n        insertElement(type, this.media, attribute);\n      });\n    }\n  },\n\n  // Update source\n  // Sources are not checked for support so be careful\n  change(input) {\n    if (!getDeep(input, 'sources.length')) {\n      this.debug.warn('Invalid source format');\n      return;\n    }\n\n    // Cancel current network requests\n    html5.cancelRequests.call(this);\n\n    // Destroy instance and re-setup\n    this.destroy.call(\n      this,\n      () => {\n        // Reset quality options\n        this.options.quality = [];\n\n        // Remove elements\n        removeElement(this.media);\n        this.media = null;\n\n        // Reset class name\n        if (is.element(this.elements.container)) {\n          this.elements.container.removeAttribute('class');\n        }\n\n        // Set the type and provider\n        const { sources, type } = input;\n        const [{ provider = providers.html5, src }] = sources;\n        const tagName = provider === 'html5' ? type : 'div';\n        const attributes = provider === 'html5' ? {} : { src };\n\n        Object.assign(this, {\n          provider,\n          type,\n          // Check for support\n          supported: support.check(type, provider, this.config.playsinline),\n          // Create new element\n          media: createElement(tagName, attributes),\n        });\n\n        // Inject the new element\n        this.elements.container.appendChild(this.media);\n\n        // Autoplay the new source?\n        if (is.boolean(input.autoplay)) {\n          this.config.autoplay = input.autoplay;\n        }\n\n        // Set attributes for audio and video\n        if (this.isHTML5) {\n          if (this.config.crossorigin) {\n            this.media.setAttribute('crossorigin', '');\n          }\n          if (this.config.autoplay) {\n            this.media.setAttribute('autoplay', '');\n          }\n          if (!is.empty(input.poster)) {\n            this.poster = input.poster;\n          }\n          if (this.config.loop.active) {\n            this.media.setAttribute('loop', '');\n          }\n          if (this.config.muted) {\n            this.media.setAttribute('muted', '');\n          }\n          if (this.config.playsinline) {\n            this.media.setAttribute('playsinline', '');\n          }\n        }\n\n        // Restore class hook\n        ui.addStyleHook.call(this);\n\n        // Set new sources for html5\n        if (this.isHTML5) {\n          source.insertElements.call(this, 'source', sources);\n        }\n\n        // Set video title\n        this.config.title = input.title;\n\n        // Set up from scratch\n        media.setup.call(this);\n\n        // HTML5 stuff\n        if (this.isHTML5) {\n          // Setup captions\n          if (Object.keys(input).includes('tracks')) {\n            source.insertElements.call(this, 'track', input.tracks);\n          }\n        }\n\n        // If HTML5 or embed but not fully supported, setupInterface and call ready now\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n          // Setup interface\n          ui.build.call(this);\n        }\n\n        // Load HTML5 sources\n        if (this.isHTML5) {\n          this.media.load();\n        }\n\n        // Update previewThumbnails config & reload plugin\n        if (!is.empty(input.previewThumbnails)) {\n          Object.assign(this.config.previewThumbnails, input.previewThumbnails);\n\n          // Cleanup previewThumbnails plugin if it was loaded\n          if (this.previewThumbnails && this.previewThumbnails.loaded) {\n            this.previewThumbnails.destroy();\n            this.previewThumbnails = null;\n          }\n\n          // Create new instance if it is still enabled\n          if (this.config.previewThumbnails.enabled) {\n            this.previewThumbnails = new PreviewThumbnails(this);\n          }\n        }\n\n        // Update the fullscreen support\n        this.fullscreen.update();\n      },\n      true,\n    );\n  },\n};\n\nexport default source;\n","/**\n * Returns a number whose value is limited to the given range.\n *\n * Example: limit the output of this computation to between 0 and 255\n * (x * 255).clamp(0, 255)\n *\n * @param {Number} input\n * @param {Number} min The lower boundary of the output range\n * @param {Number} max The upper boundary of the output range\n * @returns A number in the range [min, max]\n * @type Number\n */\nexport function clamp(input = 0, min = 0, max = 255) {\n  return Math.min(Math.max(input, min), max);\n}\n\nexport default { clamp };\n","// ==========================================================================\n// Plyr\n// plyr.js v3.6.3\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { pip } from './config/states';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport html5 from './html5';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport PreviewThumbnails from './plugins/preview-thumbnails';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/load-sprite';\nimport { clamp } from './utils/numbers';\nimport { cloneDeep, extend } from './utils/objects';\nimport { silencePromise } from './utils/promise';\nimport { getAspectRatio, reduceAspectRatio, setAspectRatio, validateRatio } from './utils/style';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n  constructor(target, options) {\n    this.timers = {};\n\n    // State\n    this.ready = false;\n    this.loading = false;\n    this.failed = false;\n\n    // Touch device\n    this.touch = support.touch;\n\n    // Set the media element\n    this.media = target;\n\n    // String selector passed\n    if (is.string(this.media)) {\n      this.media = document.querySelectorAll(this.media);\n    }\n\n    // jQuery, NodeList or Array passed, use first element\n    if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n      // eslint-disable-next-line\n      this.media = this.media[0];\n    }\n\n    // Set config\n    this.config = extend(\n      {},\n      defaults,\n      Plyr.defaults,\n      options || {},\n      (() => {\n        try {\n          return JSON.parse(this.media.getAttribute('data-plyr-config'));\n        } catch (e) {\n          return {};\n        }\n      })(),\n    );\n\n    // Elements cache\n    this.elements = {\n      container: null,\n      fullscreen: null,\n      captions: null,\n      buttons: {},\n      display: {},\n      progress: {},\n      inputs: {},\n      settings: {\n        popup: null,\n        menu: null,\n        panels: {},\n        buttons: {},\n      },\n    };\n\n    // Captions\n    this.captions = {\n      active: null,\n      currentTrack: -1,\n      meta: new WeakMap(),\n    };\n\n    // Fullscreen\n    this.fullscreen = {\n      active: false,\n    };\n\n    // Options\n    this.options = {\n      speed: [],\n      quality: [],\n    };\n\n    // Debugging\n    // TODO: move to globals\n    this.debug = new Console(this.config.debug);\n\n    // Log config options and support\n    this.debug.log('Config', this.config);\n    this.debug.log('Support', support);\n\n    // We need an element to setup\n    if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n      this.debug.error('Setup failed: no suitable element passed');\n      return;\n    }\n\n    // Bail if the element is initialized\n    if (this.media.plyr) {\n      this.debug.warn('Target already setup');\n      return;\n    }\n\n    // Bail if not enabled\n    if (!this.config.enabled) {\n      this.debug.error('Setup failed: disabled by config');\n      return;\n    }\n\n    // Bail if disabled or no basic support\n    // You may want to disable certain UAs etc\n    if (!support.check().api) {\n      this.debug.error('Setup failed: no support');\n      return;\n    }\n\n    // Cache original element state for .destroy()\n    const clone = this.media.cloneNode(true);\n    clone.autoplay = false;\n    this.elements.original = clone;\n\n    // Set media type based on tag or data attribute\n    // Supported: video, audio, vimeo, youtube\n    const type = this.media.tagName.toLowerCase();\n    // Embed properties\n    let iframe = null;\n    let url = null;\n\n    // Different setup based on type\n    switch (type) {\n      case 'div':\n        // Find the frame\n        iframe = this.media.querySelector('iframe');\n\n        // <iframe> type\n        if (is.element(iframe)) {\n          // Detect provider\n          url = parseUrl(iframe.getAttribute('src'));\n          this.provider = getProviderByUrl(url.toString());\n\n          // Rework elements\n          this.elements.container = this.media;\n          this.media = iframe;\n\n          // Reset classname\n          this.elements.container.className = '';\n\n          // Get attributes from URL and set config\n          if (url.search.length) {\n            const truthy = ['1', 'true'];\n\n            if (truthy.includes(url.searchParams.get('autoplay'))) {\n              this.config.autoplay = true;\n            }\n            if (truthy.includes(url.searchParams.get('loop'))) {\n              this.config.loop.active = true;\n            }\n\n            // TODO: replace fullscreen.iosNative with this playsinline config option\n            // YouTube requires the playsinline in the URL\n            if (this.isYouTube) {\n              this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n              this.config.youtube.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n            } else {\n              this.config.playsinline = true;\n            }\n          }\n        } else {\n          // <div> with attributes\n          this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n          // Remove attribute\n          this.media.removeAttribute(this.config.attributes.embed.provider);\n        }\n\n        // Unsupported or missing provider\n        if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n          this.debug.error('Setup failed: Invalid provider');\n          return;\n        }\n\n        // Audio will come later for external providers\n        this.type = types.video;\n\n        break;\n\n      case 'video':\n      case 'audio':\n        this.type = type;\n        this.provider = providers.html5;\n\n        // Get config from attributes\n        if (this.media.hasAttribute('crossorigin')) {\n          this.config.crossorigin = true;\n        }\n        if (this.media.hasAttribute('autoplay')) {\n          this.config.autoplay = true;\n        }\n        if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n          this.config.playsinline = true;\n        }\n        if (this.media.hasAttribute('muted')) {\n          this.config.muted = true;\n        }\n        if (this.media.hasAttribute('loop')) {\n          this.config.loop.active = true;\n        }\n\n        break;\n\n      default:\n        this.debug.error('Setup failed: unsupported type');\n        return;\n    }\n\n    // Check for support again but with type\n    this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n    // If no support for even API, bail\n    if (!this.supported.api) {\n      this.debug.error('Setup failed: no support');\n      return;\n    }\n\n    this.eventListeners = [];\n\n    // Create listeners\n    this.listeners = new Listeners(this);\n\n    // Setup local storage for user settings\n    this.storage = new Storage(this);\n\n    // Store reference\n    this.media.plyr = this;\n\n    // Wrap media\n    if (!is.element(this.elements.container)) {\n      this.elements.container = createElement('div', { tabindex: 0 });\n      wrap(this.media, this.elements.container);\n    }\n\n    // Migrate custom properties from media to container (so they work 😉)\n    ui.migrateStyles.call(this);\n\n    // Add style hook\n    ui.addStyleHook.call(this);\n\n    // Setup media\n    media.setup.call(this);\n\n    // Listen for events if debugging\n    if (this.config.debug) {\n      on.call(this, this.elements.container, this.config.events.join(' '), (event) => {\n        this.debug.log(`event: ${event.type}`);\n      });\n    }\n\n    // Setup fullscreen\n    this.fullscreen = new Fullscreen(this);\n\n    // Setup interface\n    // If embed but not fully supported, build interface now to avoid flash of controls\n    if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n      ui.build.call(this);\n    }\n\n    // Container listeners\n    this.listeners.container();\n\n    // Global listeners\n    this.listeners.global();\n\n    // Setup ads if provided\n    if (this.config.ads.enabled) {\n      this.ads = new Ads(this);\n    }\n\n    // Autoplay if required\n    if (this.isHTML5 && this.config.autoplay) {\n      this.once('canplay', () => silencePromise(this.play()));\n    }\n\n    // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n    this.lastSeekTime = 0;\n\n    // Setup preview thumbnails if enabled\n    if (this.config.previewThumbnails.enabled) {\n      this.previewThumbnails = new PreviewThumbnails(this);\n    }\n  }\n\n  // ---------------------------------------\n  // API\n  // ---------------------------------------\n\n  /**\n   * Types and provider helpers\n   */\n  get isHTML5() {\n    return this.provider === providers.html5;\n  }\n\n  get isEmbed() {\n    return this.isYouTube || this.isVimeo;\n  }\n\n  get isYouTube() {\n    return this.provider === providers.youtube;\n  }\n\n  get isVimeo() {\n    return this.provider === providers.vimeo;\n  }\n\n  get isVideo() {\n    return this.type === types.video;\n  }\n\n  get isAudio() {\n    return this.type === types.audio;\n  }\n\n  /**\n   * Play the media, or play the advertisement (if they are not blocked)\n   */\n  play = () => {\n    if (!is.function(this.media.play)) {\n      return null;\n    }\n\n    // Intecept play with ads\n    if (this.ads && this.ads.enabled) {\n      this.ads.managerPromise.then(() => this.ads.play()).catch(() => silencePromise(this.media.play()));\n    }\n\n    // Return the promise (for HTML5)\n    return this.media.play();\n  };\n\n  /**\n   * Pause the media\n   */\n  pause = () => {\n    if (!this.playing || !is.function(this.media.pause)) {\n      return null;\n    }\n\n    return this.media.pause();\n  };\n\n  /**\n   * Get playing state\n   */\n  get playing() {\n    return Boolean(this.ready && !this.paused && !this.ended);\n  }\n\n  /**\n   * Get paused state\n   */\n  get paused() {\n    return Boolean(this.media.paused);\n  }\n\n  /**\n   * Get stopped state\n   */\n  get stopped() {\n    return Boolean(this.paused && this.currentTime === 0);\n  }\n\n  /**\n   * Get ended state\n   */\n  get ended() {\n    return Boolean(this.media.ended);\n  }\n\n  /**\n   * Toggle playback based on current status\n   * @param {Boolean} input\n   */\n  togglePlay = (input) => {\n    // Toggle based on current state if nothing passed\n    const toggle = is.boolean(input) ? input : !this.playing;\n\n    if (toggle) {\n      return this.play();\n    }\n\n    return this.pause();\n  };\n\n  /**\n   * Stop playback\n   */\n  stop = () => {\n    if (this.isHTML5) {\n      this.pause();\n      this.restart();\n    } else if (is.function(this.media.stop)) {\n      this.media.stop();\n    }\n  };\n\n  /**\n   * Restart playback\n   */\n  restart = () => {\n    this.currentTime = 0;\n  };\n\n  /**\n   * Rewind\n   * @param {Number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n   */\n  rewind = (seekTime) => {\n    this.currentTime -= is.number(seekTime) ? seekTime : this.config.seekTime;\n  };\n\n  /**\n   * Fast forward\n   * @param {Number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n   */\n  forward = (seekTime) => {\n    this.currentTime += is.number(seekTime) ? seekTime : this.config.seekTime;\n  };\n\n  /**\n   * Seek to a time\n   * @param {Number} input - where to seek to in seconds. Defaults to 0 (the start)\n   */\n  set currentTime(input) {\n    // Bail if media duration isn't available yet\n    if (!this.duration) {\n      return;\n    }\n\n    // Validate input\n    const inputIsValid = is.number(input) && input > 0;\n\n    // Set\n    this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n    // Logging\n    this.debug.log(`Seeking to ${this.currentTime} seconds`);\n  }\n\n  /**\n   * Get current time\n   */\n  get currentTime() {\n    return Number(this.media.currentTime);\n  }\n\n  /**\n   * Get buffered\n   */\n  get buffered() {\n    const { buffered } = this.media;\n\n    // YouTube / Vimeo return a float between 0-1\n    if (is.number(buffered)) {\n      return buffered;\n    }\n\n    // HTML5\n    // TODO: Handle buffered chunks of the media\n    // (i.e. seek to another section buffers only that section)\n    if (buffered && buffered.length && this.duration > 0) {\n      return buffered.end(0) / this.duration;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Get seeking status\n   */\n  get seeking() {\n    return Boolean(this.media.seeking);\n  }\n\n  /**\n   * Get the duration of the current media\n   */\n  get duration() {\n    // Faux duration set via config\n    const fauxDuration = parseFloat(this.config.duration);\n    // Media duration can be NaN or Infinity before the media has loaded\n    const realDuration = (this.media || {}).duration;\n    const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n    // If config duration is funky, use regular duration\n    return fauxDuration || duration;\n  }\n\n  /**\n   * Set the player volume\n   * @param {Number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n   */\n  set volume(value) {\n    let volume = value;\n    const max = 1;\n    const min = 0;\n\n    if (is.string(volume)) {\n      volume = Number(volume);\n    }\n\n    // Load volume from storage if no value specified\n    if (!is.number(volume)) {\n      volume = this.storage.get('volume');\n    }\n\n    // Use config if all else fails\n    if (!is.number(volume)) {\n      ({ volume } = this.config);\n    }\n\n    // Maximum is volumeMax\n    if (volume > max) {\n      volume = max;\n    }\n    // Minimum is volumeMin\n    if (volume < min) {\n      volume = min;\n    }\n\n    // Update config\n    this.config.volume = volume;\n\n    // Set the player volume\n    this.media.volume = volume;\n\n    // If muted, and we're increasing volume manually, reset muted state\n    if (!is.empty(value) && this.muted && volume > 0) {\n      this.muted = false;\n    }\n  }\n\n  /**\n   * Get the current player volume\n   */\n  get volume() {\n    return Number(this.media.volume);\n  }\n\n  /**\n   * Increase volume\n   * @param {Boolean} step - How much to decrease by (between 0 and 1)\n   */\n  increaseVolume = (step) => {\n    const volume = this.media.muted ? 0 : this.volume;\n    this.volume = volume + (is.number(step) ? step : 0);\n  };\n\n  /**\n   * Decrease volume\n   * @param {Boolean} step - How much to decrease by (between 0 and 1)\n   */\n  decreaseVolume = (step) => {\n    this.increaseVolume(-step);\n  };\n\n  /**\n   * Set muted state\n   * @param {Boolean} mute\n   */\n  set muted(mute) {\n    let toggle = mute;\n\n    // Load muted state from storage\n    if (!is.boolean(toggle)) {\n      toggle = this.storage.get('muted');\n    }\n\n    // Use config if all else fails\n    if (!is.boolean(toggle)) {\n      toggle = this.config.muted;\n    }\n\n    // Update config\n    this.config.muted = toggle;\n\n    // Set mute on the player\n    this.media.muted = toggle;\n  }\n\n  /**\n   * Get current muted state\n   */\n  get muted() {\n    return Boolean(this.media.muted);\n  }\n\n  /**\n   * Check if the media has audio\n   */\n  get hasAudio() {\n    // Assume yes for all non HTML5 (as we can't tell...)\n    if (!this.isHTML5) {\n      return true;\n    }\n\n    if (this.isAudio) {\n      return true;\n    }\n\n    // Get audio tracks\n    return (\n      Boolean(this.media.mozHasAudio) ||\n      Boolean(this.media.webkitAudioDecodedByteCount) ||\n      Boolean(this.media.audioTracks && this.media.audioTracks.length)\n    );\n  }\n\n  /**\n   * Set playback speed\n   * @param {Number} speed - the speed of playback (0.5-2.0)\n   */\n  set speed(input) {\n    let speed = null;\n\n    if (is.number(input)) {\n      speed = input;\n    }\n\n    if (!is.number(speed)) {\n      speed = this.storage.get('speed');\n    }\n\n    if (!is.number(speed)) {\n      speed = this.config.speed.selected;\n    }\n\n    // Clamp to min/max\n    const { minimumSpeed: min, maximumSpeed: max } = this;\n    speed = clamp(speed, min, max);\n\n    // Update config\n    this.config.speed.selected = speed;\n\n    // Set media speed\n    setTimeout(() => {\n      this.media.playbackRate = speed;\n    }, 0);\n  }\n\n  /**\n   * Get current playback speed\n   */\n  get speed() {\n    return Number(this.media.playbackRate);\n  }\n\n  /**\n   * Get the minimum allowed speed\n   */\n  get minimumSpeed() {\n    if (this.isYouTube) {\n      // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n      return Math.min(...this.options.speed);\n    }\n\n    if (this.isVimeo) {\n      // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n      return 0.5;\n    }\n\n    // https://stackoverflow.com/a/32320020/1191319\n    return 0.0625;\n  }\n\n  /**\n   * Get the maximum allowed speed\n   */\n  get maximumSpeed() {\n    if (this.isYouTube) {\n      // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n      return Math.max(...this.options.speed);\n    }\n\n    if (this.isVimeo) {\n      // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n      return 2;\n    }\n\n    // https://stackoverflow.com/a/32320020/1191319\n    return 16;\n  }\n\n  /**\n   * Set playback quality\n   * Currently HTML5 & YouTube only\n   * @param {Number} input - Quality level\n   */\n  set quality(input) {\n    const config = this.config.quality;\n    const options = this.options.quality;\n\n    if (!options.length) {\n      return;\n    }\n\n    let quality = [\n      !is.empty(input) && Number(input),\n      this.storage.get('quality'),\n      config.selected,\n      config.default,\n    ].find(is.number);\n\n    let updateStorage = true;\n\n    if (!options.includes(quality)) {\n      const value = closest(options, quality);\n      this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n      quality = value;\n\n      // Don't update storage if quality is not supported\n      updateStorage = false;\n    }\n\n    // Update config\n    config.selected = quality;\n\n    // Set quality\n    this.media.quality = quality;\n\n    // Save to storage\n    if (updateStorage) {\n      this.storage.set({ quality });\n    }\n  }\n\n  /**\n   * Get current quality level\n   */\n  get quality() {\n    return this.media.quality;\n  }\n\n  /**\n   * Toggle loop\n   * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n   * @param {Boolean} input - Whether to loop or not\n   */\n  set loop(input) {\n    const toggle = is.boolean(input) ? input : this.config.loop.active;\n    this.config.loop.active = toggle;\n    this.media.loop = toggle;\n\n    // Set default to be a true toggle\n    /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n  }\n\n  /**\n   * Get current loop state\n   */\n  get loop() {\n    return Boolean(this.media.loop);\n  }\n\n  /**\n   * Set new media source\n   * @param {Object} input - The new source object (see docs)\n   */\n  set source(input) {\n    source.change.call(this, input);\n  }\n\n  /**\n   * Get current source\n   */\n  get source() {\n    return this.media.currentSrc;\n  }\n\n  /**\n   * Get a download URL (either source or custom)\n   */\n  get download() {\n    const { download } = this.config.urls;\n\n    return is.url(download) ? download : this.source;\n  }\n\n  /**\n   * Set the download URL\n   */\n  set download(input) {\n    if (!is.url(input)) {\n      return;\n    }\n\n    this.config.urls.download = input;\n\n    controls.setDownloadUrl.call(this);\n  }\n\n  /**\n   * Set the poster image for a video\n   * @param {String} input - the URL for the new poster image\n   */\n  set poster(input) {\n    if (!this.isVideo) {\n      this.debug.warn('Poster can only be set for video');\n      return;\n    }\n\n    ui.setPoster.call(this, input, false).catch(() => {});\n  }\n\n  /**\n   * Get the current poster image\n   */\n  get poster() {\n    if (!this.isVideo) {\n      return null;\n    }\n\n    return this.media.getAttribute('poster') || this.media.getAttribute('data-poster');\n  }\n\n  /**\n   * Get the current aspect ratio in use\n   */\n  get ratio() {\n    if (!this.isVideo) {\n      return null;\n    }\n\n    const ratio = reduceAspectRatio(getAspectRatio.call(this));\n\n    return is.array(ratio) ? ratio.join(':') : ratio;\n  }\n\n  /**\n   * Set video aspect ratio\n   */\n  set ratio(input) {\n    if (!this.isVideo) {\n      this.debug.warn('Aspect ratio can only be set for video');\n      return;\n    }\n\n    if (!is.string(input) || !validateRatio(input)) {\n      this.debug.error(`Invalid aspect ratio specified (${input})`);\n      return;\n    }\n\n    this.config.ratio = input;\n\n    setAspectRatio.call(this);\n  }\n\n  /**\n   * Set the autoplay state\n   * @param {Boolean} input - Whether to autoplay or not\n   */\n  set autoplay(input) {\n    const toggle = is.boolean(input) ? input : this.config.autoplay;\n    this.config.autoplay = toggle;\n  }\n\n  /**\n   * Get the current autoplay state\n   */\n  get autoplay() {\n    return Boolean(this.config.autoplay);\n  }\n\n  /**\n   * Toggle captions\n   * @param {Boolean} input - Whether to enable captions\n   */\n  toggleCaptions(input) {\n    captions.toggle.call(this, input, false);\n  }\n\n  /**\n   * Set the caption track by index\n   * @param {Number} - Caption index\n   */\n  set currentTrack(input) {\n    captions.set.call(this, input, false);\n  }\n\n  /**\n   * Get the current caption track index (-1 if disabled)\n   */\n  get currentTrack() {\n    const { toggled, currentTrack } = this.captions;\n    return toggled ? currentTrack : -1;\n  }\n\n  /**\n   * Set the wanted language for captions\n   * Since tracks can be added later it won't update the actual caption track until there is a matching track\n   * @param {String} - Two character ISO language code (e.g. EN, FR, PT, etc)\n   */\n  set language(input) {\n    captions.setLanguage.call(this, input, false);\n  }\n\n  /**\n   * Get the current track's language\n   */\n  get language() {\n    return (captions.getCurrentTrack.call(this) || {}).language;\n  }\n\n  /**\n   * Toggle picture-in-picture playback on WebKit/MacOS\n   * TODO: update player with state, support, enabled\n   * TODO: detect outside changes\n   */\n  set pip(input) {\n    // Bail if no support\n    if (!support.pip) {\n      return;\n    }\n\n    // Toggle based on current state if not passed\n    const toggle = is.boolean(input) ? input : !this.pip;\n\n    // Toggle based on current state\n    // Safari\n    if (is.function(this.media.webkitSetPresentationMode)) {\n      this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n    }\n\n    // Chrome\n    if (is.function(this.media.requestPictureInPicture)) {\n      if (!this.pip && toggle) {\n        this.media.requestPictureInPicture();\n      } else if (this.pip && !toggle) {\n        document.exitPictureInPicture();\n      }\n    }\n  }\n\n  /**\n   * Get the current picture-in-picture state\n   */\n  get pip() {\n    if (!support.pip) {\n      return null;\n    }\n\n    // Safari\n    if (!is.empty(this.media.webkitPresentationMode)) {\n      return this.media.webkitPresentationMode === pip.active;\n    }\n\n    // Chrome\n    return this.media === document.pictureInPictureElement;\n  }\n\n  /**\n   * Trigger the airplay dialog\n   * TODO: update player with state, support, enabled\n   */\n  airplay = () => {\n    // Show dialog if supported\n    if (support.airplay) {\n      this.media.webkitShowPlaybackTargetPicker();\n    }\n  };\n\n  /**\n   * Toggle the player controls\n   * @param {Boolean} [toggle] - Whether to show the controls\n   */\n  toggleControls = (toggle) => {\n    // Don't toggle if missing UI support or if it's audio\n    if (this.supported.ui && !this.isAudio) {\n      // Get state before change\n      const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n      // Negate the argument if not undefined since adding the class to hides the controls\n      const force = typeof toggle === 'undefined' ? undefined : !toggle;\n      // Apply and get updated state\n      const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n      // Close menu\n      if (\n        hiding &&\n        is.array(this.config.controls) &&\n        this.config.controls.includes('settings') &&\n        !is.empty(this.config.settings)\n      ) {\n        controls.toggleMenu.call(this, false);\n      }\n\n      // Trigger event on change\n      if (hiding !== isHidden) {\n        const eventName = hiding ? 'controlshidden' : 'controlsshown';\n        triggerEvent.call(this, this.media, eventName);\n      }\n\n      return !hiding;\n    }\n\n    return false;\n  };\n\n  /**\n   * Add event listeners\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   */\n  on = (event, callback) => {\n    on.call(this, this.elements.container, event, callback);\n  };\n\n  /**\n   * Add event listeners once\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   */\n  once = (event, callback) => {\n    once.call(this, this.elements.container, event, callback);\n  };\n\n  /**\n   * Remove event listeners\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   */\n  off = (event, callback) => {\n    off(this.elements.container, event, callback);\n  };\n\n  /**\n   * Destroy an instance\n   * Event listeners are removed when elements are removed\n   * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n   * @param {Function} callback - Callback for when destroy is complete\n   * @param {Boolean} soft - Whether it's a soft destroy (for source changes etc)\n   */\n  destroy = (callback, soft = false) => {\n    if (!this.ready) {\n      return;\n    }\n\n    const done = () => {\n      // Reset overflow (incase destroyed while in fullscreen)\n      document.body.style.overflow = '';\n\n      // GC for embed\n      this.embed = null;\n\n      // If it's a soft destroy, make minimal changes\n      if (soft) {\n        if (Object.keys(this.elements).length) {\n          // Remove elements\n          removeElement(this.elements.buttons.play);\n          removeElement(this.elements.captions);\n          removeElement(this.elements.controls);\n          removeElement(this.elements.wrapper);\n\n          // Clear for GC\n          this.elements.buttons.play = null;\n          this.elements.captions = null;\n          this.elements.controls = null;\n          this.elements.wrapper = null;\n        }\n\n        // Callback\n        if (is.function(callback)) {\n          callback();\n        }\n      } else {\n        // Unbind listeners\n        unbindListeners.call(this);\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Replace the container with the original element provided\n        replaceElement(this.elements.original, this.elements.container);\n\n        // Event\n        triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n        // Callback\n        if (is.function(callback)) {\n          callback.call(this.elements.original);\n        }\n\n        // Reset state\n        this.ready = false;\n\n        // Clear for garbage collection\n        setTimeout(() => {\n          this.elements = null;\n          this.media = null;\n        }, 200);\n      }\n    };\n\n    // Stop playback\n    this.stop();\n\n    // Clear timeouts\n    clearTimeout(this.timers.loading);\n    clearTimeout(this.timers.controls);\n    clearTimeout(this.timers.resized);\n\n    // Provider specific stuff\n    if (this.isHTML5) {\n      // Restore native video controls\n      ui.toggleNativeControls.call(this, true);\n\n      // Clean up\n      done();\n    } else if (this.isYouTube) {\n      // Clear timers\n      clearInterval(this.timers.buffering);\n      clearInterval(this.timers.playing);\n\n      // Destroy YouTube API\n      if (this.embed !== null && is.function(this.embed.destroy)) {\n        this.embed.destroy();\n      }\n\n      // Clean up\n      done();\n    } else if (this.isVimeo) {\n      // Destroy Vimeo API\n      // then clean up (wait, to prevent postmessage errors)\n      if (this.embed !== null) {\n        this.embed.unload().then(done);\n      }\n\n      // Vimeo does not always return\n      setTimeout(done, 200);\n    }\n  };\n\n  /**\n   * Check for support for a mime type (HTML5 only)\n   * @param {String} type - Mime type\n   */\n  supports = (type) => support.mime.call(this, type);\n\n  /**\n   * Check for support\n   * @param {String} type - Player type (audio/video)\n   * @param {String} provider - Provider (html5/youtube/vimeo)\n   * @param {Boolean} inline - Where player has `playsinline` sttribute\n   */\n  static supported(type, provider, inline) {\n    return support.check(type, provider, inline);\n  }\n\n  /**\n   * Load an SVG sprite into the page\n   * @param {String} url - URL for the SVG sprite\n   * @param {String} [id] - Unique ID\n   */\n  static loadSprite(url, id) {\n    return loadSprite(url, id);\n  }\n\n  /**\n   * Setup multiple instances\n   * @param {*} selector\n   * @param {Object} options\n   */\n  static setup(selector, options = {}) {\n    let targets = null;\n\n    if (is.string(selector)) {\n      targets = Array.from(document.querySelectorAll(selector));\n    } else if (is.nodeList(selector)) {\n      targets = Array.from(selector);\n    } else if (is.array(selector)) {\n      targets = selector.filter(is.element);\n    }\n\n    if (is.empty(targets)) {\n      return null;\n    }\n\n    return targets.map((t) => new Plyr(t, options));\n  }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n"]}